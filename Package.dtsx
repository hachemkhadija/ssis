<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/10/2023 10:10:46 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-57MB2CN"
  DTS:CreatorName="DESKTOP-57MB2CN\pc"
  DTS:DTSID="{0A483937-9286-42C0-9E93-30C9AEB80345}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.180"
  DTS:LocaleID="1036"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="231"
  DTS:VersionGUID="{A31E69B3-71C5-4FF6-A4B1-70EB66C12062}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-57MB2CN.servers_location]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{1E73F70B-6F7F-4CF2-94C3-CFF1FF1F28B2}"
      DTS:ObjectName="DESKTOP-57MB2CN.servers_location">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-57MB2CN;Initial Catalog=servers_location;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.datawarehouse.testconn]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{8E76BA4C-FDA2-4276-BD4E-1D99C170095D}"
      DTS:ObjectName="DESKTOP-57MB2CN\INTELCIA.datawarehouse.testconn">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-57MB2CN\INTELCIA;User ID=testconn;Initial Catalog=datawarehouse;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAApm3hKj17yUKEQK66ofVncQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACpb3hiX0Uuc1UTbdHS5YU0POTSlZXCjkTP8l3/BWAhkQAAAAAOgAAAAAIAACAAAADKjU4TfeQmnRvpNXvSJXsS4RGPlGLcXn0dOIrfoL4j9CAAAACiJ7MaRFsG6gevUK/IvQXhgab6rs0GyoRfozQteJWU+UAAAADkTxFhFJYaZfQ9+HtRm4b5cmRCkizNivWCAE0TGlnPRvQ21bqvUMUn9J6cVP5js2/Gi9GpSAvNyYONPtMilF1o</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.datawarehouse2.testconn]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{11EB3F48-C2D9-4733-821F-A2A40884535E}"
      DTS:ObjectName="DESKTOP-57MB2CN\INTELCIA.datawarehouse2.testconn">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-57MB2CN\INTELCIA;User ID=testconn;Initial Catalog=datawarehouse2;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAApm3hKj17yUKEQK66ofVncQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACSubNLOEYjZ1uUIRMYUbwPiCaY+OpJBYBNUTrI/9vVQwAAAAAOgAAAAAIAACAAAAAHexUexFDBHSovatB3kvKdtav1Se3XdNwTof/2aNvP9CAAAABVQ38Gfv8d57i9NJaV2X4zOilxXKdQotNh7XUgRTxgC0AAAAAcsH2ktQVPQt02jBabF+Gb7uZ2ZfRyAcVOkHf0e6LS9U9xQ2fcbQUAv6b6P4R9G7X62JdTv0QLzJGgZwGXl554</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.intelcia.testconn]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{1BAD7723-0280-4459-90BD-BC80F66ADF9C}"
      DTS:ObjectName="DESKTOP-57MB2CN\INTELCIA.intelcia.testconn">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-57MB2CN\INTELCIA;User ID=testconn;Initial Catalog=intelcia;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAApm3hKj17yUKEQK66ofVncQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADOfR3SiwkNUcq+A2wGX4qgFHFa2b8fZP8WR0P9yibunAAAAAAOgAAAAAIAACAAAACjw5vFGNjlaSpzUF1sdjHCuA1BOZsOW4EEYEDEuKzIVCAAAACOZOqc2Xv6QmCkIHbJzpJaMnEq3SbnvIJ74BMQRCDE8kAAAABqBXH2n5U9uJh6dlADuYmEZ1SZkhB4Kjw9Rc2rWCBhEWKjswy6dnf4qUGCzPn5UPFKtTwVnvfTKuAu3W04fXqW</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.serverInfo.testconn]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{BB1FA16A-FD2A-4E60-9C96-455D8C28D3DB}"
      DTS:ObjectName="DESKTOP-57MB2CN\INTELCIA.serverInfo.testconn">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-57MB2CN\INTELCIA;User ID=testconn;Initial Catalog=serverInfo;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAApm3hKj17yUKEQK66ofVncQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAAFKoru4EtqrqmzFqNJyBtQLk0UWaVrqcOCZddq0Igi3QAAAAAOgAAAAAIAACAAAABQ30ZJkCXhBfXcQnMjgYX8JHctC9Q4O+JVtJ/749Nh8iAAAABcSPcGQDpS68quXEfMDgqQ55cKtnKGFXoZZBIg5z7udEAAAABXNB59u7cZ4vitSjReMEc8tFGFMgYDd4LzTJgDaL1o7xVbo/p5+D4ISRbfgIr7PeyHZ422TDIltF2Q0Cymof3b</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{F68FFBE7-5570-423A-BB31-3489C8BB5F25}"
      DTS:ObjectName="DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-57MB2CN\INTELCIA;User ID=testconn;Initial Catalog=StagingArea;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAApm3hKj17yUKEQK66ofVncQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAAwzLLUKVUQjSxGWx7yr+5O4ximhVPD2Z4l/ebCzYcbUAAAAAAOgAAAAAIAACAAAAAP0J47J4XB5KCTjE1Km/5L/dYRPpvW3XBU53kqP6b2kSAAAAC+fzuRCKqd4PNBcBXhHx1iNpp6sLOOcOfVPvYiL2yLhkAAAABaDeh59wxFbtCP0ha2YBWrA4hDi9PXQcL0R4/FxpzaihMaFRONLQmEALi5MeI6zLnb8EM9dVPVrPa67yRGXrhw</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.testconn]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D759ADA5-F939-4950-ACD3-5F5727BCA916}"
      DTS:ObjectName="DESKTOP-57MB2CN\INTELCIA.testconn">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ConnexionString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Server=DESKTOP-57MB2CN\INTELCIA;UID=testconn;Provider=MSOLEDBSQL;Database=datawarehouse;">
          <DTS:Password
            DTS:Name="PWD"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAApm3hKj17yUKEQK66ofVncQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAABN5D2PS6ODzbUawAGPWUZ/tKDeNuUUhTXZvjNHCLbMtAAAAAAOgAAAAAIAACAAAABSoF8c+PZlS9iQ9dJJM13LQWLm0oWd8dqdXC9VKLAyVyAAAABXKjNV8hfnF3Da0FhFxKjQHQ9EJfcxW3YNChp+HmDZ70AAAACOIiG+PAdcBT/eC9XRZWLwVStPjQaw+pzgW2TxALBIBY3iwKPMZphkpsXNMWDaMmBNxvjJ7PXCDKow55AIVXeH</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.testconn1]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{E83D0EE9-CD7A-4276-B602-5043CCBDF86A}"
      DTS:ObjectName="DESKTOP-57MB2CN\INTELCIA.testconn1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DESKTOP-57MB2CN\INTELCIA;User ID=testconn;Application Name=SSIS-Package-{E83D0EE9-CD7A-4276-B602-5043CCBDF86A}DESKTOP-57MB2CN\INTELCIA.testconn1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAApm3hKj17yUKEQK66ofVncQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAABOtL9Lczh+4EKy2eBaEIIvggwcitrqnq8hOhwIMobZJAAAAAAOgAAAAAIAACAAAABV7tWvklLDlXSxqj6QkbjvhcmJrVjE/uORCeOzPFORRSAAAABocMGmmsfvoO1s8AJ6g5kIcYKgi/LwQweQYUGwueSBxUAAAADwcuCFA0EZTV3y9A4q6ReyMAKKnFkEAHL7mbylMpE9DPyTk5llI9IByDnJ6xwND+Y7Okd7KYwYp8JQOSEbCWli</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{5839B4DB-F61D-41ED-8461-67A34A14BD04}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=E:\intelcia\destination\exporteddata.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{9FDDCD11-4114-4CC7-977C-322C90976F57}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=E:\intelcia\destination\test.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 2]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{7106B990-F7ED-4125-93B8-FC5392E9DBAF}"
      DTS:ObjectName="Excel Connection Manager 2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=E:\intelcia\destination\test.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DB3CE607-F436-443B-BA39-900D04B1C99C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnexionString">
      <DTS:VariableValue
        DTS:DataType="8">Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C4CF0CF0-1F49-43E6-BAB5-414B5EFEBE8B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot;+ @[User::ServerName] +&quot;;Initial Catalog=&quot;+ @[User::DataBaseName] +&quot;;User ID=&quot;+ @[User::UserName1] +&quot;;Password=&quot;+ @[User::pwd] + &quot;;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=DESKTOP-57MB2CN\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{59069BD6-6639-4255-B1D5-FBAD420EAF73}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DataBaseName">
      <DTS:VariableValue
        DTS:DataType="8">datawarehouse</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ABF01F6C-CFBF-4CB5-BE61-B3C71D0792CC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FullSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ADF34E47-B62E-4F19-944D-241C1E17E7EB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Id">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0F3197AD-5D3E-41F1-A224-C448B1A1283A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LastServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D0E4C70C-DFF9-4EE1-8293-2C5178CC21A4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="pwd">
      <DTS:VariableValue
        DTS:DataType="8">intelcia2023</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{250A0AAC-7F6B-4818-B359-0A9B3D7DDF14}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="QueryVal">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0A1F6B60-8107-41DA-AFE4-A6F40C546297}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ServerName">
      <DTS:VariableValue
        DTS:DataType="8">DESKTOP-57MB2CN\INTELCIA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{71682497-F5BA-466F-971F-ABB46F6519BA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableName">
      <DTS:VariableValue
        DTS:DataType="8">test1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{521D5D80-6C39-4FE1-A237-52E38EA4990E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Used">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2472837F-FFD3-4505-A3A7-BF6B4B89B9FA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="UserName1">
      <DTS:VariableValue
        DTS:DataType="8">testconn</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">21,7,OnError,19,OnExecStatusChanged,13,OnInformation,27,OnPipelinePostComponentCall,25,OnPipelinePostEndOfRowset,25,OnPipelinePostPrimeOutput,26,OnPipelinePreComponentCall,24,OnPipelinePreEndOfRowset,24,OnPipelinePrePrimeOutput,18,OnPipelineRowsSent,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,10,Diagnostic,12,DiagnosticEx</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="DiagnosticEx"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnExecStatusChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnQueryCancel"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{90323506-A3DD-43FC-9918-2D66A25681F3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{BB1FA16A-FD2A-4E60-9C96-455D8C28D3DB}"
          SQLTask:SqlStatementSource="SELECT Id,ServerName,UserName,pwd,DataBaseName,TableName FROM ServersLoc"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::FullSet" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{4E0A0E5F-F322-436E-92C5-7A94F5319AF6}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{36B684D5-D102-4179-B567-5291E8879C8D}"
        DTS:ObjectName="{36B684D5-D102-4179-B567-5291E8879C8D}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::FullSet" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Customer staging"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{B3EC4D6A-91F8-4E94-AA89-6ED5EA66DC0C}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Customer staging"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
                  description="Destination OLE DB"
                  name="Destination OLE DB"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset">[dbo].[ListCustomers]</property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                      errorOrTruncationOperation="Insérer"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrée de destination OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CustomerID]"
                          cachedDataType="r4"
                          cachedName="CustomerID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CustomerID]"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[CustomerID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[deleteat]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="deleteat"
                          externalMetadataColumnId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[deleteat]"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[deleteat]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[createat]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="createat"
                          externalMetadataColumnId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[createat]"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[createat]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[ManagerName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ManagerName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ManagerName]"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[ManagerName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[servername]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="servername"
                          externalMetadataColumnId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[servername]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Description]"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[Description]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Oid]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Oid"
                          externalMetadataColumnId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Oid]"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[Oid]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Oid]"
                          dataType="wstr"
                          length="255"
                          name="Oid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CustomerID]"
                          dataType="r8"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxQueues]"
                          dataType="r8"
                          name="MaxQueues" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxActiveOutboundCampaigns]"
                          dataType="r8"
                          name="MaxActiveOutboundCampaigns" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxAdmin]"
                          dataType="r8"
                          name="MaxAdmin" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxAgents]"
                          dataType="r8"
                          name="MaxAgents" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxAdmins]"
                          dataType="r8"
                          name="MaxAdmins" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxChatAgents]"
                          dataType="r8"
                          name="MaxChatAgents" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxEmailAgents]"
                          dataType="r8"
                          name="MaxEmailAgents" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxFaxAgents]"
                          dataType="r8"
                          name="MaxFaxAgents" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxSocialNetworkAgents]"
                          dataType="r8"
                          name="MaxSocialNetworkAgents" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AllowCTI]"
                          dataType="r8"
                          name="AllowCTI" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ValidityDate]"
                          dataType="wstr"
                          length="255"
                          name="ValidityDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxAutoLines]"
                          dataType="r8"
                          name="MaxAutoLines" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxLines]"
                          dataType="r8"
                          name="MaxLines" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxInboundLines]"
                          dataType="r8"
                          name="MaxInboundLines" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxOutboundLines]"
                          dataType="r8"
                          name="MaxOutboundLines" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxReporting]"
                          dataType="r8"
                          name="MaxReporting" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxSuperviseurs]"
                          dataType="r8"
                          name="MaxSuperviseurs" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RangeQueues]"
                          dataType="wstr"
                          length="255"
                          name="RangeQueues" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RangeAgents]"
                          dataType="wstr"
                          length="255"
                          name="RangeAgents" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RangeAgentsNoCti]"
                          dataType="wstr"
                          length="255"
                          name="RangeAgentsNoCti" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RangeDids]"
                          dataType="wstr"
                          length="255"
                          name="RangeDids" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RangeStations]"
                          dataType="wstr"
                          length="255"
                          name="RangeStations" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Type]"
                          dataType="r8"
                          name="Type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Enabled]"
                          dataType="r8"
                          name="Enabled" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ScripterOid]"
                          dataType="wstr"
                          length="255"
                          name="ScripterOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ProxyOid]"
                          dataType="wstr"
                          length="255"
                          name="ProxyOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ReportingOid]"
                          dataType="wstr"
                          length="255"
                          name="ReportingOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[SupervisionOid]"
                          dataType="wstr"
                          length="255"
                          name="SupervisionOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RecorderOid]"
                          dataType="wstr"
                          length="255"
                          name="RecorderOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RecorderConfiguration]"
                          dataType="nText"
                          name="RecorderConfiguration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ScriptFramesetUrl]"
                          dataType="wstr"
                          length="255"
                          name="ScriptFramesetUrl" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ScriptFramesetName]"
                          dataType="wstr"
                          length="255"
                          name="ScriptFramesetName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[VmcOid]"
                          dataType="wstr"
                          length="255"
                          name="VmcOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CrmOid]"
                          dataType="wstr"
                          length="255"
                          name="CrmOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FlashMediaOid]"
                          dataType="wstr"
                          length="255"
                          name="FlashMediaOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[TrunkType]"
                          dataType="r8"
                          name="TrunkType" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RecordsPathVideo]"
                          dataType="wstr"
                          length="255"
                          name="RecordsPathVideo" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RfbServerOid]"
                          dataType="wstr"
                          length="255"
                          name="RfbServerOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[OnMediaServiceOid]"
                          dataType="wstr"
                          length="255"
                          name="OnMediaServiceOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DatabaseManagerOid]"
                          dataType="wstr"
                          length="255"
                          name="DatabaseManagerOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AcdOid]"
                          dataType="wstr"
                          length="255"
                          name="AcdOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ProxySipOid]"
                          dataType="wstr"
                          length="255"
                          name="ProxySipOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DefaultPhoneNumber]"
                          dataType="wstr"
                          length="255"
                          name="DefaultPhoneNumber" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ForcePhoneDisplay]"
                          dataType="r8"
                          name="ForcePhoneDisplay" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ManagerName]"
                          dataType="wstr"
                          length="255"
                          name="ManagerName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ManagerTel]"
                          dataType="wstr"
                          length="255"
                          name="ManagerTel" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ManagerEmail]"
                          dataType="wstr"
                          length="255"
                          name="ManagerEmail" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[TechEmail]"
                          dataType="wstr"
                          length="255"
                          name="TechEmail" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[OutExclude]"
                          dataType="wstr"
                          length="255"
                          name="OutExclude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RecordsFileTemplate]"
                          dataType="wstr"
                          length="255"
                          name="RecordsFileTemplate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[UseArsFromConfigFile]"
                          dataType="r8"
                          name="UseArsFromConfigFile" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ArsList]"
                          dataType="wstr"
                          length="255"
                          name="ArsList" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallAcdDid]"
                          dataType="wstr"
                          length="255"
                          name="CallAcdDid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallAcdIvr]"
                          dataType="wstr"
                          length="255"
                          name="CallAcdIvr" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DefaultPhoneConfiguration]"
                          dataType="wstr"
                          length="255"
                          name="DefaultPhoneConfiguration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DocumentChannelGroup]"
                          dataType="wstr"
                          length="255"
                          name="DocumentChannelGroup" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AllowPredictiveCalls]"
                          dataType="r8"
                          name="AllowPredictiveCalls" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AllowProgressiveCalls]"
                          dataType="r8"
                          name="AllowProgressiveCalls" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Ofcom]"
                          dataType="r8"
                          name="Ofcom" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DefaultSettings]"
                          dataType="wstr"
                          length="255"
                          name="DefaultSettings" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ExtendedConfiguration]"
                          dataType="wstr"
                          length="255"
                          name="ExtendedConfiguration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DefaultTzId]"
                          dataType="wstr"
                          length="255"
                          name="DefaultTzId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ResetHour]"
                          dataType="dbTimeStamp"
                          name="ResetHour" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[VoiceAnalysisRight]"
                          dataType="r8"
                          name="VoiceAnalysisRight" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StrictPhoneNumberVerification]"
                          dataType="wstr"
                          length="255"
                          name="StrictPhoneNumberVerification" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AllowNoPhoneNumberVerification]"
                          dataType="wstr"
                          length="255"
                          name="AllowNoPhoneNumberVerification" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AgentPasswordNumeric]"
                          dataType="wstr"
                          length="255"
                          name="AgentPasswordNumeric" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AgentPasswordLength]"
                          dataType="wstr"
                          length="255"
                          name="AgentPasswordLength" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AdminPasswordComplex]"
                          dataType="wstr"
                          length="255"
                          name="AdminPasswordComplex" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AdminPasswordLength]"
                          dataType="wstr"
                          length="255"
                          name="AdminPasswordLength" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AdminPasswordValidity]"
                          dataType="wstr"
                          length="255"
                          name="AdminPasswordValidity" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RecordsFolderAgent]"
                          dataType="wstr"
                          length="255"
                          name="RecordsFolderAgent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[SurveyOid]"
                          dataType="wstr"
                          length="255"
                          name="SurveyOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[SsoOid]"
                          dataType="wstr"
                          length="255"
                          name="SsoOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ThorOid]"
                          dataType="wstr"
                          length="255"
                          name="ThorOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[BlocTelMenu]"
                          dataType="wstr"
                          length="255"
                          name="BlocTelMenu" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxSmsAgents]"
                          dataType="wstr"
                          length="255"
                          name="MaxSmsAgents" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[SoftPhoneCodecs]"
                          dataType="wstr"
                          length="255"
                          name="SoftPhoneCodecs" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[KeepRecordedFiles]"
                          dataType="wstr"
                          length="255"
                          name="KeepRecordedFiles" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[GlobalCallbacks]"
                          dataType="wstr"
                          length="255"
                          name="GlobalCallbacks" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FreeAnnoncement]"
                          dataType="wstr"
                          length="255"
                          name="FreeAnnoncement" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[SmartOutboundDidTreatment]"
                          dataType="wstr"
                          length="255"
                          name="SmartOutboundDidTreatment" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ActiveEncryptionKey]"
                          dataType="wstr"
                          length="255"
                          name="ActiveEncryptionKey" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RecordEncryptionPublicKey]"
                          dataType="wstr"
                          length="255"
                          name="RecordEncryptionPublicKey" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DisplayNumberLaw]"
                          dataType="wstr"
                          length="255"
                          name="DisplayNumberLaw" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StereoRecording]"
                          dataType="wstr"
                          length="255"
                          name="StereoRecording" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[HideAgentInformation]"
                          dataType="wstr"
                          length="255"
                          name="HideAgentInformation" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LocalRecording]"
                          dataType="wstr"
                          length="255"
                          name="LocalRecording" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerOid]"
                          dataType="wstr"
                          length="255"
                          name="customerOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[createat]"
                          dataType="wstr"
                          length="255"
                          name="createat" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[deleteat]"
                          dataType="wstr"
                          length="255"
                          name="deleteat" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          dataType="nText"
                          name="servername" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de destination OLE DB"
                      synchronousInputId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Customer staging\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Net.Mail;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]


public class ScriptMain : UserComponent
{

    private SqlConnection connection;
    private bool skipConnection = false;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        // base.PreExecute();
        /*
         * Add your code here
         */

        // Retrieve the connection string from a variable
        //string connectionString = Variables.ConnexionString;



        // Create a new SqlConnection object
        //connection = new SqlConnection(connectionString);

        // Open the connection
        //connection.Open();

        // Create a new SqlConnection
        //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        // "Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;"
        // connection = new SqlConnection(connectionString);
        // connection.Open();
        // string query = "INSERT INTO test1 (test, testdescription) VALUES ('teest', 'deeesc')";

        //using (SqlCommand command = new SqlCommand(query, connection))
        // {

        //command.Parameters.AddWithValue("@Value1", Row.Column1);
        //command.Parameters.AddWithValue("@Value2", Row.Column2);
        //command.ExecuteNonQuery();
        //}
        base.PreExecute();

        string variableCon = Variables.ConString;

        // Create a new SqlConnection
        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(variableCon);

        try
        {
            connection.Open();
            // Connection has been established successfully
        }
        catch (Exception ex)
        {
            // Handle the connection error
            // Log the error or take any necessary actions

            skipConnection = true;
            // Log the error and move to the next connection
            string errorLog = "Failed to establish a database connection: " + ex.Message;
            // Log the error to a table or file
            // You can use a SQL command or any other logging mechanism here
            // For example:
            LogErrorToTable(errorLog);
            SendEmailNotification(errorLog);


            //connection.Close();
            //throw new Exception("Failed to establish a database connection: " + ex.Message);
        }


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (connection.State == ConnectionState.Open)
            connection.Close();
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        // string variableValue = Variables.VariableName;

        // Use the connection to execute SQL queries and retrieve data
        /* using (SqlCommand command = new SqlCommand("SELECT * FROM test1", connection))
         {
              // Perform additional setup for the command if needed

             // Execute the query and retrieve the data
             using (SqlDataReader reader = command.ExecuteReader())
             {
                while (reader.Read())
                 {
                     // Process the data and populate the output rows
                     OutputcolBuffer.AddRow();
                     OutputcolBuffer.test = reader["test"].ToString();
                     OutputcolBuffer.testdescription = reader["testdescription"].ToString();
                 }
             }
         }
         */

        if (skipConnection)
            return; // Skip executing the query for this connection

        try
        {
            // Example: Execute a SQL query using the connection
            string variableTable = Variables.TableName;
            string varserver = Variables.ServerName;
            /*
                         string query = "INSERT INTO "+ variableTable+"(test, testdescription) VALUES ('teestt', 'deeesc')";


                         using (SqlCommand command = new SqlCommand(query, connection))
                         {
                             command.ExecuteNonQuery();
                         }*/
            if (variableTable == "ListCustomers")
            {
                using (SqlCommand command = new SqlCommand("SELECT * FROM " + variableTable, connection))
                {
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            /*try
                            {*/

                                // Stockez les valeurs dans les variables d'�criture
                                Output0Buffer.AddRow();
                                Output0Buffer.Description = reader["Description"].ToString();
                                Output0Buffer.Oid = reader["Oid"].ToString();
                                Output0Buffer.createat = reader["createat"].ToString();
                                Output0Buffer.deleteat = reader["deleteat"].ToString();

                                Output0Buffer.servername = varserver;

                                /*  //OutputcolBuffer.servernamee = varserver;

                               */


                                Output0Buffer.CustomerID = Convert.ToSingle(reader["CustomerID"]);
                                //OutputcolBuffer.ReasonID = (float)reader["ReasonID"];
                           /* }

                            catch (Exception ex)
                            {
                                // Handle the error
                                // You can choose to log the error, display a message, or take any other appropriate action
                                //OutputcolBuffer.Abandonn = null;
                            }*/
                            /* try
                             {
                                 OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                             }
                             catch (Exception ex)
                             {
                                 // Handle the error
                                 // You can choose to log the error, display a message, or take any other appropriate action
                                 //OutputcolBuffer.Abandonn = null;
                             }*/

                            //OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                            /* OutputcolBuffer.CallStatusGroup = Convert.ToSingle(reader["CallStatusGroup"]);
                             OutputcolBuffer.CallStatusNum = Convert.ToSingle(reader["CallStatusNum"]);
                             OutputcolBuffer.CallStatusDetail = Convert.ToSingle(reader["CallStatusDetail"]);
                             OutputcolBuffer.EndReason = Convert.ToSingle(reader["EndReason"]);
                             OutputcolBuffer.EndByAgent = Convert.ToSingle(reader["EndByAgent"]);
                             OutputcolBuffer.NoAgent = Convert.ToSingle(reader["NoAgent"]);*/


                        }
                    }
                }
            }

        }
        catch (Exception ex)
        {
            // Handle the database operation error
            // Log the error or take any necessary actions
            throw new Exception("Failed to execute database operation: " + ex.Message);
        }

    }


    private void LogErrorToTable(string errorLog)
    {
        // Implement your logging mechanism here
        // For example, execute a SQL command to insert the error log into a table

        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(connectionString);
        connection.Open();

        string logQuery = "INSERT INTO ErrorLogTable (ErrorMessage) VALUES (@ErrorMessage)";

        using (SqlCommand command = new SqlCommand(logQuery, connection))
        {
            command.Parameters.AddWithValue("@ErrorMessage", errorLog);
            command.ExecuteNonQuery();
        }



    }


    private void SendEmailNotification(string errorLog)
    {
        // Configure email settings
        string fromAddress = "khadijatest.project@gmail.com";
        string toAddress = "khadijaaitmyhachem2000@gmail.com";
        string subject = "Database Connection Failure";
        string body = "The following error occurred while establishing a database connection:\n\n" + errorLog;

        // Create and configure the email message
        MailMessage message = new MailMessage(fromAddress, toAddress, subject, body);

        // Send the email using SMTP client
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com", 587);
        smtpClient.EnableSsl = true;
        smtpClient.UseDefaultCredentials = false;
        smtpClient.Credentials = new System.Net.NetworkCredential("khadijatest.project@gmail.com", "dreqysshjweageid");

        try
        {
            smtpClient.Send(message);
        }
        catch (Exception ex)
        {
            throw new Exception("Failed to send email notification: " + ex.Message);
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_d1e5e1f3d1e24aabbb2212166ccc1ba1.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7a3c9b51-8934-4f2e-bf46-ad83f3befccc}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d1e5e1f3d1e24aabbb2212166ccc1ba1</RootNamespace>
    <AssemblyName>SC_d1e5e1f3d1e24aabbb2212166ccc1ba1</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_d1e5e1f3d1e24aabbb2212166ccc1ba1" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Single CustomerID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CustomerID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String deleteat
    {
        set
        {
            this[1] = value;
        }
    }
    public bool deleteat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String createat
    {
        set
        {
            this[2] = value;
        }
    }
    public bool createat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ManagerName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ManagerName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String servername
    {
        set
        {
            this[4] = value;
        }
    }
    public bool servername_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Description
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Description_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Oid
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Oid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d1e5e1f3d1e24aabbb2212166ccc1ba1.Properties.Settings.get_Default():SC_d1e5e1f3d1e24aabbb2212166ccc1ba1.Properties.Sett" +
    "ings")]

namespace SC_d1e5e1f3d1e24aabbb2212166ccc1ba1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConnexionString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConnexionString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ConString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DataBaseName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DataBaseName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Object FullSet
    {
        get
        {
            return (Object)(ParentComponent.ReadOnlyVariables["FullSet"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Id
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String LastServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["LastServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String pwd
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["pwd"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String QueryVal
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["QueryVal"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ServerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ServerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TableName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TableName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean Used
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["Used"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UserName1
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UserName1"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_d1e5e1f3d1e24aabbb2212166ccc1ba1</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_d1e5e1f3d1e24aabbb2212166ccc1ba1</msb:DisplayName>
    <msb:ProjectId>{E81B3CAE-5DA0-493D-8EC0-34E6169AE792}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_d1e5e1f3d1e24aabbb2212166ccc1ba1.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d1e5e1f3d1e24aabbb2212166ccc1ba1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_d1e5e1f3d1e24aabbb2212166ccc1ba1")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d1e5e1f3d1e24aabbb2212166ccc1ba1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d1e5e1f3d1e24aabbb2212166ccc1ba1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d1e5e1f3d1e24aabbb2212166ccc1ba1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d1e5e1f3d1e24aabbb2212166ccc1ba1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d1e5e1f3d1e24aabbb2212166ccc1ba1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_d1e5e1f3d1e24aabbb2212166ccc1ba1.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
dQQiABoAeiYAAAAAhgieASIAGgCgJgAAAACGCG8BIgAaAMYmAAAAAIYIywBZABoA7CYAAAAAhghe
ACIAGgASJwAAAACDGJMHBgAaABonAAAAAJMIOwdJARoARicAAAAAkwjiAU4BGgBNJwAAAACTCO4B
UwEaAFUnAAAAAJYIcAlZARsAXCcAAAAAhhiTBwYAGwBkJwAAAACRGJkHXgEbAAAAAQBsBAAAAQBs
BAAAAQA0BwAAAgCFCAAAAwC7BgAAAQAhBAAAAQAhBAAAAQAhBAAAAQAhBAAAAQAhBAAAAQAhBAAA
AQAhBAAAAQAhBAAAAQAhBAAAAQAhBAAAAQAhBAAAAQAhBAAAAQAhBAAAAQAhBAAAAQAGCQAAAgCg
BwAAAwDpCAAABAC7BgAAAQDBCQAAAQDBCQAAAQAhBAkAkwcBABEAkwcGABkAkwcKACkAkwcQADEA
kwcQADkAkwcQAEEAkwcQAEkAkwcQAFEAkwcQAFkAkwcQAGEAkwcQAGkAkwcGAMkAkwcGAOkAkwcV
APkAkwcGALkA/QMGAHEAkwcQAAEBtgUGAHkADgEiAAkBIgkmALkACAQGAAEBMAIsAAEBIgIGAAkB
mAo9AIEAkwdDAIEAAwdKABkBiQVPAMEAYwQiACEBZgFUABkBsgBZACkBKAIGAHkAkwcQAIEA8Qhj
ADEBFARpAEEBiApxAJEAkweBAJkAkweJAJkAewWPAJkAwwiPAEkBkweUAJkAswiaAJkA8QChAKEA
kwenAKEAkgWxAKEAcwUBAGEBkwcQAKEAdAoGAKEAYQkGAKEAZAlZALkAkwcGALkAigC7ALkAmQjC
AMEAkwcGALkAbwjIAGkBiQXOALkAXwrVAHEBMArbAJkBVAHiAJkBewrrANEAkwfxAPEAkwcGAC4A
CwCFAS4AEwCOAS4AGwCtAS4AIwC2AS4AKwDfAS4AMwDfAS4AOwDfAS4AQwC2AS4ASwDlAS4AUwDf
AS4AWwD8AUMAYwBGAuMAawBGAkEBewBGAmkDcwCtAYkDcwCtARsAMgBdAHUAtwADAAEABgAPAAcA
GwAIAB0AAAB/AGIBAADmBGYBAAA6CWoBAABjBWYBAAAtCWoBAABPBWYBAACSAWoBAAALBWYBAACx
AWoBAAAiBWYBAACCBmoBAAA4BWYBAADYAGoBAAD8BGYBAABTBGoBAABFBGoBAACBAWoBAABZCW4B
AACvAHIBAACIB2oBAAD6AGoBAAB5BGoBAACiAWoBAABzAWoBAADPAGYBAABiAGoBAAA/B3YBAAAC
AnsBAAB0CYABAQAIAAMAAQAJAAUAAQAKAAcAAQALAAkAAQAMAAsAAQANAA0AAQAOAA8AAQAPABEA
AQAQABMAAQARABUAAQASABcAAQATABkAAQAUABsAAQAVAB0AAgAgAB8AAgAhACEAAgAiACMAAgAj
ACUAAgAkACcAAgAlACkAAgAmACsAAgAnAC0AAgAoAC8AAgApADEAAgAqADMAAgArADUAAgAtADcA
AgAuADkAAQAvADkAAgAwADsABIAAAAEAAAAAAAAAAAAAAAAAOgAAAAQAAAAAAAAAAAAAAPkAogAA
AAAADwAAAAAAAAAAAAAAAgHLCQAAAAAEAAAAAAAAAAAAAAD5AJYAAAAAAAQAAAAAAAAAAAAAAPkA
mwUAAAAADwAAAAAAAAAAAAAAAgHwCQAAAAAPAAAAAAAAAAAAAAACAcUGAAAAAAAAAAABAAAA7gcA
AAAAAAAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRl
eHQxMDAAU0NfZDFlNWUxZjNkMWUyNGFhYmJiMjIxMjE2NmNjYzFiYTEAZ2V0X1VzZXJOYW1lMQBJ
bnQzMgA8TW9kdWxlPgBzZXRfQ3VzdG9tZXJJRABHZXRPdXRwdXRJRABTeXN0ZW0uRGF0YQBtc2Nv
cmxpYgBnZXRfSWQAUmVhZABNYXJrT3V0cHV0c0ZpbmlzaGVkAGdldF9Vc2VkAHNldF9PaWQARGJD
b21tYW5kAFNxbENvbW1hbmQAU2VuZABnZXRfcHdkAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2Fn
ZQBNYWlsTWVzc2FnZQBMb2dFcnJvclRvVGFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAVG9TaW5nbGUAZ2V0X1RhYmxlTmFtZQBnZXRfRGF0YUJhc2VO
YW1lAHNldF9NYW5hZ2VyTmFtZQBnZXRfU2VydmVyTmFtZQBzZXRfc2VydmVybmFtZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAGdldF9T
dGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb25uZWN0aW9uU3RhdGUAQ29tcGlsZXJHZW5lcmF0
ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2Vt
Ymx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNv
bmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxh
dGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
UHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBnZXRfQ29uU3RyaW5nAGdldF9Db25uZXhpb25TdHJpbmcAVG9TdHJpbmcAZXJy
b3JMb2cAZ2V0X1F1ZXJ5VmFsAE5ldHdvcmtDcmVkZW50aWFsAFN5c3RlbS5Db21wb25lbnRNb2Rl
bABTeXN0ZW0uTmV0Lk1haWwAU0NfZDFlNWUxZjNkMWUyNGFhYmJiMjIxMjE2NmNjYzFiYTEuZGxs
AHNldF9DdXN0b21lcklEX0lzTnVsbABzZXRfT2lkX0lzTnVsbABzZXRfTWFuYWdlck5hbWVfSXNO
dWxsAHNldF9zZXJ2ZXJuYW1lX0lzTnVsbABzZXRfRGVzY3JpcHRpb25fSXNOdWxsAHNldF9jcmVh
dGVhdF9Jc051bGwAc2V0X2RlbGV0ZWF0X0lzTnVsbABTZXROdWxsAHNldF9FbmFibGVTc2wAZ2V0
X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAEJvb2xlYW4AT3BlbgBTY3JpcHRNYWlu
AFNlbmRFbWFpbE5vdGlmaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAERiQ29ubmVj
dGlvbgBTcWxDb25uZWN0aW9uAHNraXBDb25uZWN0aW9uAGNvbm5lY3Rpb24ASW52YWxpZE9wZXJh
dGlvbkV4Y2VwdGlvbgBzZXRfRGVzY3JpcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJ
bmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGlt
ZVdyYXAARGJEYXRhUmVhZGVyAFNxbERhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBPdXRwdXQwQnVm
ZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBTcWxQYXJhbWV0ZXIAZ2V0X0xhc3RT
ZXJ2ZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1
bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2QxZTVlMWYzZDFlMjRh
YWJiYjIyMTIxNjZjY2MxYmExLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dp
bmdNb2RlcwBTQ19kMWU1ZTFmM2QxZTI0YWFiYmIyMjEyMTY2Y2NjMWJhMS5Qcm9wZXJ0aWVzAGdl
dF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMA
U2V0dGluZ3MAc2V0X0NyZWRlbnRpYWxzAHNldF9Vc2VEZWZhdWx0Q3JlZGVudGlhbHMAQ29ubmVj
dGlvbnMAQnVmZmVycwBnZXRfUGFyYW1ldGVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1
dFJvd3MAQ29uY2F0AHNldF9jcmVhdGVhdABzZXRfZGVsZXRlYXQAT2JqZWN0AFN5c3RlbS5OZXQA
Z2V0X0Z1bGxTZXQAU2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAU3lzdGVtLkRhdGEuU3FsQ2xp
ZW50AFNtdHBDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAQ29udmVydABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlBpcGVsaW5lSG9zdABJQ3JlZGVudGlhbHNCeUhvc3QAUHJpbWVPdXRwdXQAR2V0VmFsdWVX
aXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4
dABBZGRSb3cAZ2V0X0Fzc2VtYmx5AEV4ZWN1dGVOb25RdWVyeQBvcF9FcXVhbGl0eQAAV0YAYQBp
AGwAZQBkACAAdABvACAAZQBzAHQAYQBiAGwAaQBzAGgAIABhACAAZABhAHQAYQBiAGEAcwBlACAA
YwBvAG4AbgBlAGMAdABpAG8AbgA6ACAAABtMAGkAcwB0AEMAdQBzAHQAbwBtAGUAcgBzAAAdUwBF
AEwARQBDAFQAIAAqACAARgBSAE8ATQAgAAAXRABlAHMAYwByAGkAcAB0AGkAbwBuAAAHTwBpAGQA
ABFjAHIAZQBhAHQAZQBhAHQAABFkAGUAbABlAHQAZQBhAHQAABVDAHUAcwB0AG8AbQBlAHIASQBE
AABNRgBhAGkAbABlAGQAIAB0AG8AIABlAHgAZQBjAHUAdABlACAAZABhAHQAYQBiAGEAcwBlACAA
bwBwAGUAcgBhAHQAaQBvAG4AOgAgAACAzUQAYQB0AGEAIABTAG8AdQByAGMAZQA9AEQARQBTAEsA
VABPAFAALQA1ADcATQBCADIAQwBOAFwASQBOAFQARQBMAEMASQBBADsASQBuAGkAdABpAGEAbAAg
AEMAYQB0AGEAbABvAGcAPQBzAGUAcgB2AGUAcgBJAG4AZgBvADsAVQBzAGUAcgAgAEkARAA9AHQA
ZQBzAHQAYwBvAG4AbgA7AFAAYQBzAHMAdwBvAHIAZAA9AGkAbgB0AGUAbABjAGkAYQAyADAAMgAz
AAF/SQBOAFMARQBSAFQAIABJAE4AVABPACAARQByAHIAbwByAEwAbwBnAFQAYQBiAGwAZQAgACgA
RQByAHIAbwByAE0AZQBzAHMAYQBnAGUAKQAgAFYAQQBMAFUARQBTACAAKABAAEUAcgByAG8AcgBN
AGUAcwBzAGEAZwBlACkAABtAAEUAcgByAG8AcgBNAGUAcwBzAGEAZwBlAAA7awBoAGEAZABpAGoA
YQB0AGUAcwB0AC4AcAByAG8AagBlAGMAdABAAGcAbQBhAGkAbAAuAGMAbwBtAABBawBoAGEAZABp
AGoAYQBhAGkAdABtAHkAaABhAGMAaABlAG0AMgAwADAAMABAAGcAbQBhAGkAbAAuAGMAbwBtAAA3
RABhAHQAYQBiAGEAcwBlACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAdQByAGUAAICR
VABoAGUAIABmAG8AbABsAG8AdwBpAG4AZwAgAGUAcgByAG8AcgAgAG8AYwBjAHUAcgByAGUAZAAg
AHcAaABpAGwAZQAgAGUAcwB0AGEAYgBsAGkAcwBoAGkAbgBnACAAYQAgAGQAYQB0AGEAYgBhAHMA
ZQAgAGMAbwBuAG4AZQBjAHQAaQBvAG4AOgAKAAoAAB1zAG0AdABwAC4AZwBtAGEAaQBsAC4AYwBv
AG0AACFkAHIAZQBxAHkAcwBzAGgAagB3AGUAYQBnAGUAaQBkAABHRgBhAGkAbABlAGQAIAB0AG8A
IABzAGUAbgBkACAAZQBtAGEAaQBsACAAbgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AOgAgAACAm0kA
cwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAg
AHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAA
dABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAA
H0MAbwBuAG4AZQB4AGkAbwBuAFMAdAByAGkAbgBnAAATQwBvAG4AUwB0AHIAaQBuAGcAABlEAGEA
dABhAEIAYQBzAGUATgBhAG0AZQAAD0YAdQBsAGwAUwBlAHQAAAVJAGQAABVMAGEAcwB0AFMAZQBy
AHYAZQByAAAHcAB3AGQAABFRAHUAZQByAHkAVgBhAGwAABVTAGUAcgB2AGUAcgBOAGEAbQBlAAAT
VABhAGIAbABlAE4AYQBtAGUAAAlVAHMAZQBkAAATVQBzAGUAcgBOAGEAbQBlADEAAHFTAEMAXwBk
ADEAZQA1AGUAMQBmADMAZAAxAGUAMgA0AGEAYQBiAGIAYgAyADIAMQAyADEANgA2AGMAYwBjADEA
YgBhADEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAHMV87oRlZ9C
h8CRDcdsuGkABCABAQgDIAABBSABARERBCABAQ4FIAEBEXEGBwMOEj0OAyAADgUAAg4ODgUgABGA
iQoHBQ4OEkESRRI9BQACAg4OBiACAQ4SOQQgABJFBCABHA4EAAEMHAMgAAIFBwIOEkEFIAASgJkH
IAISgJ0OHAMgAAgLBwYODg4SSRJNEj0HIAQBDg4ODgUgAgEOCAQgAQECBSACAQ4OBiABARKAqQUg
AQESSQkgAwESVR0IElkFIAIBCBwDBwEIBgACCBJZDgUgAR0ICAUgABKAtQYgARKAuRwFAAASgL0G
IAEcEoDBCAABEoDNEYDRBSAAEoDVByACAQ4SgNUIt3pcVhk04IkIiYRdzYCAzJEDBhI5AgYCAwYS
FAMGEhgDBhIMAwYSXQMGEmkDBhJtAwYSIAQgAQEMCyAEAQgdCB0SVRJZBSABARJdAyAAHAQAABJp
BAAAEm0FAAEBEm0EAAASIAMAAAEDKAAMAygAAgMoAA4DKAAcAygACAQIABJpBAgAEm0ECAASIAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfZDFl
NWUxZjNkMWUyNGFhYmJiMjIxMjE2NmNjYzFiYTEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAy
MwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAuEUAAAAAAAAAAAAA0kUAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMRFAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5k
bGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBk
ADEAZQA1AGUAMQBmADMAZAAxAGUAMgA0AGEAYQBiAGIAYgAyADIAMQAyADEANgA2AGMAYwBjADEA
YgBhADEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGQAMQBlADUAZQAxAGYAMwBkADEA
ZQAyADQAYQBhAGIAYgBiADIAMgAxADIAMQA2ADYAYwBjAGMAMQBiAGEAMQAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZAAxAGUANQBlADEA
ZgAzAGQAMQBlADIANABhAGEAYgBiAGIAMgAyADEAMgAxADYANgBjAGMAYwAxAGIAYQAxAC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGQAMQBlADUAZQAxAGYA
MwBkADEAZQAyADQAYQBhAGIAYgBiADIAMgAxADIAMQA2ADYAYwBjAGMAMQBiAGEAMQAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA5DUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_d1e5e1f3d1e24aabbb2212166ccc1ba1</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ConnexionString,User::ConString,User::DataBaseName,User::FullSet,User::Id,User::LastServer,User::pwd,User::QueryVal,User::ServerName,User::TableName,User::Used,User::UserName1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">FF</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[CustomerID]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[CustomerID]"
                          name="CustomerID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[deleteat]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[deleteat]"
                          name="deleteat" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[createat]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[createat]"
                          name="createat" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[ManagerName]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[ManagerName]"
                          name="ManagerName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[servername]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[servername]"
                          name="servername" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[Description]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[Oid]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0].Columns[Oid]"
                          name="Oid" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Customer staging.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Customer staging\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Customer staging\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{52708DDB-9D48-4D35-A3CC-FF8097C6C08D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F68FFBE7-5570-423A-BB31-3489C8BB5F25}"
              SQLTask:SqlStatementSource="UPDATE c&#xA;SET c.ID_Tranche = th.ID_Tranche&#xA;FROM ODCalls c&#xA;INNER JOIN Dim_Tranch th ON CAST(c.CallUniversalTime AS TIME) BETWEEN CAST(LEFT(th.Tranche_30, 5) AS TIME)&#xA;AND CAST(RIGHT(th.Tranche_30, 5) AS TIME)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Expression Task"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{A7A641A0-E720-4337-B44D-AB1163D39F70}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Expression Task"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::TableName]" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Stagig ListCampaigns"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{B18CD198-EB04-4006-AC1C-1BFF0AD4BC56}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Stagig ListCampaigns"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Staging CallStatus"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{BF5AA7DB-AEE1-4138-BC88-AFCC84581C3E}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Staging CallStatus"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Colonne dérivée;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;0"
                  description="Crée de nouvelles valeurs de colonne en appliquant des expressions aux colonnes d'entrée de transformation. Créez de nouvelles colonnes ou remplacez celles qui existent déjà. Par exemple, concaténez les valeurs de la colonne 'prénom' et de la colonne 'nom' pour créer une colonne 'nom complet'."
                  name="Colonne dérivée"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Inputs[Entrée de colonne dérivée]"
                      description="Entrée de la transformation de colonnes dérivées"
                      name="Entrée de colonne dérivée">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Inputs[Entrée de colonne dérivée].Columns[StatusDetail]"
                          cachedDataType="r4"
                          cachedName="StatusDetail"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusDetail]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Inputs[Entrée de colonne dérivée].Columns[StatusCode]"
                          cachedDataType="r4"
                          cachedName="StatusCode"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Inputs[Entrée de colonne dérivée].Columns[StatusGroup]"
                          cachedDataType="r4"
                          cachedName="StatusGroup"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusGroup]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Inputs[Entrée de colonne dérivée].Columns[customerId]"
                          cachedDataType="r4"
                          cachedName="customerId"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[customerId]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Outputs[Sortie de colonne dérivée]"
                      description="Sortie par défaut de la transformation de colonnes dérivées"
                      exclusionGroup="1"
                      name="Sortie de colonne dérivée"
                      synchronousInputId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Inputs[Entrée de colonne dérivée]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Outputs[Sortie de colonne dérivée].Columns[Id_DimStatus]"
                          dataType="wstr"
                          errorOrTruncationOperation="Calcul"
                          errorRowDisposition="FailComponent"
                          length="223"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Outputs[Sortie de colonne dérivée].Columns[Id_DimStatus]"
                          name="Id_DimStatus"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Expression de colonne dérivée"
                              name="Expression">(DT_WSTR,55)#{Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[customerId]} + "_" + (DT_WSTR,55)#{Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusCode]} + "_" + (DT_WSTR,55)#{Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusGroup]} + "_" + (DT_WSTR,55)#{Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusDetail]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Expression claire de colonne dérivée"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,55)customerId + "_" + (DT_WSTR,55)StatusCode + "_" + (DT_WSTR,55)StatusGroup + "_" + (DT_WSTR,55)StatusDetail</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée]"
                      description="Sortie d'erreur de la transformation de colonnes dérivées"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de colonne dérivée"
                      synchronousInputId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Inputs[Entrée de colonne dérivée]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
                  description="Destination OLE DB"
                  name="Destination OLE DB"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset">[dbo].[ListCallStatus]</property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                      errorOrTruncationOperation="Insérer"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrée de destination OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[servername]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="servername"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[servername]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[deleteat]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="deleteat"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[deleteat]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[deleteat]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[createat]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="createat"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[createat]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[createat]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[customerOid]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="customerOid"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerOid]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[customerOid]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Shared]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Shared"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Shared]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Shared]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[ValidQuota]"
                          cachedDataType="r4"
                          cachedName="ValidQuota"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ValidQuota]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[ValidQuota]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Currency]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Currency"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Currency]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Currency]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Cost]"
                          cachedDataType="r4"
                          cachedName="Cost"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Cost]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Cost]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Defaut]"
                          cachedDataType="r4"
                          cachedName="Defaut"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Defaut]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Defaut]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Argued]"
                          cachedDataType="r4"
                          cachedName="Argued"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Argued]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Argued]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Positive]"
                          cachedDataType="r4"
                          cachedName="Positive"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Positive]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Positive]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Comment]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Comment"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Comment]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Comment]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[StatusText]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="StatusText"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusText]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusText]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[StatusDetail]"
                          cachedDataType="r4"
                          cachedName="StatusDetail"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusDetail]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusDetail]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[StatusCode]"
                          cachedDataType="r4"
                          cachedName="StatusCode"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusCode]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[StatusGroup]"
                          cachedDataType="r4"
                          cachedName="StatusGroup"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusGroup]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusGroup]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[customerId]"
                          cachedDataType="r4"
                          cachedName="customerId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerId]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[customerId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[customer]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="customer"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customer]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[customer]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Id_DimStatus]"
                          cachedDataType="wstr"
                          cachedLength="223"
                          cachedName="Id_DimStatus"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Id_DimStatus]"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Outputs[Sortie de colonne dérivée].Columns[Id_DimStatus]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerId]"
                          dataType="r8"
                          name="customerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customer]"
                          dataType="wstr"
                          length="255"
                          name="customer" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Oid]"
                          dataType="wstr"
                          length="255"
                          name="Oid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusGroup]"
                          dataType="r8"
                          name="StatusGroup" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusCode]"
                          dataType="r8"
                          name="StatusCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusDetail]"
                          dataType="r8"
                          name="StatusDetail" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusText]"
                          dataType="wstr"
                          length="255"
                          name="StatusText" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Comment]"
                          dataType="wstr"
                          length="255"
                          name="Comment" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Positive]"
                          dataType="r8"
                          name="Positive" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Argued]"
                          dataType="r8"
                          name="Argued" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Defaut]"
                          dataType="r8"
                          name="Defaut" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Cost]"
                          dataType="r8"
                          name="Cost" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Currency]"
                          dataType="wstr"
                          length="255"
                          name="Currency" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ValidQuota]"
                          dataType="r8"
                          name="ValidQuota" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Shared]"
                          dataType="wstr"
                          length="255"
                          name="Shared" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerOid]"
                          dataType="wstr"
                          length="255"
                          name="customerOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[createat]"
                          dataType="wstr"
                          length="255"
                          name="createat" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[deleteat]"
                          dataType="wstr"
                          length="255"
                          name="deleteat" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          dataType="nText"
                          name="servername" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Id_DimStatus]"
                          dataType="wstr"
                          length="255"
                          name="Id_DimStatus" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de destination OLE DB"
                      synchronousInputId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Staging CallStatus\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DataBaseName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DataBaseName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Object FullSet
    {
        get
        {
            return (Object)(ParentComponent.ReadOnlyVariables["FullSet"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Id
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String LastServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["LastServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String pwd
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["pwd"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String QueryVal
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["QueryVal"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ServerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ServerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TableName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TableName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean Used
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["Used"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UserName1
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UserName1"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Net.Mail;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]



public class ScriptMain : UserComponent
{

    private SqlConnection connection;
    private bool skipConnection = false;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        // base.PreExecute();
        /*
         * Add your code here
         */

        // Retrieve the connection string from a variable
        //string connectionString = Variables.ConnexionString;



        // Create a new SqlConnection object
        //connection = new SqlConnection(connectionString);

        // Open the connection
        //connection.Open();

        // Create a new SqlConnection
        //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        // "Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;"
        // connection = new SqlConnection(connectionString);
        // connection.Open();
        // string query = "INSERT INTO test1 (test, testdescription) VALUES ('teest', 'deeesc')";

        //using (SqlCommand command = new SqlCommand(query, connection))
        // {

        //command.Parameters.AddWithValue("@Value1", Row.Column1);
        //command.Parameters.AddWithValue("@Value2", Row.Column2);
        //command.ExecuteNonQuery();
        //}
        base.PreExecute();

        string variableCon = Variables.ConString;

        // Create a new SqlConnection
        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(variableCon);

        try
        {
            connection.Open();
            // Connection has been established successfully
        }
        catch (Exception ex)
        {
            // Handle the connection error
            // Log the error or take any necessary actions

            skipConnection = true;
            // Log the error and move to the next connection
            string errorLog = "Failed to establish a database connection: " + ex.Message;
            // Log the error to a table or file
            // You can use a SQL command or any other logging mechanism here
            // For example:
            LogErrorToTable(errorLog);
            SendEmailNotification(errorLog);


            //connection.Close();
            //throw new Exception("Failed to establish a database connection: " + ex.Message);
        }


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (connection.State == ConnectionState.Open)
            connection.Close();
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        // string variableValue = Variables.VariableName;

        // Use the connection to execute SQL queries and retrieve data
        /* using (SqlCommand command = new SqlCommand("SELECT * FROM test1", connection))
         {
              // Perform additional setup for the command if needed

             // Execute the query and retrieve the data
             using (SqlDataReader reader = command.ExecuteReader())
             {
                while (reader.Read())
                 {
                     // Process the data and populate the output rows
                     OutputcolBuffer.AddRow();
                     OutputcolBuffer.test = reader["test"].ToString();
                     OutputcolBuffer.testdescription = reader["testdescription"].ToString();
                 }
             }
         }
         */

        if (skipConnection)
            return; // Skip executing the query for this connection

        try
        {
            // Example: Execute a SQL query using the connection
            string variableTable = Variables.TableName;
            string varserver = Variables.ServerName;
            /*
                         string query = "INSERT INTO "+ variableTable+"(test, testdescription) VALUES ('teestt', 'deeesc')";


                         using (SqlCommand command = new SqlCommand(query, connection))
                         {
                             command.ExecuteNonQuery();
                         }*/
            if (variableTable == "ListCallStatus")
            {
                using (SqlCommand command = new SqlCommand("SELECT * FROM " + variableTable, connection))
                {
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            // Stockez les valeurs dans les variables d'écriture
                            Output0Buffer.AddRow();
                            Output0Buffer.customer = reader["customer"].ToString();
                            Output0Buffer.StatusText = reader["StatusText"].ToString();
                            Output0Buffer.Comment = reader["Comment"].ToString();
                            Output0Buffer.Currency = reader["Currency"].ToString();
                            Output0Buffer.Shared = reader["Shared"].ToString();
                            Output0Buffer.customerOid = reader["customerOid"].ToString();
                            Output0Buffer.createat = reader["createat"].ToString();
                            Output0Buffer.deleteat = reader["deleteat"].ToString();
                           // Output0Buffer.deleteat = reader["deleteat"].ToString();

                            Output0Buffer.servername = varserver;

                            /*  //OutputcolBuffer.servernamee = varserver;

                           */


                            Output0Buffer.customerId = Convert.ToSingle(reader["customerId"]);
                            Output0Buffer.StatusGroup = Convert.ToSingle(reader["StatusGroup"]);
                            Output0Buffer.StatusCode = Convert.ToSingle(reader["StatusCode"]);
                            Output0Buffer.StatusDetail = Convert.ToSingle(reader["StatusDetail"]);
                            Output0Buffer.Positive = Convert.ToSingle(reader["Positive"]);
                            Output0Buffer.Argued = Convert.ToSingle(reader["Argued"]);
                            Output0Buffer.Defaut = Convert.ToSingle(reader["Defaut"]);
                            Output0Buffer.Cost = Convert.ToSingle(reader["Cost"]);
                            Output0Buffer.ValidQuota = Convert.ToSingle(reader["ValidQuota"]);


                            //OutputcolBuffer.ReasonID = (float)reader["ReasonID"];


                            /* try
                             {
                                 OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                             }
                             catch (Exception ex)
                             {
                                 // Handle the error
                                 // You can choose to log the error, display a message, or take any other appropriate action
                                 //OutputcolBuffer.Abandonn = null;
                             }*/

                            //OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                            /* OutputcolBuffer.CallStatusGroup = Convert.ToSingle(reader["CallStatusGroup"]);
                             OutputcolBuffer.CallStatusNum = Convert.ToSingle(reader["CallStatusNum"]);
                             OutputcolBuffer.CallStatusDetail = Convert.ToSingle(reader["CallStatusDetail"]);
                             OutputcolBuffer.EndReason = Convert.ToSingle(reader["EndReason"]);
                             OutputcolBuffer.EndByAgent = Convert.ToSingle(reader["EndByAgent"]);
                             OutputcolBuffer.NoAgent = Convert.ToSingle(reader["NoAgent"]);*/


                        }
                    }
                }
            }

        }
        catch (Exception ex)
        {
            // Handle the database operation error
            // Log the error or take any necessary actions
            throw new Exception("Failed to execute database operation: " + ex.Message);
        }

    }


    private void LogErrorToTable(string errorLog)
    {
        // Implement your logging mechanism here
        // For example, execute a SQL command to insert the error log into a table

        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(connectionString);
        connection.Open();

        string logQuery = "INSERT INTO ErrorLogTable (ErrorMessage) VALUES (@ErrorMessage)";

        using (SqlCommand command = new SqlCommand(logQuery, connection))
        {
            command.Parameters.AddWithValue("@ErrorMessage", errorLog);
            command.ExecuteNonQuery();
        }



    }


    private void SendEmailNotification(string errorLog)
    {
        // Configure email settings
        string fromAddress = "khadijatest.project@gmail.com";
        string toAddress = "khadijaaitmyhachem2000@gmail.com";
        string subject = "Database Connection Failure";
        string body = "The following error occurred while establishing a database connection:\n\n" + errorLog;

        // Create and configure the email message
        MailMessage message = new MailMessage(fromAddress, toAddress, subject, body);

        // Send the email using SMTP client
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com", 587);
        smtpClient.EnableSsl = true;
        smtpClient.UseDefaultCredentials = false;
        smtpClient.Credentials = new System.Net.NetworkCredential("khadijatest.project@gmail.com", "dreqysshjweageid");

        try
        {
            smtpClient.Send(message);
        }
        catch (Exception ex)
        {
            throw new Exception("Failed to send email notification: " + ex.Message);
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String servername
    {
        set
        {
            this[0] = value;
        }
    }
    public bool servername_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String deleteat
    {
        set
        {
            this[1] = value;
        }
    }
    public bool deleteat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String createat
    {
        set
        {
            this[2] = value;
        }
    }
    public bool createat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String customerOid
    {
        set
        {
            this[3] = value;
        }
    }
    public bool customerOid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Shared
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Shared_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single ValidQuota
    {
        set
        {
            this[5] = value;
        }
    }
    public bool ValidQuota_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Currency
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Currency_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Cost
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Cost_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Defaut
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Defaut_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Argued
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Argued_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Positive
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Positive_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Comment
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Comment_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StatusText
    {
        set
        {
            this[12] = value;
        }
    }
    public bool StatusText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single StatusDetail
    {
        set
        {
            this[13] = value;
        }
    }
    public bool StatusDetail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single StatusCode
    {
        set
        {
            this[14] = value;
        }
    }
    public bool StatusCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single StatusGroup
    {
        set
        {
            this[15] = value;
        }
    }
    public bool StatusGroup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single customerId
    {
        set
        {
            this[16] = value;
        }
    }
    public bool customerId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String customer
    {
        set
        {
            this[17] = value;
        }
    }
    public bool customer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_88b270ebd2db4ff3bbedd3278760d85e.Properties.Settings.get_Default():SC_88b270ebd2db4ff3bbedd3278760d85e.Properties.Sett" +
    "ings")]

namespace SC_88b270ebd2db4ff3bbedd3278760d85e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_88b270ebd2db4ff3bbedd3278760d85e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_88b270ebd2db4ff3bbedd3278760d85e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_88b270ebd2db4ff3bbedd3278760d85e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_88b270ebd2db4ff3bbedd3278760d85e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_88b270ebd2db4ff3bbedd3278760d85e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_88b270ebd2db4ff3bbedd3278760d85e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_88b270ebd2db4ff3bbedd3278760d85e</msb:DisplayName>
    <msb:ProjectId>{8290191F-283A-43D3-8D62-80339DB2E7CF}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_88b270ebd2db4ff3bbedd3278760d85e.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_88b270ebd2db4ff3bbedd3278760d85e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_88b270ebd2db4ff3bbedd3278760d85e")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_88b270ebd2db4ff3bbedd3278760d85e.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{fdc76a0d-9860-42ec-8447-af400db2ec8a}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_88b270ebd2db4ff3bbedd3278760d85e</RootNamespace>
    <AssemblyName>SC_88b270ebd2db4ff3bbedd3278760d85e</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_88b270ebd2db4ff3bbedd3278760d85e" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_88b270ebd2db4ff3bbedd3278760d85e.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AAAAAIYIegQiADAAXSgAAAAAhgi5ASIAMACDKAAAAACGCHgKRQEwAKQoAAAAAIYIhwBxADAAyigA
AAAAhginCCIAMADwKAAAAACGCP8AIgAwABYpAAAAAIYImgQiADAAPCkAAAAAhgjKASIAMABiKQAA
AACGCKsBIgAwAIgpAAAAAIYIwQBZADAArikAAAAAhgg6ACIAMADUKQAAAACDGLYIBgAwANwpAAAA
AJMIUQhJATAACCoAAAAAkwgOAk4BMAAPKgAAAACTCBoCUwEwABcqAAAAAJYIkwpZATEAHioAAAAA
hhi2CAYAMQAmKgAAAACRGLwIXgExAAAAAQCRBAAAAQCRBAAAAQBKCAAAAgCoCQAAAwDBBwAAAQBN
BAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAA
AQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBN
BAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAA
AQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQBNBAAAAQApCgAAAgDDCAAAAwAM
CgAABADBBwAAAQDwCgAAAQDwCgAAAQBNBAkAtggBABEAtggGABkAtggKACkAtggQADEAtggQADkA
tggQAEEAtggQAEkAtggQAFEAtggQAFkAtggQAGEAtggQAGkAtggGAMkAtggGAOkAtggVAPkAtggG
ALkAKQQGAHEAtggQAAEBzAYGAHkASgEiAAkBRQomALkANAQGAAEBXAIsAAEBTgIGAAkB9ws9AIEA
tghDAIEAGQhKABkBnwZPAMEAiAQiACEBogFUABkBnQBZACkBVAIGAHkAtggQAIEAFApjADEBQARp
AEEB5wtxAJEAtgiBAJkAtgiJAJkAkQaPAJkA5gmPAEkBtgiUAJkA1gmaAJkA+gChAKEAtginAKEA
qAaxAKEAiQYBAFkBtggQAKEAxgsGAKEAhAoGAKEAhwpZALkAtggGALkAVwC7ALkAvAnCAMEAtggG
ALkAkgnIAGkBnwbOALkAsQvVAHEBggvbAJkBkAHiAJkB2gvrANEAtgjxAPEAtggGAC4ACwCFAS4A
EwCOAS4AGwCtAS4AIwC2AS4AKwDfAS4AMwDfAS4AOwDfAS4AQwC2AS4ASwDlAS4AUwDfAS4AWwD8
AUMAYwBGAuMAawBGAkEBewBGAgkGcwCtASkGcwCtARsAMgBdAHUAtwADAAEABgAlAAcAMAAIADIA
AADdAWIBAACZBWYBAABdCmIBAAAaBmYBAABQCmIBAAAGBmYBAADZAGIBAABsBWYBAAC6AGIBAABI
BWYBAABzAGoBAAAcBWYBAADRC2IBAAB5BmYBAAAjC2oBAABBBmYBAABgC2oBAABRBmYBAADOAGoB
AABaBWYBAABXBGoBAACvBWYBAADECmIBAAAuBmYBAAB3C2IBAABjBmYBAADjBGoBAADDBWYBAAA/
AWoBAACDBWYBAADyB2oBAADbBWYBAACSAGoBAAAyBWYBAABpCGIBAADyBWYBAAB+BGIBAAC9AWIB
AAB8Cm4BAACaAHIBAACrCGIBAAADAWIBAACeBGIBAADOAWIBAACvAWIBAADFAGYBAAA+AGIBAABV
CHYBAAAuAnsBAACXCoABAQAIAAMAAQAJAAUAAQAKAAcAAQALAAkAAQAMAAsAAQANAA0AAQAOAA8A
AQAPABEAAQAQABMAAQARABUAAQASABcAAQATABkAAQAUABsAAQAVAB0AAQAWAB8AAQAXACEAAQAY
ACMAAQAZACUAAQAaACcAAQAbACkAAQAcACsAAQAdAC0AAQAeAC8AAQAfADEAAQAgADMAAQAhADUA
AQAiADcAAQAjADkAAQAkADsAAQAlAD0AAQAmAD8AAQAnAEEAAQAoAEMAAQApAEUAAQAqAEcAAQAr
AEkAAgA2AEsAAgA3AE0AAgA4AE8AAgA5AFEAAgA6AFMAAgA7AFUAAgA8AFcAAgA9AFkAAgA+AFsA
AgA/AF0AAgBAAF8AAgBCAGEAAgBDAGMAAQBEAGMAAgBFAGUABIAAAAEAAAAAAAAAAAAAAAAABwEA
AAQAAAAAAAAAAAAAAPkAfgAAAAAADwAAAAAAAAAAAAAAAgH6CgAAAAAEAAAAAAAAAAAAAAD5AGMA
AAAAAAQAAAAAAAAAAAAAAPkAsQYAAAAADwAAAAAAAAAAAAAAAgEoCwAAAAAPAAAAAAAAAAAAAAAC
AcsHAAAAAAAAAAABAAAAEQkAAAAAAElEVFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElE
VFNFdmFsdWF0b3JDb250ZXh0MTAwAGdldF9Vc2VyTmFtZTEASW50MzIAPE1vZHVsZT4AR2V0T3V0
cHV0SUQAU3lzdGVtLkRhdGEAc2V0X1ZhbGlkUXVvdGEAbXNjb3JsaWIAZ2V0X0lkAHNldF9jdXN0
b21lcklkAFJlYWQATWFya091dHB1dHNGaW5pc2hlZABzZXRfU2hhcmVkAGdldF9Vc2VkAHNldF9B
cmd1ZWQAc2V0X2N1c3RvbWVyT2lkAERiQ29tbWFuZABTcWxDb21tYW5kAFNlbmQAZ2V0X3B3ZABT
Q184OGIyNzBlYmQyZGI0ZmYzYmJlZGQzMjc4NzYwZDg1ZQBkZWZhdWx0SW5zdGFuY2UAc2V0X1N0
YXR1c0NvZGUAZ2V0X01lc3NhZ2UATWFpbE1lc3NhZ2UATG9nRXJyb3JUb1RhYmxlAElEaXNwb3Nh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFRvU2luZ2xlAGdldF9UYWJs
ZU5hbWUAZ2V0X0RhdGFCYXNlTmFtZQBnZXRfU2VydmVyTmFtZQBzZXRfc2VydmVybmFtZQBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAGdl
dF9TdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb25uZWN0aW9uU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUAc2V0X1Bvc2l0aXZl
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAZ2V0X0NvblN0cmluZwBUb1N0cmluZwBlcnJvckxv
ZwBnZXRfUXVlcnlWYWwATmV0d29ya0NyZWRlbnRpYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFN5
c3RlbS5OZXQuTWFpbABzZXRfU3RhdHVzRGV0YWlsAFNDXzg4YjI3MGViZDJkYjRmZjNiYmVkZDMy
Nzg3NjBkODVlLmRsbABzZXRfVmFsaWRRdW90YV9Jc051bGwAc2V0X2N1c3RvbWVySWRfSXNOdWxs
AHNldF9TaGFyZWRfSXNOdWxsAHNldF9Bcmd1ZWRfSXNOdWxsAHNldF9jdXN0b21lck9pZF9Jc051
bGwAc2V0X1N0YXR1c0NvZGVfSXNOdWxsAHNldF9zZXJ2ZXJuYW1lX0lzTnVsbABzZXRfUG9zaXRp
dmVfSXNOdWxsAHNldF9TdGF0dXNEZXRhaWxfSXNOdWxsAHNldF9TdGF0dXNHcm91cF9Jc051bGwA
c2V0X2N1c3RvbWVyX0lzTnVsbABzZXRfY3JlYXRlYXRfSXNOdWxsAHNldF9kZWxldGVhdF9Jc051
bGwAc2V0X0NvbW1lbnRfSXNOdWxsAHNldF9Db3N0X0lzTnVsbABzZXRfRGVmYXV0X0lzTnVsbABz
ZXRfU3RhdHVzVGV4dF9Jc051bGwAc2V0X0N1cnJlbmN5X0lzTnVsbABTZXROdWxsAHNldF9FbmFi
bGVTc2wAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAEJvb2xlYW4AT3BlbgBT
Y3JpcHRNYWluAFNlbmRFbWFpbE5vdGlmaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9u
AERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAHNraXBDb25uZWN0aW9uAGNvbm5lY3Rpb24ASW52
YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8AT3V0
cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABz
ZXRfU3RhdHVzR3JvdXAARGJEYXRhUmVhZGVyAFNxbERhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBP
dXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5h
Z2VyAHNldF9jdXN0b21lcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIA
U3FsUGFyYW1ldGVyAGdldF9MYXN0U2VydmVyAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTQ184OGIyNzBlYmQyZGI0ZmYzYmJlZGQzMjc4NzYwZDg1ZS5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfODhiMjcwZWJkMmRiNGZmM2JiZWRkMzI3
ODc2MGQ4NWUuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5k
ZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAHNldF9DcmVkZW50aWFscwBzZXRfVXNlRGVm
YXVsdENyZWRlbnRpYWxzAENvbm5lY3Rpb25zAEJ1ZmZlcnMAZ2V0X1BhcmFtZXRlcnMARmluaXNo
T3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABzZXRfY3JlYXRlYXQAc2V0X2RlbGV0
ZWF0AE9iamVjdABTeXN0ZW0uTmV0AGdldF9GdWxsU2V0AFNldEVuZE9mUm93c2V0AGdldF9EZWZh
dWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABTbXRwQ2xpZW50AHNldF9Db21tZW50AFVzZXJDb21w
b25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVy
LlR4U2NyaXB0AENvbnZlcnQAc2V0X0Nvc3QATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhv
c3QASUNyZWRlbnRpYWxzQnlIb3N0AHNldF9EZWZhdXQAUHJpbWVPdXRwdXQAc2V0X1N0YXR1c1Rl
eHQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZh
bHVhdG9yQ29udGV4dABBZGRSb3cAc2V0X0N1cnJlbmN5AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9u
UXVlcnkAb3BfRXF1YWxpdHkAAABXRgBhAGkAbABlAGQAIAB0AG8AIABlAHMAdABhAGIAbABpAHMA
aAAgAGEAIABkAGEAdABhAGIAYQBzAGUAIABjAG8AbgBuAGUAYwB0AGkAbwBuADoAIAAAHUwAaQBz
AHQAQwBhAGwAbABTAHQAYQB0AHUAcwAAHVMARQBMAEUAQwBUACAAKgAgAEYAUgBPAE0AIAAAEWMA
dQBzAHQAbwBtAGUAcgAAFVMAdABhAHQAdQBzAFQAZQB4AHQAAA9DAG8AbQBtAGUAbgB0AAARQwB1
AHIAcgBlAG4AYwB5AAANUwBoAGEAcgBlAGQAABdjAHUAcwB0AG8AbQBlAHIATwBpAGQAABFjAHIA
ZQBhAHQAZQBhAHQAABFkAGUAbABlAHQAZQBhAHQAABVjAHUAcwB0AG8AbQBlAHIASQBkAAAXUwB0
AGEAdAB1AHMARwByAG8AdQBwAAAVUwB0AGEAdAB1AHMAQwBvAGQAZQAAGVMAdABhAHQAdQBzAEQA
ZQB0AGEAaQBsAAARUABvAHMAaQB0AGkAdgBlAAANQQByAGcAdQBlAGQAAA1EAGUAZgBhAHUAdAAA
CUMAbwBzAHQAABVWAGEAbABpAGQAUQB1AG8AdABhAABNRgBhAGkAbABlAGQAIAB0AG8AIABlAHgA
ZQBjAHUAdABlACAAZABhAHQAYQBiAGEAcwBlACAAbwBwAGUAcgBhAHQAaQBvAG4AOgAgAACAzUQA
YQB0AGEAIABTAG8AdQByAGMAZQA9AEQARQBTAEsAVABPAFAALQA1ADcATQBCADIAQwBOAFwASQBO
AFQARQBMAEMASQBBADsASQBuAGkAdABpAGEAbAAgAEMAYQB0AGEAbABvAGcAPQBzAGUAcgB2AGUA
cgBJAG4AZgBvADsAVQBzAGUAcgAgAEkARAA9AHQAZQBzAHQAYwBvAG4AbgA7AFAAYQBzAHMAdwBv
AHIAZAA9AGkAbgB0AGUAbABjAGkAYQAyADAAMgAzAAF/SQBOAFMARQBSAFQAIABJAE4AVABPACAA
RQByAHIAbwByAEwAbwBnAFQAYQBiAGwAZQAgACgARQByAHIAbwByAE0AZQBzAHMAYQBnAGUAKQAg
AFYAQQBMAFUARQBTACAAKABAAEUAcgByAG8AcgBNAGUAcwBzAGEAZwBlACkAABtAAEUAcgByAG8A
cgBNAGUAcwBzAGEAZwBlAAA7awBoAGEAZABpAGoAYQB0AGUAcwB0AC4AcAByAG8AagBlAGMAdABA
AGcAbQBhAGkAbAAuAGMAbwBtAABBawBoAGEAZABpAGoAYQBhAGkAdABtAHkAaABhAGMAaABlAG0A
MgAwADAAMABAAGcAbQBhAGkAbAAuAGMAbwBtAAA3RABhAHQAYQBiAGEAcwBlACAAQwBvAG4AbgBl
AGMAdABpAG8AbgAgAEYAYQBpAGwAdQByAGUAAICRVABoAGUAIABmAG8AbABsAG8AdwBpAG4AZwAg
AGUAcgByAG8AcgAgAG8AYwBjAHUAcgByAGUAZAAgAHcAaABpAGwAZQAgAGUAcwB0AGEAYgBsAGkA
cwBoAGkAbgBnACAAYQAgAGQAYQB0AGEAYgBhAHMAZQAgAGMAbwBuAG4AZQBjAHQAaQBvAG4AOgAK
AAoAAB1zAG0AdABwAC4AZwBtAGEAaQBsAC4AYwBvAG0AACFkAHIAZQBxAHkAcwBzAGgAagB3AGUA
YQBnAGUAaQBkAABHRgBhAGkAbABlAGQAIAB0AG8AIABzAGUAbgBkACAAZQBtAGEAaQBsACAAbgBv
AHQAaQBmAGkAYwBhAHQAaQBvAG4AOgAgAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5
ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMA
aQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBz
AHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAAE0MAbwBuAFMAdAByAGkAbgBnAAAZRABhAHQA
YQBCAGEAcwBlAE4AYQBtAGUAAA9GAHUAbABsAFMAZQB0AAAFSQBkAAAVTABhAHMAdABTAGUAcgB2
AGUAcgAAB3AAdwBkAAARUQB1AGUAcgB5AFYAYQBsAAAVUwBlAHIAdgBlAHIATgBhAG0AZQAAE1QA
YQBiAGwAZQBOAGEAbQBlAAAJVQBzAGUAZAAAE1UAcwBlAHIATgBhAG0AZQAxAABxUwBDAF8AOAA4
AGIAMgA3ADAAZQBiAGQAMgBkAGIANABmAGYAMwBiAGIAZQBkAGQAMwAyADcAOAA3ADYAMABkADgA
NQBlAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAquLp6IhKUTao0
T92NnyfXAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFxBgcDDhI9DgMgAA4FAAIODg4FIAARgIkK
BwUODhJBEkUSPQUAAgIODgYgAgEOEjkEIAASRQQgARwOBAABDBwDIAACBQcCDhJBBSAAEoCZByAC
EoCdDhwDIAAICwcGDg4OEkkSTRI9ByAEAQ4ODg4FIAIBDggEIAEBAgUgAgEODgYgAQESgKkFIAEB
EkkJIAMBElUdCBJZBSACAQgcAwcBCAYAAggSWQ4FIAEdCAgFIAASgLUGIAESgLkcBQAAEoC9BiAB
HBKAwQgAARKAzRGA0QUgABKA1QcgAgEOEoDVCLd6XFYZNOCJCImEXc2AgMyRAwYSOQIGAgMGEhQD
BhIYAwYSDAMGEl0DBhJpAwYSbQMGEiAEIAEBDAsgBAEIHQgdElUSWQUgAQESXQMgABwEAAASaQQA
ABJtBQABARJtBAAAEiADAAABAygADgMoAAIDKAAMAygAHAMoAAgECAASaQQIABJtBAgAEiAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzg4YjI3
MGViZDJkYjRmZjNiYmVkZDMyNzg3NjBkODVlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMA
AEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUS
Lk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEhNAAAAAAAAAAAAAGJNAAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABUTQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwDAAAA
AAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAa
AAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAA
AAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADgAOABi
ADIANwAwAGUAYgBkADIAZABiADQAZgBmADMAYgBiAGUAZABkADMAMgA3ADgANwA2ADAAZAA4ADUA
ZQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAAB
AEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOAA4AGIAMgA3ADAAZQBiAGQAMgBkAGIA
NABmAGYAMwBiAGIAZQBkAGQAMwAyADcAOAA3ADYAMABkADgANQBlAC4AZABsAGwAAABIABIAAQBM
AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIA
MAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA4ADgAYgAyADcAMABlAGIA
ZAAyAGQAYgA0AGYAZgAzAGIAYgBlAGQAZAAzADIANwA4ADcANgAwAGQAOAA1AGUALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOAA4AGIAMgA3ADAAZQBiAGQA
MgBkAGIANABmAGYAMwBiAGIAZQBkAGQAMwAyADcAOAA3ADYAMABkADgANQBlAAAANAAIAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUA
bQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAB0PQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_88b270ebd2db4ff3bbedd3278760d85e</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ConString,User::DataBaseName,User::FullSet,User::Id,User::LastServer,User::pwd,User::QueryVal,User::ServerName,User::TableName,User::Used,User::UserName1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">21</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[servername]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[servername]"
                          name="servername" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[deleteat]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[deleteat]"
                          name="deleteat" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[createat]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[createat]"
                          name="createat" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[customerOid]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[customerOid]"
                          name="customerOid" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Shared]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Shared]"
                          name="Shared" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[ValidQuota]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[ValidQuota]"
                          name="ValidQuota" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Currency]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Currency]"
                          name="Currency" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Cost]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Cost]"
                          name="Cost" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Defaut]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Defaut]"
                          name="Defaut" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Argued]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Argued]"
                          name="Argued" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Positive]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Positive]"
                          name="Positive" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Comment]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[Comment]"
                          name="Comment" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusText]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusText]"
                          name="StatusText" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusDetail]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusDetail]"
                          name="StatusDetail" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusCode]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusCode]"
                          name="StatusCode" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusGroup]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[StatusGroup]"
                          name="StatusGroup" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[customerId]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[customerId]"
                          name="customerId" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[customer]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0].Columns[customer]"
                          name="customer" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Staging CallStatus.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Inputs[Entrée de colonne dérivée]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Staging CallStatus\Script Component.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Loop Container\Staging CallStatus.Paths[Sortie de colonne dérivée]"
                  endId="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                  name="Sortie de colonne dérivée"
                  startId="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée.Outputs[Sortie de colonne dérivée]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Staging CallType"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{129371FF-D67C-4569-A1C5-A87949B37627}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Staging CallType"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Staging CallType\CallType"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="CallType"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DataBaseName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DataBaseName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Object FullSet
    {
        get
        {
            return (Object)(ParentComponent.ReadOnlyVariables["FullSet"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Id
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String LastServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["LastServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String pwd
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["pwd"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String QueryVal
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["QueryVal"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ServerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ServerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TableName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TableName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean Used
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["Used"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UserName1
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UserName1"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;
using System.Net.Mail;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]

public class ScriptMain : UserComponent
{

    private SqlConnection connection;
    private bool skipConnection = false;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        // base.PreExecute();
        /*
         * Add your code here
         */

        // Retrieve the connection string from a variable
        //string connectionString = Variables.ConnexionString;



        // Create a new SqlConnection object
        //connection = new SqlConnection(connectionString);

        // Open the connection
        //connection.Open();

        // Create a new SqlConnection
        //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        // "Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;"
        // connection = new SqlConnection(connectionString);
        // connection.Open();
        // string query = "INSERT INTO test1 (test, testdescription) VALUES ('teest', 'deeesc')";

        //using (SqlCommand command = new SqlCommand(query, connection))
        // {

        //command.Parameters.AddWithValue("@Value1", Row.Column1);
        //command.Parameters.AddWithValue("@Value2", Row.Column2);
        //command.ExecuteNonQuery();
        //}
        base.PreExecute();

        string variableCon = Variables.ConString;

        // Create a new SqlConnection
        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(variableCon);

        try
        {
            connection.Open();
            // Connection has been established successfully
        }
        catch (Exception ex)
        {
            // Handle the connection error
            // Log the error or take any necessary actions

            skipConnection = true;
            // Log the error and move to the next connection
            string errorLog = "Failed to establish a database connection: " + ex.Message;
            // Log the error to a table or file
            // You can use a SQL command or any other logging mechanism here
            // For example:
            LogErrorToTable(errorLog);
            SendEmailNotification(errorLog);


            //connection.Close();
            //throw new Exception("Failed to establish a database connection: " + ex.Message);
        }


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (connection.State == ConnectionState.Open)
            connection.Close();
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        // string variableValue = Variables.VariableName;

        // Use the connection to execute SQL queries and retrieve data
        /* using (SqlCommand command = new SqlCommand("SELECT * FROM test1", connection))
         {
              // Perform additional setup for the command if needed

             // Execute the query and retrieve the data
             using (SqlDataReader reader = command.ExecuteReader())
             {
                while (reader.Read())
                 {
                     // Process the data and populate the output rows
                     OutputcolBuffer.AddRow();
                     OutputcolBuffer.test = reader["test"].ToString();
                     OutputcolBuffer.testdescription = reader["testdescription"].ToString();
                 }
             }
         }
         */

        if (skipConnection)
            return; // Skip executing the query for this connection

        try
        {
            // Example: Execute a SQL query using the connection
            string variableTable = Variables.TableName;
            string varserver = Variables.ServerName;
            /*
                         string query = "INSERT INTO "+ variableTable+"(test, testdescription) VALUES ('teestt', 'deeesc')";


                         using (SqlCommand command = new SqlCommand(query, connection))
                         {
                             command.ExecuteNonQuery();
                         }*/
            if (variableTable == "CallTypes")
            {
                using (SqlCommand command = new SqlCommand("SELECT * FROM " + variableTable, connection))
                {
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            // Stockez les valeurs dans les variables d'�criture
                            Output0Buffer.AddRow();
                            Output0Buffer.Description = reader["Description"].ToString();

                            Output0Buffer.servername = varserver;

                            /*  //OutputcolBuffer.servernamee = varserver;

                           */


                           // OutputcolBuffer.ReasonID = Convert.ToSingle(reader["ReasonID"]);
                            Output0Buffer.CallType = Convert.ToSingle(reader["CallType"]);
                            //OutputcolBuffer.ReasonID = (float)reader["ReasonID"];


                            /* try
                             {
                                 OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                             }
                             catch (Exception ex)
                             {
                                 // Handle the error
                                 // You can choose to log the error, display a message, or take any other appropriate action
                                 //OutputcolBuffer.Abandonn = null;
                             }*/

                            //OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                            /* OutputcolBuffer.CallStatusGroup = Convert.ToSingle(reader["CallStatusGroup"]);
                             OutputcolBuffer.CallStatusNum = Convert.ToSingle(reader["CallStatusNum"]);
                             OutputcolBuffer.CallStatusDetail = Convert.ToSingle(reader["CallStatusDetail"]);
                             OutputcolBuffer.EndReason = Convert.ToSingle(reader["EndReason"]);
                             OutputcolBuffer.EndByAgent = Convert.ToSingle(reader["EndByAgent"]);
                             OutputcolBuffer.NoAgent = Convert.ToSingle(reader["NoAgent"]);*/


                        }
                    }
                }
            }

        }
        catch (Exception ex)
        {
            // Handle the database operation error
            // Log the error or take any necessary actions
            throw new Exception("Failed to execute database operation: " + ex.Message);
        }

    }


    private void LogErrorToTable(string errorLog)
    {
        // Implement your logging mechanism here
        // For example, execute a SQL command to insert the error log into a table

        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(connectionString);
        connection.Open();

        string logQuery = "INSERT INTO ErrorLogTable (ErrorMessage) VALUES (@ErrorMessage)";

        using (SqlCommand command = new SqlCommand(logQuery, connection))
        {
            command.Parameters.AddWithValue("@ErrorMessage", errorLog);
            command.ExecuteNonQuery();
        }



    }


    private void SendEmailNotification(string errorLog)
    {
        // Configure email settings
        string fromAddress = "khadijatest.project@gmail.com";
        string toAddress = "khadijaaitmyhachem2000@gmail.com";
        string subject = "Database Connection Failure";
        string body = "The following error occurred while establishing a database connection:\n\n" + errorLog;

        // Create and configure the email message
        MailMessage message = new MailMessage(fromAddress, toAddress, subject, body);

        // Send the email using SMTP client
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com", 587);
        smtpClient.EnableSsl = true;
        smtpClient.UseDefaultCredentials = false;
        smtpClient.Credentials = new System.Net.NetworkCredential("khadijatest.project@gmail.com", "dreqysshjweageid");

        try
        {
            smtpClient.Send(message);
        }
        catch (Exception ex)
        {
            throw new Exception("Failed to send email notification: " + ex.Message);
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String servername
    {
        set
        {
            this[0] = value;
        }
    }
    public bool servername_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Description
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Description_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallType
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CallType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99feacd0b4134ce9b3fd3c64710c2a3a.Properties.Settings.get_Default():SC_99feacd0b4134ce9b3fd3c64710c2a3a.Properties.Sett" +
    "ings")]

namespace SC_99feacd0b4134ce9b3fd3c64710c2a3a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_99feacd0b4134ce9b3fd3c64710c2a3a.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3d3a2206-1316-4c00-adba-8dcff7db1873}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_99feacd0b4134ce9b3fd3c64710c2a3a</RootNamespace>
    <AssemblyName>SC_99feacd0b4134ce9b3fd3c64710c2a3a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_99feacd0b4134ce9b3fd3c64710c2a3a" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_99feacd0b4134ce9b3fd3c64710c2a3a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_99feacd0b4134ce9b3fd3c64710c2a3a</msb:DisplayName>
    <msb:ProjectId>{4B9B8ECF-D39F-4E35-9E09-2AAD545996A2}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_99feacd0b4134ce9b3fd3c64710c2a3a.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_99feacd0b4134ce9b3fd3c64710c2a3a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_99feacd0b4134ce9b3fd3c64710c2a3a")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99feacd0b4134ce9b3fd3c64710c2a3a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99feacd0b4134ce9b3fd3c64710c2a3a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_99feacd0b4134ce9b3fd3c64710c2a3a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_99feacd0b4134ce9b3fd3c64710c2a3a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_99feacd0b4134ce9b3fd3c64710c2a3a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_99feacd0b4134ce9b3fd3c64710c2a3a.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
gQCABkoAGQEGBU8AwQAwBCIAIQFPAVQAGQGjAFkAKQEJAgYAeQAQBxAAgQBuCGMAMQH1A2kAQQHr
CXEAkQAQB4EAmQAQB4kAmQD4BI8AmQBACI8ASQEQB5QAmQAwCJoAmQDaAKEAoQAQB6cAoQAPBbEA
oQDwBAEAWQEQBxAAoQDXCQYAoQDECAYAoQDHCFkAuQAQBwYAuQBXALsAuQAWCMIAwQAQBwYAuQDs
B8gAaQEGBc4AuQDCCdUAcQGTCdsAmQE9AeIAmQHeCesA0QAQB/EA8QAQBwYALgALAIUBLgATAI4B
LgAbAK0BLgAjALYBLgArAN8BLgAzAN8BLgA7AN8BLgBDALYBLgBLAOUBLgBTAN8BLgBbAPwBQwBj
AEYC4wBrAEYCQQF7AEYCSQJzAK0BaQJzAK0BGwAyAF0AdQC3AAMAAQAGAAcABwASAAgAFAAAAIoB
YgEAALMEZgEAAP8FYgEAAN0EZgEAALoBagEAAMkEZgEAACYEYgEAAGoBYgEAALwIbgEAAKAAcgEA
AAUHYgEAAOMAYgEAAEYEYgEAAHsBYgEAAFwBYgEAAMAAZgEAAD4AYgEAALwGdgEAAOMBewEAANcI
gAEBAAgAAwABAAkABQABAAoABwABAAsACQABAAwACwABAA0ADQACABgADwACABkAEQACABoAEwAC
ABsAFQACABwAFwACAB0AGQACAB4AGwACAB8AHQACACAAHwACACEAIQACACIAIwACACQAJQACACUA
JwABACYAJwACACcAKQAEgAAAAQAAAAAAAAAAAAAAAABjAAAABAAAAAAAAAAAAAAA+QCTAAAAAAAP
AAAAAAAAAAAAAAACAS4JAAAAAAQAAAAAAAAAAAAAAPkAhwAAAAAABAAAAAAAAAAAAAAA+QAYBQAA
AAAPAAAAAAAAAAAAAAACAVMJAAAAAA8AAAAAAAAAAAAAAAIBQgYAAAAAAAAAAAEAAABrBwAAAAAA
SURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAA
Z2V0X1VzZXJOYW1lMQBJbnQzMgA8TW9kdWxlPgBHZXRPdXRwdXRJRABTQ185OWZlYWNkMGI0MTM0
Y2U5YjNmZDNjNjQ3MTBjMmEzYQBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBnZXRfSWQAUmVhZABNYXJr
T3V0cHV0c0ZpbmlzaGVkAGdldF9Vc2VkAERiQ29tbWFuZABTcWxDb21tYW5kAFNlbmQAZ2V0X3B3
ZABkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UATWFpbE1lc3NhZ2UATG9nRXJyb3JUb1RhYmxl
AElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFRvU2luZ2xl
AGdldF9UYWJsZU5hbWUAZ2V0X0RhdGFCYXNlTmFtZQBnZXRfU2VydmVyTmFtZQBzZXRfc2VydmVy
bmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBzZXRfQ2FsbFR5cGUAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AENsb3NlAERpc3Bvc2UAZ2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbm5lY3Rpb25T
dGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25l
bnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAEFkZFdpdGhWYWx1ZQB2
YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAGdldF9Db25TdHJpbmcAVG9TdHJpbmcAZXJy
b3JMb2cAZ2V0X1F1ZXJ5VmFsAE5ldHdvcmtDcmVkZW50aWFsAFN5c3RlbS5Db21wb25lbnRNb2Rl
bABTeXN0ZW0uTmV0Lk1haWwAU0NfOTlmZWFjZDBiNDEzNGNlOWIzZmQzYzY0NzEwYzJhM2EuZGxs
AHNldF9zZXJ2ZXJuYW1lX0lzTnVsbABzZXRfQ2FsbFR5cGVfSXNOdWxsAHNldF9EZXNjcmlwdGlv
bl9Jc051bGwAU2V0TnVsbABzZXRfRW5hYmxlU3NsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBy
ZXNvdXJjZU1hbgBCb29sZWFuAE9wZW4AU2NyaXB0TWFpbgBTZW5kRW1haWxOb3RpZmljYXRpb24A
U3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rp
b24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBza2lw
Q29ubmVjdGlvbgBjb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24Ac2V0X0Rlc2Ny
aXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1
dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAERiRGF0YVJlYWRlcgBTcWxE
YXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3Jp
cHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lLldyYXBwZXIAU3FsUGFyYW1ldGVyAGdldF9MYXN0U2VydmVyAC5jdG9yAC5jY3RvcgBPdXRw
dXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
U3lzdGVtLlJlc291cmNlcwBTQ185OWZlYWNkMGI0MTM0Y2U5YjNmZDNjNjQ3MTBjMmEzYS5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfOTlmZWFjZDBiNDEz
NGNlOWIzZmQzYzY0NzEwYzJhM2EuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAQnVm
ZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAHNldF9DcmVkZW50aWFs
cwBzZXRfVXNlRGVmYXVsdENyZWRlbnRpYWxzAENvbm5lY3Rpb25zAEJ1ZmZlcnMAZ2V0X1BhcmFt
ZXRlcnMARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABPYmplY3QAU3lz
dGVtLk5ldABnZXRfRnVsbFNldABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVsdABTeXN0ZW0uRGF0
YS5TcWxDbGllbnQAU210cENsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3Jp
cHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABDb252ZXJ0AE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElDcmVkZW50aWFsc0J5SG9zdABQcmltZU91dHB1dABH
ZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0
b3JDb250ZXh0AEFkZFJvdwBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AG9wX0VxdWFsaXR5
AAAAV0YAYQBpAGwAZQBkACAAdABvACAAZQBzAHQAYQBiAGwAaQBzAGgAIABhACAAZABhAHQAYQBi
AGEAcwBlACAAYwBvAG4AbgBlAGMAdABpAG8AbgA6ACAAABNDAGEAbABsAFQAeQBwAGUAcwAAHVMA
RQBMAEUAQwBUACAAKgAgAEYAUgBPAE0AIAAAF0QAZQBzAGMAcgBpAHAAdABpAG8AbgAAEUMAYQBs
AGwAVAB5AHAAZQAATUYAYQBpAGwAZQBkACAAdABvACAAZQB4AGUAYwB1AHQAZQAgAGQAYQB0AGEA
YgBhAHMAZQAgAG8AcABlAHIAYQB0AGkAbwBuADoAIAAAgM1EAGEAdABhACAAUwBvAHUAcgBjAGUA
PQBEAEUAUwBLAFQATwBQAC0ANQA3AE0AQgAyAEMATgBcAEkATgBUAEUATABDAEkAQQA7AEkAbgBp
AHQAaQBhAGwAIABDAGEAdABhAGwAbwBnAD0AcwBlAHIAdgBlAHIASQBuAGYAbwA7AFUAcwBlAHIA
IABJAEQAPQB0AGUAcwB0AGMAbwBuAG4AOwBQAGEAcwBzAHcAbwByAGQAPQBpAG4AdABlAGwAYwBp
AGEAMgAwADIAMwABf0kATgBTAEUAUgBUACAASQBOAFQATwAgAEUAcgByAG8AcgBMAG8AZwBUAGEA
YgBsAGUAIAAoAEUAcgByAG8AcgBNAGUAcwBzAGEAZwBlACkAIABWAEEATABVAEUAUwAgACgAQABF
AHIAcgBvAHIATQBlAHMAcwBhAGcAZQApAAAbQABFAHIAcgBvAHIATQBlAHMAcwBhAGcAZQAAO2sA
aABhAGQAaQBqAGEAdABlAHMAdAAuAHAAcgBvAGoAZQBjAHQAQABnAG0AYQBpAGwALgBjAG8AbQAA
QWsAaABhAGQAaQBqAGEAYQBpAHQAbQB5AGgAYQBjAGgAZQBtADIAMAAwADAAQABnAG0AYQBpAGwA
LgBjAG8AbQAAN0QAYQB0AGEAYgBhAHMAZQAgAEMAbwBuAG4AZQBjAHQAaQBvAG4AIABGAGEAaQBs
AHUAcgBlAACAkVQAaABlACAAZgBvAGwAbABvAHcAaQBuAGcAIABlAHIAcgBvAHIAIABvAGMAYwB1
AHIAcgBlAGQAIAB3AGgAaQBsAGUAIABlAHMAdABhAGIAbABpAHMAaABpAG4AZwAgAGEAIABkAGEA
dABhAGIAYQBzAGUAIABjAG8AbgBuAGUAYwB0AGkAbwBuADoACgAKAAAdcwBtAHQAcAAuAGcAbQBh
AGkAbAAuAGMAbwBtAAAhZAByAGUAcQB5AHMAcwBoAGoAdwBlAGEAZwBlAGkAZAAAR0YAYQBpAGwA
ZQBkACAAdABvACAAcwBlAG4AZAAgAGUAbQBhAGkAbAAgAG4AbwB0AGkAZgBpAGMAYQB0AGkAbwBu
ADoAIAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBl
ACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUA
ZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABw
AHUAdAAgADAAABNDAG8AbgBTAHQAcgBpAG4AZwAAGUQAYQB0AGEAQgBhAHMAZQBOAGEAbQBlAAAP
RgB1AGwAbABTAGUAdAAABUkAZAAAFUwAYQBzAHQAUwBlAHIAdgBlAHIAAAdwAHcAZAAAEVEAdQBl
AHIAeQBWAGEAbAAAFVMAZQByAHYAZQByAE4AYQBtAGUAABNUAGEAYgBsAGUATgBhAG0AZQAACVUA
cwBlAGQAABNVAHMAZQByAE4AYQBtAGUAMQAAcVMAQwBfADkAOQBmAGUAYQBjAGQAMABiADQAMQAz
ADQAYwBlADkAYgAzAGYAZAAzAGMANgA0ADcAMQAwAGMAMgBhADMAYQAuAFAAcgBvAHAAZQByAHQA
aQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAB6TW2LydukmenkMXKLimHgAEIAEBCAMgAAEFIAEB
EREEIAEBDgUgAQERcQYHAw4SPQ4DIAAOBQACDg4OBSAAEYCJCgcFDg4SQRJFEj0FAAICDg4GIAIB
DhI5BCAAEkUEIAEcDgQAAQwcAyAAAgUHAg4SQQUgABKAmQcgAhKAnQ4cAyAACAsHBg4ODhJJEk0S
PQcgBAEODg4OBSACAQ4IBCABAQIFIAIBDg4GIAEBEoCpBSABARJJCSADARJVHQgSWQUgAgEIHAMH
AQgGAAIIElkOBSABHQgIBSAAEoC1BiABEoC5HAUAABKAvQYgARwSgMEIAAESgM0RgNEFIAASgNUH
IAIBDhKA1Qi3elxWGTTgiQiJhF3NgIDMkQMGEjkCBgIDBhIUAwYSGAMGEgwDBhJdAwYSaQMGEm0D
BhIgBCABAQwLIAQBCB0IHRJVElkFIAEBEl0DIAAcBAAAEmkEAAASbQUAAQESbQQAABIgAwAAAQMo
AA4DKAACAygADAMoABwDKAAIBAgAEmkECAASbQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ185OWZlYWNkMGI0MTM0Y2U5YjNmZDNjNjQ3
MTBjMmEzYQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIzAABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQB
AAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAACEQgAAAAAAAAAAAACeQgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
kEIAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
OQA5AGYAZQBhAGMAZAAwAGIANAAxADMANABjAGUAOQBiADMAZgBkADMAYwA2ADQANwAxADAAYwAy
AGEAMwBhAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA5ADkAZgBlAGEAYwBkADAAYgA0
ADEAMwA0AGMAZQA5AGIAMwBmAGQAMwBjADYANAA3ADEAMABjADIAYQAzAGEALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADkAOQBmAGUAYQBj
AGQAMABiADQAMQAzADQAYwBlADkAYgAzAGYAZAAzAGMANgA0ADcAMQAwAGMAMgBhADMAYQAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA5ADkAZgBlAGEAYwBk
ADAAYgA0ADEAMwA0AGMAZQA5AGIAMwBmAGQAMwBjADYANAA3ADEAMABjADIAYQAzAGEAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAALAyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_99feacd0b4134ce9b3fd3c64710c2a3a</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ConString,User::DataBaseName,User::FullSet,User::Id,User::LastServer,User::pwd,User::QueryVal,User::ServerName,User::TableName,User::Used,User::UserName1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">02</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging CallType\CallType.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallType\CallType.Outputs[Output 0].Columns[servername]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging CallType\CallType.Outputs[Output 0].Columns[servername]"
                          name="servername" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallType\CallType.Outputs[Output 0].Columns[Description]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging CallType\CallType.Outputs[Output 0].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallType\CallType.Outputs[Output 0].Columns[CallType]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging CallType\CallType.Outputs[Output 0].Columns[CallType]"
                          name="CallType" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
                  description="Destination OLE DB"
                  name="CallTypeStaging"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset">[dbo].[CallTypes]</property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Inputs[Entrée de destination OLE DB]"
                      errorOrTruncationOperation="Insérer"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrée de destination OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Inputs[Entrée de destination OLE DB].Columns[servername]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="servername"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          lineageId="Package\Foreach Loop Container\Staging CallType\CallType.Outputs[Output 0].Columns[servername]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Inputs[Entrée de destination OLE DB].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[Description]"
                          lineageId="Package\Foreach Loop Container\Staging CallType\CallType.Outputs[Output 0].Columns[Description]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Inputs[Entrée de destination OLE DB].Columns[CallType]"
                          cachedDataType="r4"
                          cachedName="CallType"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[CallType]"
                          lineageId="Package\Foreach Loop Container\Staging CallType\CallType.Outputs[Output 0].Columns[CallType]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[CallType]"
                          dataType="r8"
                          name="CallType" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          dataType="nText"
                          name="servername" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Outputs[Sortie d'erreur de destination OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de destination OLE DB"
                      synchronousInputId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Inputs[Entrée de destination OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Staging CallType.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Staging CallType\CallTypeStaging.Inputs[Entrée de destination OLE DB]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Staging CallType\CallType.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Staging EndReason"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{da20232f-a3b5-44e5-aa71-12f245828d1a}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Staging EndReason"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Staging EndReason\EndReason"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="EndReason"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Net.Mail;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    private SqlConnection connection;
    private bool skipConnection = false;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        // base.PreExecute();
        /*
         * Add your code here
         */

        // Retrieve the connection string from a variable
        //string connectionString = Variables.ConnexionString;



        // Create a new SqlConnection object
        //connection = new SqlConnection(connectionString);

        // Open the connection
        //connection.Open();

        // Create a new SqlConnection
        //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        // "Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;"
        // connection = new SqlConnection(connectionString);
        // connection.Open();
        // string query = "INSERT INTO test1 (test, testdescription) VALUES ('teest', 'deeesc')";

        //using (SqlCommand command = new SqlCommand(query, connection))
        // {

        //command.Parameters.AddWithValue("@Value1", Row.Column1);
        //command.Parameters.AddWithValue("@Value2", Row.Column2);
        //command.ExecuteNonQuery();
        //}
        base.PreExecute();

        string variableCon = Variables.ConString;

        // Create a new SqlConnection
        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(variableCon);

        try
        {
            connection.Open();
            // Connection has been established successfully
        }
        catch (Exception ex)
        {
            // Handle the connection error
            // Log the error or take any necessary actions

            skipConnection = true;
            // Log the error and move to the next connection
            string errorLog = "Failed to establish a database connection: " + ex.Message;
            // Log the error to a table or file
            // You can use a SQL command or any other logging mechanism here
            // For example:
            LogErrorToTable(errorLog);
            SendEmailNotification(errorLog);


            //connection.Close();
            //throw new Exception("Failed to establish a database connection: " + ex.Message);
        }


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (connection.State == ConnectionState.Open)
            connection.Close();
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        // string variableValue = Variables.VariableName;

        // Use the connection to execute SQL queries and retrieve data
       /* using (SqlCommand command = new SqlCommand("SELECT * FROM test1", connection))
        {
             // Perform additional setup for the command if needed

            // Execute the query and retrieve the data
            using (SqlDataReader reader = command.ExecuteReader())
            {
               while (reader.Read())
                {
                    // Process the data and populate the output rows
                    OutputcolBuffer.AddRow();
                    OutputcolBuffer.test = reader["test"].ToString();
                    OutputcolBuffer.testdescription = reader["testdescription"].ToString();
                }
            }
        }
        */

        if (skipConnection)
            return; // Skip executing the query for this connection

        try
        {
            // Example: Execute a SQL query using the connection
            string variableTable = Variables.TableName;
            string varserver = Variables.ServerName;
            /*
                         string query = "INSERT INTO "+ variableTable+"(test, testdescription) VALUES ('teestt', 'deeesc')";


                         using (SqlCommand command = new SqlCommand(query, connection))
                         {
                             command.ExecuteNonQuery();
                         }*/
            if (variableTable == "EndReasons")
            {
                using (SqlCommand command = new SqlCommand("SELECT * FROM " + variableTable, connection))
                {
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            // Stockez les valeurs dans les variables d'écriture
                            OutputcolBuffer.AddRow();
                            OutputcolBuffer.Description = reader["Description"].ToString();
                            
                            OutputcolBuffer.servernamee = varserver;
                            
                            /*  //OutputcolBuffer.servernamee = varserver;

                           */
                            

                           OutputcolBuffer.ReasonID = Convert.ToSingle(reader["ReasonID"]);
                           //OutputcolBuffer.ReasonID = (float)reader["ReasonID"];


                           /* try
                            {
                                OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                            }
                            catch (Exception ex)
                            {
                                // Handle the error
                                // You can choose to log the error, display a message, or take any other appropriate action
                                //OutputcolBuffer.Abandonn = null;
                            }*/

                            //OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                            /* OutputcolBuffer.CallStatusGroup = Convert.ToSingle(reader["CallStatusGroup"]);
                             OutputcolBuffer.CallStatusNum = Convert.ToSingle(reader["CallStatusNum"]);
                             OutputcolBuffer.CallStatusDetail = Convert.ToSingle(reader["CallStatusDetail"]);
                             OutputcolBuffer.EndReason = Convert.ToSingle(reader["EndReason"]);
                             OutputcolBuffer.EndByAgent = Convert.ToSingle(reader["EndByAgent"]);
                             OutputcolBuffer.NoAgent = Convert.ToSingle(reader["NoAgent"]);*/


                        }
                    }
                }
            }
            
        }
        catch (Exception ex)
        {
            // Handle the database operation error
            // Log the error or take any necessary actions
            throw new Exception("Failed to execute database operation: " + ex.Message);
        }

    }


    private void LogErrorToTable(string errorLog)
    {
        // Implement your logging mechanism here
        // For example, execute a SQL command to insert the error log into a table

        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(connectionString);
        connection.Open();

        string logQuery = "INSERT INTO ErrorLogTable (ErrorMessage) VALUES (@ErrorMessage)";

        using (SqlCommand command = new SqlCommand(logQuery, connection))
        {
            command.Parameters.AddWithValue("@ErrorMessage", errorLog);
            command.ExecuteNonQuery();
        }



    }


    private void SendEmailNotification(string errorLog)
    {
        // Configure email settings
        string fromAddress = "khadijatest.project@gmail.com";
        string toAddress = "khadijaaitmyhachem2000@gmail.com";
        string subject = "Database Connection Failure";
        string body = "The following error occurred while establishing a database connection:\n\n" + errorLog;

        // Create and configure the email message
        MailMessage message = new MailMessage(fromAddress, toAddress, subject, body);

        // Send the email using SMTP client
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com", 587);
        smtpClient.EnableSsl = true;
        smtpClient.UseDefaultCredentials = false;
        smtpClient.Credentials = new System.Net.NetworkCredential("khadijatest.project@gmail.com", "dreqysshjweageid");

        try
        {
            smtpClient.Send(message);
        }
        catch (Exception ex)
        {
            throw new Exception("Failed to send email notification: " + ex.Message);
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class OutputcolBuffer: ScriptBuffer

{
    public OutputcolBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Description
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Description_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String servernamee
    {
        set
        {
            this[1] = value;
        }
    }
    public bool servernamee_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single ReasonID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ReasonID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_72f51977ef214e2184b874a4af50b8c6.Properties.Settings.get_Default():SC_72f51977ef214e2184b874a4af50b8c6.Properties.Sett" +
    "ings")]

namespace SC_72f51977ef214e2184b874a4af50b8c6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public OutputcolBuffer OutputcolBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != OutputcolBuffer)
        {
            OutputcolBuffer.SetEndOfRowset();
            OutputcolBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Outputcol"))
            {
                OutputcolBuffer = new OutputcolBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DataBaseName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DataBaseName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Id
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String LastServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["LastServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String pwd
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["pwd"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String QueryVal
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["QueryVal"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ServerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ServerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TableName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TableName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UserName1
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UserName1"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_72f51977ef214e2184b874a4af50b8c6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_72f51977ef214e2184b874a4af50b8c6</msb:DisplayName>
    <msb:ProjectId>{1BB3EAA5-0FA1-48FF-8BA4-7BF1DFFBA65E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_72f51977ef214e2184b874a4af50b8c6.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_72f51977ef214e2184b874a4af50b8c6.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e767e7e0-81b4-4964-a2ad-0a3eb4710c47}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_72f51977ef214e2184b874a4af50b8c6</RootNamespace>
    <AssemblyName>SC_72f51977ef214e2184b874a4af50b8c6</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_72f51977ef214e2184b874a4af50b8c6" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_72f51977ef214e2184b874a4af50b8c6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_72f51977ef214e2184b874a4af50b8c6")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_72f51977ef214e2184b874a4af50b8c6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_72f51977ef214e2184b874a4af50b8c6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_72f51977ef214e2184b874a4af50b8c6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_72f51977ef214e2184b874a4af50b8c6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_72f51977ef214e2184b874a4af50b8c6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_72f51977ef214e2184b874a4af50b8c6.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
pwChAA0FsQChAO4EAQBZAQgHEAChAMMJBgChALAIBgChALMIWQC5AAgHBgC5AIgAuwC5AA4IwgDB
AAgHBgC5AOQHyABpAQQFzgC5AK4J1QBxAX8J2wCRAVEB4gCRAcoJ6wDRAAgH8QDxAAgHBgAuAAsA
fQEuABMAhgEuABsApQEuACMArgEuACsA1wEuADMA1wEuADsA1wEuAEMArgEuAEsA3QEuAFMA1wEu
AFsA9AFDAGMAPgLjAGsAPgJBAXsAPgIJAnMApQEpAnMApQEbADIAXQB1ALcAAwABAAYABwAHABAA
CAASAAAA9QVeAQAA2wRiAQAA/wBeAQAAxARiAQAAfwBmAQAAsARiAQAAIwReAQAAfgFeAQAArQBq
AQAA/QZeAQAA5wBeAQAAQwReAQAAjwFeAQAAcAFeAQAAPgBeAQAAtAZuAQAA4AFzAQAAwwh4AQEA
CAADAAEACQAFAAEACgAHAAEACwAJAAEADAALAAEADQANAAIAGAAPAAIAGQARAAIAGgATAAIAGwAV
AAIAHAAXAAIAHQAZAAIAHgAbAAIAHwAdAAIAIAAfAAIAIgAhAAIAIwAjAAEAJAAjAAIAJQAlAASA
AAABAAAAAAAAAAAAAAAAAE4AAAAEAAAAAAAAAAAAAAD5AKAAAAAAAA8AAAAAAAAAAAAAAAIBGgkA
AAAABAAAAAAAAAAAAAAA+QCUAAAAAAAEAAAAAAAAAAAAAAD5ABYFAAAAAA8AAAAAAAAAAAAAAAIB
PwkAAAAADwAAAAAAAAAAAAAAAgE4BgAAAAAAAAAAAQAAAGMHAAAAAAAAAElEVFNWYXJpYWJsZTEw
MABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAGdldF9Vc2VyTmFtZTEA
SW50MzIAU0NfNzJmNTE5NzdlZjIxNGUyMTg0Yjg3NGE0YWY1MGI4YzYAPE1vZHVsZT4Ac2V0X1Jl
YXNvbklEAEdldE91dHB1dElEAFN5c3RlbS5EYXRhAG1zY29ybGliAGdldF9JZABSZWFkAE1hcmtP
dXRwdXRzRmluaXNoZWQARGJDb21tYW5kAFNxbENvbW1hbmQAU2VuZABnZXRfcHdkAGRlZmF1bHRJ
bnN0YW5jZQBzZXRfc2VydmVybmFtZWUAZ2V0X01lc3NhZ2UATWFpbE1lc3NhZ2UATG9nRXJyb3JU
b1RhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFRv
U2luZ2xlAGdldF9UYWJsZU5hbWUAZ2V0X0RhdGFCYXNlTmFtZQBnZXRfU2VydmVyTmFtZQBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAGdl
dF9TdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb25uZWN0aW9uU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBnZXRfQ29uU3RyaW5nAFRvU3RyaW5nAGVycm9yTG9nAGdldF9RdWVyeVZh
bABOZXR3b3JrQ3JlZGVudGlhbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWls
AFNDXzcyZjUxOTc3ZWYyMTRlMjE4NGI4NzRhNGFmNTBiOGM2LmRsbABzZXRfUmVhc29uSURfSXNO
dWxsAHNldF9zZXJ2ZXJuYW1lZV9Jc051bGwAc2V0X0Rlc2NyaXB0aW9uX0lzTnVsbABTZXROdWxs
AHNldF9FbmFibGVTc2wAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAE9wZW4A
U2NyaXB0TWFpbgBTZW5kRW1haWxOb3RpZmljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lz
dGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlv
bgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBza2lwQ29ubmVjdGlvbgBjb25uZWN0aW9uAElu
dmFsaWRPcGVyYXRpb25FeGNlcHRpb24Ac2V0X0Rlc2NyaXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1v
bgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVy
LkRUU1J1bnRpbWVXcmFwAERiRGF0YVJlYWRlcgBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIA
UGlwZWxpbmVCdWZmZXIAT3V0cHV0Y29sQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBTcWxQYXJhbWV0
ZXIAZ2V0X0xhc3RTZXJ2ZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3Rp
Y3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzcy
ZjUxOTc3ZWYyMTRlMjE4NGI4NzRhNGFmNTBiOGM2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ183MmY1MTk3N2VmMjE0ZTIxODRiODc0YTRhZjUwYjhjNi5Q
cm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENv
bHVtbkluZGV4ZXMAU2V0dGluZ3MAc2V0X0NyZWRlbnRpYWxzAHNldF9Vc2VEZWZhdWx0Q3JlZGVu
dGlhbHMAQ29ubmVjdGlvbnMAQnVmZmVycwBnZXRfUGFyYW1ldGVycwBGaW5pc2hPdXRwdXRzAENy
ZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AE9iamVjdABTeXN0ZW0uTmV0AFNldEVuZE9mUm93c2V0
AGdldF9EZWZhdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABTbXRwQ2xpZW50AFVzZXJDb21wb25l
bnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4
U2NyaXB0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASUNyZWRlbnRp
YWxzQnlIb3N0AFByaW1lT3V0cHV0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50
RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAQWRkUm93AGdldF9Bc3NlbWJseQBFeGVj
dXRlTm9uUXVlcnkAb3BfRXF1YWxpdHkAAABXRgBhAGkAbABlAGQAIAB0AG8AIABlAHMAdABhAGIA
bABpAHMAaAAgAGEAIABkAGEAdABhAGIAYQBzAGUAIABjAG8AbgBuAGUAYwB0AGkAbwBuADoAIAAA
FUUAbgBkAFIAZQBhAHMAbwBuAHMAAB1TAEUATABFAEMAVAAgACoAIABGAFIATwBNACAAABdEAGUA
cwBjAHIAaQBwAHQAaQBvAG4AABFSAGUAYQBzAG8AbgBJAEQAAE1GAGEAaQBsAGUAZAAgAHQAbwAg
AGUAeABlAGMAdQB0AGUAIABkAGEAdABhAGIAYQBzAGUAIABvAHAAZQByAGEAdABpAG8AbgA6ACAA
AIDNRABhAHQAYQAgAFMAbwB1AHIAYwBlAD0ARABFAFMASwBUAE8AUAAtADUANwBNAEIAMgBDAE4A
XABJAE4AVABFAEwAQwBJAEEAOwBJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwA9AHMAZQBy
AHYAZQByAEkAbgBmAG8AOwBVAHMAZQByACAASQBEAD0AdABlAHMAdABjAG8AbgBuADsAUABhAHMA
cwB3AG8AcgBkAD0AaQBuAHQAZQBsAGMAaQBhADIAMAAyADMAAX9JAE4AUwBFAFIAVAAgAEkATgBU
AE8AIABFAHIAcgBvAHIATABvAGcAVABhAGIAbABlACAAKABFAHIAcgBvAHIATQBlAHMAcwBhAGcA
ZQApACAAVgBBAEwAVQBFAFMAIAAoAEAARQByAHIAbwByAE0AZQBzAHMAYQBnAGUAKQAAG0AARQBy
AHIAbwByAE0AZQBzAHMAYQBnAGUAADtrAGgAYQBkAGkAagBhAHQAZQBzAHQALgBwAHIAbwBqAGUA
YwB0AEAAZwBtAGEAaQBsAC4AYwBvAG0AAEFrAGgAYQBkAGkAagBhAGEAaQB0AG0AeQBoAGEAYwBo
AGUAbQAyADAAMAAwAEAAZwBtAGEAaQBsAC4AYwBvAG0AADdEAGEAdABhAGIAYQBzAGUAIABDAG8A
bgBuAGUAYwB0AGkAbwBuACAARgBhAGkAbAB1AHIAZQAAgJFUAGgAZQAgAGYAbwBsAGwAbwB3AGkA
bgBnACAAZQByAHIAbwByACAAbwBjAGMAdQByAHIAZQBkACAAdwBoAGkAbABlACAAZQBzAHQAYQBi
AGwAaQBzAGgAaQBuAGcAIABhACAAZABhAHQAYQBiAGEAcwBlACAAYwBvAG4AbgBlAGMAdABpAG8A
bgA6AAoACgAAHXMAbQB0AHAALgBnAG0AYQBpAGwALgBjAG8AbQAAIWQAcgBlAHEAeQBzAHMAaABq
AHcAZQBhAGcAZQBpAGQAAEdGAGEAaQBsAGUAZAAgAHQAbwAgAHMAZQBuAGQAIABlAG0AYQBpAGwA
IABuAG8AdABpAGYAaQBjAGEAdABpAG8AbgA6ACAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUA
cgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABB
AHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAA
aQBuAHMAdABlAGEAZAAuAAATTwB1AHQAcAB1AHQAYwBvAGwAABNDAG8AbgBTAHQAcgBpAG4AZwAA
GUQAYQB0AGEAQgBhAHMAZQBOAGEAbQBlAAAFSQBkAAAVTABhAHMAdABTAGUAcgB2AGUAcgAAB3AA
dwBkAAARUQB1AGUAcgB5AFYAYQBsAAAVUwBlAHIAdgBlAHIATgBhAG0AZQAAE1QAYQBiAGwAZQBO
AGEAbQBlAAATVQBzAGUAcgBOAGEAbQBlADEAAHFTAEMAXwA3ADIAZgA1ADEAOQA3ADcAZQBmADIA
MQA0AGUAMgAxADgANABiADgANwA0AGEANABhAGYANQAwAGIAOABjADYALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAPwjKUo5KpEO+jOcqyHeqqwAEIAEBCAMgAAEF
IAEBEREEIAEBDgUgAQERcQYHAw4SPQ4DIAAOBQACDg4OBSAAEYCJCgcFDg4SQRJFEj0FAAICDg4G
IAIBDhI5BCAAEkUEIAEcDgQAAQwcAyAAAgUHAg4SQQUgABKAmQcgAhKAnQ4cAyAACAsHBg4ODhJJ
Ek0SPQcgBAEODg4OBSACAQ4IBCABAQIFIAIBDg4GIAEBEoCpBSABARJJCSADARJVHQgSWQUgAgEI
HAMHAQgGAAIIElkOBSABHQgIBSAAEoC1BiABEoC5HAUAABKAvQYgARwSgMEIAAESgMkRgM0FIAAS
gNEHIAIBDhKA0Qi3elxWGTTgiQiJhF3NgIDMkQMGEjkCBgIDBhIUAwYSGAMGEgwDBhJdAwYSaQMG
Em0DBhIgBCABAQwLIAQBCB0IHRJVElkFIAEBEl0EAAASaQQAABJtBQABARJtBAAAEiADAAABAygA
DgMoAAIDKAAMAygACAQIABJpBAgAEm0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNzJmNTE5NzdlZjIxNGUyMTg0Yjg3NGE0YWY1MGI4
YzYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAA1EEAAAAAAAAAAAAA7kEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOBBAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
NwAyAGYANQAxADkANwA3AGUAZgAyADEANABlADIAMQA4ADQAYgA4ADcANABhADQAYQBmADUAMABi
ADgAYwA2AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA3ADIAZgA1ADEAOQA3ADcAZQBm
ADIAMQA0AGUAMgAxADgANABiADgANwA0AGEANABhAGYANQAwAGIAOABjADYALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADcAMgBmADUAMQA5
ADcANwBlAGYAMgAxADQAZQAyADEAOAA0AGIAOAA3ADQAYQA0AGEAZgA1ADAAYgA4AGMANgAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA3ADIAZgA1ADEAOQA3
ADcAZQBmADIAMQA0AGUAMgAxADgANABiADgANwA0AGEANABhAGYANQAwAGIAOABjADYAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAAAyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_72f51977ef214e2184b874a4af50b8c6</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ConString,User::DataBaseName,User::Id,User::LastServer,User::pwd,User::QueryVal,User::ServerName,User::TableName,User::UserName1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">5E</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging EndReason\EndReason.Outputs[Outputcol]"
                      hasSideEffects="true"
                      name="Outputcol">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging EndReason\EndReason.Outputs[Outputcol].Columns[Description]"
                          dataType="wstr"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Staging EndReason\EndReason.Outputs[Outputcol].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging EndReason\EndReason.Outputs[Outputcol].Columns[servernamee]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging EndReason\EndReason.Outputs[Outputcol].Columns[servernamee]"
                          name="servernamee" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging EndReason\EndReason.Outputs[Outputcol].Columns[ReasonID]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging EndReason\EndReason.Outputs[Outputcol].Columns[ReasonID]"
                          name="ReasonID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
                  description="Destination OLE DB"
                  name="EndReasonStaging"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset">[dbo].[EndReasons]</property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Inputs[Entrée de destination OLE DB]"
                      errorOrTruncationOperation="Insérer"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrée de destination OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Inputs[Entrée de destination OLE DB].Columns[servernamee]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="servernamee"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          lineageId="Package\Foreach Loop Container\Staging EndReason\EndReason.Outputs[Outputcol].Columns[servernamee]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Inputs[Entrée de destination OLE DB].Columns[ReasonID]"
                          cachedDataType="r4"
                          cachedName="ReasonID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[ReasonID]"
                          lineageId="Package\Foreach Loop Container\Staging EndReason\EndReason.Outputs[Outputcol].Columns[ReasonID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Inputs[Entrée de destination OLE DB].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[Description]"
                          lineageId="Package\Foreach Loop Container\Staging EndReason\EndReason.Outputs[Outputcol].Columns[Description]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          dataType="nText"
                          name="servername" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[ReasonID]"
                          dataType="r8"
                          name="ReasonID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[Description]"
                          dataType="nText"
                          name="Description" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Outputs[Sortie d'erreur de destination OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de destination OLE DB"
                      synchronousInputId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Inputs[Entrée de destination OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Staging EndReason.Paths[Outputcol]"
                  endId="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging.Inputs[Entrée de destination OLE DB]"
                  name="Outputcol"
                  startId="Package\Foreach Loop Container\Staging EndReason\EndReason.Outputs[Outputcol]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Staging ListAgents"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:DTSID="{DB272BF0-F7C7-42E0-91F6-B8EB54BB9534}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Staging ListAgents"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Colonne dérivée;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;0"
                  description="Crée de nouvelles valeurs de colonne en appliquant des expressions aux colonnes d'entrée de transformation. Créez de nouvelles colonnes ou remplacez celles qui existent déjà. Par exemple, concaténez les valeurs de la colonne 'prénom' et de la colonne 'nom' pour créer une colonne 'nom complet'."
                  name="Colonne dérivée"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Inputs[Entrée de colonne dérivée]"
                      description="Entrée de la transformation de colonnes dérivées"
                      name="Entrée de colonne dérivée">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Inputs[Entrée de colonne dérivée].Columns[Ident]"
                          cachedDataType="r4"
                          cachedName="Ident"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[Ident]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Inputs[Entrée de colonne dérivée].Columns[col]"
                          cachedDataType="r4"
                          cachedName="col"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[col]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Outputs[Sortie de colonne dérivée]"
                      description="Sortie par défaut de la transformation de colonnes dérivées"
                      exclusionGroup="1"
                      name="Sortie de colonne dérivée"
                      synchronousInputId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Inputs[Entrée de colonne dérivée]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Outputs[Sortie de colonne dérivée].Columns[id_ag]"
                          dataType="wstr"
                          errorOrTruncationOperation="Calcul"
                          errorRowDisposition="FailComponent"
                          length="511"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Outputs[Sortie de colonne dérivée].Columns[id_ag]"
                          name="id_ag"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Expression de colonne dérivée"
                              name="Expression">(DT_WSTR,255)#{Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[Ident]} + "_" + (DT_WSTR,255)#{Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[col]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Expression claire de colonne dérivée"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,255)Ident + "_" + (DT_WSTR,255)col</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée]"
                      description="Sortie d'erreur de la transformation de colonnes dérivées"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de colonne dérivée"
                      synchronousInputId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Inputs[Entrée de colonne dérivée]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
                  description="Destination OLE DB"
                  name="Destination OLE DB"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset">[dbo].[ListAgents]</property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                      errorOrTruncationOperation="Insérer"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrée de destination OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[servername]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="servername"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[servername]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[deleteat]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="deleteat"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[deleteat]"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[deleteat]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[createat]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="createat"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[createat]"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[createat]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[LastName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="LastName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastName]"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[customer]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="customer"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customer]"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[customer]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Ident]"
                          cachedDataType="r4"
                          cachedName="Ident"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Ident]"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[Ident]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[FirstName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="FirstName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FirstName]"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[id_ag]"
                          cachedDataType="wstr"
                          cachedLength="511"
                          cachedName="id_ag"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Id_DimAgen]"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Outputs[Sortie de colonne dérivée].Columns[id_ag]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[col]"
                          cachedDataType="r4"
                          cachedName="col"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerId]"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[col]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerId]"
                          dataType="i4"
                          name="customerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customer]"
                          dataType="wstr"
                          length="255"
                          name="customer" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Oid]"
                          dataType="wstr"
                          length="255"
                          name="Oid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Ident]"
                          dataType="i4"
                          name="Ident" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ReceptionGrp]"
                          dataType="nText"
                          name="ReceptionGrp" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[EntreCom]"
                          dataType="r8"
                          name="EntreCom" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Options]"
                          dataType="wstr"
                          length="255"
                          name="Options" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LoginName]"
                          dataType="wstr"
                          length="255"
                          name="LoginName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Profile]"
                          dataType="r8"
                          name="Profile" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Rights]"
                          dataType="r8"
                          name="Rights" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Password]"
                          dataType="wstr"
                          length="255"
                          name="Password" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[GroupMember]"
                          dataType="r8"
                          name="GroupMember" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ScriptFramesetUrl]"
                          dataType="wstr"
                          length="255"
                          name="ScriptFramesetUrl" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ScriptFramesetName]"
                          dataType="wstr"
                          length="255"
                          name="ScriptFramesetName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxChatSessions]"
                          dataType="r8"
                          name="MaxChatSessions" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxEmailSessions]"
                          dataType="r8"
                          name="MaxEmailSessions" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AlwaysOnTop]"
                          dataType="r8"
                          name="AlwaysOnTop" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FullScreen]"
                          dataType="r8"
                          name="FullScreen" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WorkspaceWidth]"
                          dataType="r8"
                          name="WorkspaceWidth" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WorkspaceHeight]"
                          dataType="r8"
                          name="WorkspaceHeight" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ReadyAtLogin]"
                          dataType="r8"
                          name="ReadyAtLogin" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WorkspaceOid]"
                          dataType="wstr"
                          length="255"
                          name="WorkspaceOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CTISkills]"
                          dataType="wstr"
                          length="255"
                          name="CTISkills" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[OutCampaigns]"
                          dataType="nText"
                          name="OutCampaigns" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CoachRightLevel]"
                          dataType="r8"
                          name="CoachRightLevel" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CurrentOutQueue]"
                          dataType="r8"
                          name="CurrentOutQueue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WorkspaceAffectationExt]"
                          dataType="wstr"
                          length="255"
                          name="WorkspaceAffectationExt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DefaultOutCampaign]"
                          dataType="wstr"
                          length="255"
                          name="DefaultOutCampaign" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[IsReAssigned]"
                          dataType="r8"
                          name="IsReAssigned" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AgentLightRight]"
                          dataType="r8"
                          name="AgentLightRight" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AgentLightPlanningOid]"
                          dataType="wstr"
                          length="255"
                          name="AgentLightPlanningOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AgentLightExtensionId]"
                          dataType="r8"
                          name="AgentLightExtensionId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RingMaxDialingDuration]"
                          dataType="r8"
                          name="RingMaxDialingDuration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RingMaxDialingAttempts]"
                          dataType="r8"
                          name="RingMaxDialingAttempts" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxSmsSessions]"
                          dataType="r8"
                          name="MaxSmsSessions" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[PasswordDate]"
                          dataType="wstr"
                          length="255"
                          name="PasswordDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ProfileDetailed]"
                          dataType="wstr"
                          length="255"
                          name="ProfileDetailed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ProfileDetailedWithDesc]"
                          dataType="wstr"
                          length="255"
                          name="ProfileDetailedWithDesc" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxSocialNetworkSessions]"
                          dataType="r8"
                          name="MaxSocialNetworkSessions" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Gender]"
                          dataType="wstr"
                          length="255"
                          name="Gender" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="255"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="255"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Address]"
                          dataType="wstr"
                          length="255"
                          name="Address" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CP]"
                          dataType="wstr"
                          length="255"
                          name="CP" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[City]"
                          dataType="wstr"
                          length="255"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Email]"
                          dataType="wstr"
                          length="255"
                          name="Email" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Phone]"
                          dataType="wstr"
                          length="255"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Phone1]"
                          dataType="wstr"
                          length="255"
                          name="Phone1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Phone2]"
                          dataType="wstr"
                          length="255"
                          name="Phone2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Birthday]"
                          dataType="wstr"
                          length="255"
                          name="Birthday" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Picture]"
                          dataType="wstr"
                          length="255"
                          name="Picture" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerOid]"
                          dataType="wstr"
                          length="255"
                          name="customerOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[createat]"
                          dataType="wstr"
                          length="255"
                          name="createat" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[deleteat]"
                          dataType="wstr"
                          length="255"
                          name="deleteat" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          dataType="nText"
                          name="servername" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Id_DimAgen]"
                          dataType="wstr"
                          length="255"
                          name="Id_DimAgen" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de destination OLE DB"
                      synchronousInputId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Staging ListAgents\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConnexionString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConnexionString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ConString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DataBaseName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DataBaseName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Object FullSet
    {
        get
        {
            return (Object)(ParentComponent.ReadOnlyVariables["FullSet"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Id
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String LastServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["LastServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String pwd
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["pwd"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String QueryVal
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["QueryVal"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ServerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ServerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TableName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TableName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean Used
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["Used"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UserName1
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UserName1"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Net.Mail;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]


public class ScriptMain : UserComponent
{

    private SqlConnection connection;
    private bool skipConnection = false;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        // base.PreExecute();
        /*
         * Add your code here
         */

        // Retrieve the connection string from a variable
        //string connectionString = Variables.ConnexionString;



        // Create a new SqlConnection object
        //connection = new SqlConnection(connectionString);

        // Open the connection
        //connection.Open();

        // Create a new SqlConnection
        //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        // "Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;"
        // connection = new SqlConnection(connectionString);
        // connection.Open();
        // string query = "INSERT INTO test1 (test, testdescription) VALUES ('teest', 'deeesc')";

        //using (SqlCommand command = new SqlCommand(query, connection))
        // {

        //command.Parameters.AddWithValue("@Value1", Row.Column1);
        //command.Parameters.AddWithValue("@Value2", Row.Column2);
        //command.ExecuteNonQuery();
        //}
        base.PreExecute();

        string variableCon = Variables.ConString;

        // Create a new SqlConnection
        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(variableCon);

        try
        {
            connection.Open();
            // Connection has been established successfully
        }
        catch (Exception ex)
        {
            // Handle the connection error
            // Log the error or take any necessary actions

            skipConnection = true;
            // Log the error and move to the next connection
            string errorLog = "Failed to establish a database connection: " + ex.Message;
            // Log the error to a table or file
            // You can use a SQL command or any other logging mechanism here
            // For example:
            LogErrorToTable(errorLog);
            SendEmailNotification(errorLog);


            //connection.Close();
            //throw new Exception("Failed to establish a database connection: " + ex.Message);
        }


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (connection.State == ConnectionState.Open)
            connection.Close();
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        // string variableValue = Variables.VariableName;

        // Use the connection to execute SQL queries and retrieve data
        /* using (SqlCommand command = new SqlCommand("SELECT * FROM test1", connection))
         {
              // Perform additional setup for the command if needed

             // Execute the query and retrieve the data
             using (SqlDataReader reader = command.ExecuteReader())
             {
                while (reader.Read())
                 {
                     // Process the data and populate the output rows
                     OutputcolBuffer.AddRow();
                     OutputcolBuffer.test = reader["test"].ToString();
                     OutputcolBuffer.testdescription = reader["testdescription"].ToString();
                 }
             }
         }
         */

        if (skipConnection)
            return; // Skip executing the query for this connection

        try
        {
            // Example: Execute a SQL query using the connection
            string variableTable = Variables.TableName;
            string varserver = Variables.ServerName;
            /*
                         string query = "INSERT INTO "+ variableTable+"(test, testdescription) VALUES ('teestt', 'deeesc')";


                         using (SqlCommand command = new SqlCommand(query, connection))
                         {
                             command.ExecuteNonQuery();
                         }*/
            if (variableTable == "ListAgents")
            {
                using (SqlCommand command = new SqlCommand("SELECT * FROM " + variableTable, connection))
                {
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            // Stockez les valeurs dans les variables d'�criture

                            // Output0Buffer.CustomerID = Convert.ToSingle(reader["customerId"]);
                            Output0Buffer.AddRow();
                            Output0Buffer.col = Convert.ToSingle(reader["customerId"]);

                            try
                            {
                               // Output0Buffer.AddRow();
                            Output0Buffer.customer = reader["customer"].ToString();
                           // Output0Buffer.FirstName = reader["FirstName"].ToString();
                            Output0Buffer.LastName = reader["LastName"].ToString();
                            Output0Buffer.createat = reader["createat"].ToString();
                            Output0Buffer.deleteat = reader["deleteat"].ToString();
                            Output0Buffer.FirstName = reader["FirstName"].ToString();

                            Output0Buffer.servername= varserver;

                            /*  //OutputcolBuffer.servernamee = varserver;

                           */


                            //Output0Buffer.customerId = Convert.ToSingle(reader["customerId"]);
                            Output0Buffer.Ident = Convert.ToSingle(reader["Ident"]);
                            //Output0Buffer.FirstName = Convert.ToSingle(reader["FirstName"]);
                            
                                //OutputcolBuffer.ReasonID = (float)reader["ReasonID"];

                            }
                            catch (Exception ex)
                            {
                                // Handle the error
                                // You can choose to log the error, display a message, or take any other appropriate action
                                //OutputcolBuffer.Abandonn = null;
                            }

                            /* try
                             {
                                 OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                             }
                             catch (Exception ex)
                             {
                                 // Handle the error
                                 // You can choose to log the error, display a message, or take any other appropriate action
                                 //OutputcolBuffer.Abandonn = null;
                             }*/

                            //OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                            /* OutputcolBuffer.CallStatusGroup = Convert.ToSingle(reader["CallStatusGroup"]);
                             OutputcolBuffer.CallStatusNum = Convert.ToSingle(reader["CallStatusNum"]);
                             OutputcolBuffer.CallStatusDetail = Convert.ToSingle(reader["CallStatusDetail"]);
                             OutputcolBuffer.EndReason = Convert.ToSingle(reader["EndReason"]);
                             OutputcolBuffer.EndByAgent = Convert.ToSingle(reader["EndByAgent"]);
                             OutputcolBuffer.NoAgent = Convert.ToSingle(reader["NoAgent"]);*/


                        }
                    }
                }
            }

        }
        catch (Exception ex)
        {
            // Handle the database operation error
            // Log the error or take any necessary actions
            throw new Exception("Failed to execute database operation: " + ex.Message);
        }

    }


    private void LogErrorToTable(string errorLog)
    {
        // Implement your logging mechanism here
        // For example, execute a SQL command to insert the error log into a table

        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(connectionString);
        connection.Open();

        string logQuery = "INSERT INTO ErrorLogTable (ErrorMessage) VALUES (@ErrorMessage)";

        using (SqlCommand command = new SqlCommand(logQuery, connection))
        {
            command.Parameters.AddWithValue("@ErrorMessage", errorLog);
            command.ExecuteNonQuery();
        }



    }


    private void SendEmailNotification(string errorLog)
    {
        // Configure email settings
        string fromAddress = "khadijatest.project@gmail.com";
        string toAddress = "khadijaaitmyhachem2000@gmail.com";
        string subject = "Database Connection Failure";
        string body = "The following error occurred while establishing a database connection:\n\n" + errorLog;

        // Create and configure the email message
        MailMessage message = new MailMessage(fromAddress, toAddress, subject, body);

        // Send the email using SMTP client
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com", 587);
        smtpClient.EnableSsl = true;
        smtpClient.UseDefaultCredentials = false;
        smtpClient.Credentials = new System.Net.NetworkCredential("khadijatest.project@gmail.com", "dreqysshjweageid");

        try
        {
            smtpClient.Send(message);
        }
        catch (Exception ex)
        {
            throw new Exception("Failed to send email notification: " + ex.Message);
        }
    }

}

]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String servername
    {
        set
        {
            this[0] = value;
        }
    }
    public bool servername_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String deleteat
    {
        set
        {
            this[1] = value;
        }
    }
    public bool deleteat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String createat
    {
        set
        {
            this[2] = value;
        }
    }
    public bool createat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String customer
    {
        set
        {
            this[5] = value;
        }
    }
    public bool customer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Ident
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Ident_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single col
    {
        set
        {
            this[7] = value;
        }
    }
    public bool col_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CustomerID
    {
        set
        {
            this[8] = value;
        }
    }
    public bool CustomerID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_94c150da18b74d7585af3d76c9ebf0fe.Properties.Settings.get_Default():SC_94c150da18b74d7585af3d76c9ebf0fe.Properties.Sett" +
    "ings")]

namespace SC_94c150da18b74d7585af3d76c9ebf0fe.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_94c150da18b74d7585af3d76c9ebf0fe.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1e5e2ad9-c890-4f9c-8788-05d56acd68f5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_94c150da18b74d7585af3d76c9ebf0fe</RootNamespace>
    <AssemblyName>SC_94c150da18b74d7585af3d76c9ebf0fe</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_94c150da18b74d7585af3d76c9ebf0fe" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_94c150da18b74d7585af3d76c9ebf0fe</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_94c150da18b74d7585af3d76c9ebf0fe</msb:DisplayName>
    <msb:ProjectId>{82EECBA8-0402-4D78-9359-207BCFD67783}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_94c150da18b74d7585af3d76c9ebf0fe.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_94c150da18b74d7585af3d76c9ebf0fe")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_94c150da18b74d7585af3d76c9ebf0fe")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_94c150da18b74d7585af3d76c9ebf0fe.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_94c150da18b74d7585af3d76c9ebf0fe.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_94c150da18b74d7585af3d76c9ebf0fe.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_94c150da18b74d7585af3d76c9ebf0fe.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_94c150da18b74d7585af3d76c9ebf0fe.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_94c150da18b74d7585af3d76c9ebf0fe.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AAAAAIYAjAlZABgAOyUAAAAAhhi7BwYAGABbJQAAAADGASgJBgAYAF0lAAAAAIEAkwAGABgAfCUA
AAAAxgBWCjMBGABbJQAAAADGATYJBgAcANElAAAAAIYYuwc/ARwA4CUAAAAAhhi7Bz8BHQDvJQAA
AACGCFIEIgAeABUmAAAAAIYIRAQiAB4AOyYAAAAAhgh1ASIAHgBhJgAAAACGCH0JRQEeAIImAAAA
AIYIhwBxAB4AqCYAAAAAhgisByIAHgDOJgAAAACGCMoAIgAeAPQmAAAAAIYIeAQiAB4AGicAAAAA
hgiGASIAHgBAJwAAAACGCGcBIgAeAGYnAAAAAIYIpwBZAB4AjCcAAAAAhgg6ACIAHgCyJwAAAACD
GLsHBgAeALonAAAAAJMIVgdJAR4A5icAAAAAkwjlAU4BHgDtJwAAAACTCPEBUwEeAPUnAAAAAJYI
mAlZAR8A/CcAAAAAhhi7BwYAHwAEKAAAAACRGMEHXgEfAAAAAQBvBAAAAQBvBAAAAQBPBwAAAgCt
CAAAAwDWBgAAAQAkBAAAAQAkBAAAAQAkBAAAAQAkBAAAAQAkBAAAAQAkBAAAAQAkBAAAAQAkBAAA
AQAkBAAAAQAkBAAAAQAkBAAAAQAkBAAAAQAkBAAAAQAkBAAAAQAkBAAAAQAkBAAAAQAkBAAAAQAk
BAAAAQAuCQAAAgDIBwAAAwARCQAABADWBgAAAQDzCQAAAQDzCQAAAQAkBAkAuwcBABEAuwcGABkA
uwcKACkAuwcQADEAuwcQADkAuwcQAEEAuwcQAEkAuwcQAFEAuwcQAFkAuwcQAGEAuwcQAGkAuwcG
AMkAuwcGAOkAuwcVAPkAuwcGALkAAAQGAHEAuwcQAAEB4QUGAHkABgEiAAkBSgkmALkACwQGAAEB
MwIsAAEBJQIGAAkBygo9AIEAuwdDAIEAHgdKABkBtAVPACEBXgFUAMEAZgQiABkBjgBZACkBKwIG
AHkAuwcQAIEAGQljADEBFwRpAEEBugpxAJEAuweBAJkAuweJAJkApgWPAJkA6wiPAEkBuweUAJkA
2wiaAJkAxQChAKEAuwenAKEAvQWxAKEAlgUBAFkBuwcQAKEApgoGAKEAiQkGAKEAjAlZALkAuwcG
ALkAZgC7ALkAwQjCAMEAuwcGALkAlwjIAGkBtAXOALkAkQrVAHEBYgrbAJkBTAHiAJkBrQrrANEA
uwfxAPEAuwcGAC4ACwCFAS4AEwCOAS4AGwCtAS4AIwC2AS4AKwDfAS4AMwDfAS4AOwDfAS4AQwC2
AS4ASwDlAS4AUwDfAS4AWwD8AUMAYwBGAuMAawBGAkEBewBGAukDcwCtAQkEcwCtARsAMgBdAHUA
twADAAEABgATAAcAHwAIACEAAAC0AWIBAAAoBWYBAABiCWIBAAB1BWYBAABVCWIBAABhBWYBAACZ
AWIBAAD/BGYBAACmAWIBAAATBWYBAABuB2IBAABNBWYBAACoCWoBAACJBWYBAACiBWoBAAA+BWYB
AABbAGoBAADpBGYBAABWBGIBAABIBGIBAAB5AWIBAACBCW4BAACLAHIBAACwB2IBAADOAGIBAAB8
BGIBAACKAWIBAABrAWIBAACrAGYBAAA+AGIBAABaB3YBAAAFAnsBAACcCYABAQAIAAMAAQAJAAUA
AQAKAAcAAQALAAkAAQAMAAsAAQANAA0AAQAOAA8AAQAPABEAAQAQABMAAQARABUAAQASABcAAQAT
ABkAAQAUABsAAQAVAB0AAQAWAB8AAQAXACEAAQAYACMAAQAZACUAAgAkACcAAgAlACkAAgAmACsA
AgAnAC0AAgAoAC8AAgApADEAAgAqADMAAgArADUAAgAsADcAAgAtADkAAgAuADsAAgAvAD0AAgAx
AD8AAgAyAEEAAQAzAEEAAgA0AEMABIAAAAEAAAAAAAAAAAAAAAAA4gAAAAQAAAAAAAAAAAAAAPkA
fgAAAAAADwAAAAAAAAAAAAAAAgH9CQAAAAAEAAAAAAAAAAAAAAD5AHIAAAAAAAQAAAAAAAAAAAAA
APkAxgUAAAAADwAAAAAAAAAAAAAAAgEiCgAAAAAPAAAAAAAAAAAAAAACAeAGAAAAAAAAAAABAAAA
FggAAAAAAAAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNv
bnRleHQxMDAAZ2V0X1VzZXJOYW1lMQBJbnQzMgA8TW9kdWxlPgBzZXRfQ3VzdG9tZXJJRABHZXRP
dXRwdXRJRABTeXN0ZW0uRGF0YQBtc2NvcmxpYgBnZXRfSWQAUmVhZABNYXJrT3V0cHV0c0Zpbmlz
aGVkAGdldF9Vc2VkAERiQ29tbWFuZABTcWxDb21tYW5kAFNlbmQAZ2V0X3B3ZABkZWZhdWx0SW5z
dGFuY2UAU0NfOTRjMTUwZGExOGI3NGQ3NTg1YWYzZDc2YzllYmYwZmUAZ2V0X01lc3NhZ2UATWFp
bE1lc3NhZ2UATG9nRXJyb3JUb1RhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAFRvU2luZ2xlAGdldF9UYWJsZU5hbWUAZ2V0X0RhdGFCYXNlTmFtZQBn
ZXRfU2VydmVyTmFtZQBzZXRfTGFzdE5hbWUAc2V0X0ZpcnN0TmFtZQBzZXRfc2VydmVybmFtZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3Nl
AGdldF9TdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb25uZWN0aW9uU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBnZXRfQ29uU3RyaW5nAGdldF9Db25uZXhpb25TdHJpbmcAVG9TdHJp
bmcAZXJyb3JMb2cAZ2V0X1F1ZXJ5VmFsAE5ldHdvcmtDcmVkZW50aWFsAFN5c3RlbS5Db21wb25l
bnRNb2RlbABTeXN0ZW0uTmV0Lk1haWwAU0NfOTRjMTUwZGExOGI3NGQ3NTg1YWYzZDc2YzllYmYw
ZmUuZGxsAHNldF9DdXN0b21lcklEX0lzTnVsbABzZXRfTGFzdE5hbWVfSXNOdWxsAHNldF9GaXJz
dE5hbWVfSXNOdWxsAHNldF9zZXJ2ZXJuYW1lX0lzTnVsbABzZXRfY29sX0lzTnVsbABzZXRfY3Vz
dG9tZXJfSXNOdWxsAHNldF9jcmVhdGVhdF9Jc051bGwAc2V0X2RlbGV0ZWF0X0lzTnVsbABzZXRf
SWRlbnRfSXNOdWxsAFNldE51bGwAc2V0X2NvbABzZXRfRW5hYmxlU3NsAGdldF9JdGVtAHNldF9J
dGVtAFN5c3RlbQByZXNvdXJjZU1hbgBCb29sZWFuAE9wZW4AU2NyaXB0TWFpbgBTZW5kRW1haWxO
b3RpZmljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29u
bmVjdGlvbgBza2lwQ29ubmVjdGlvbgBjb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRp
b24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFw
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAARGJEYXRhUmVhZGVyAFNxbERhdGFS
ZWFkZXIARXhlY3V0ZVJlYWRlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1
ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAHNldF9jdXN0b21lcgBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lLldyYXBwZXIAU3FsUGFyYW1ldGVyAGdldF9MYXN0U2VydmVyAC5jdG9yAC5j
Y3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ185NGMxNTBkYTE4Yjc0ZDc1ODVhZjNkNzZjOWVi
ZjBmZS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfOTRj
MTUwZGExOGI3NGQ3NTg1YWYzZDc2YzllYmYwZmUuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJp
YWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAHNldF9D
cmVkZW50aWFscwBzZXRfVXNlRGVmYXVsdENyZWRlbnRpYWxzAENvbm5lY3Rpb25zAEJ1ZmZlcnMA
Z2V0X1BhcmFtZXRlcnMARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABz
ZXRfY3JlYXRlYXQAc2V0X2RlbGV0ZWF0AE9iamVjdABTeXN0ZW0uTmV0AGdldF9GdWxsU2V0AFNl
dEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AHNldF9JZGVudABTeXN0ZW0uRGF0YS5TcWxDbGllbnQA
U210cENsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQA
TWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABDb252ZXJ0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
UGlwZWxpbmVIb3N0AElDcmVkZW50aWFsc0J5SG9zdABQcmltZU91dHB1dABHZXRWYWx1ZVdpdGhD
b250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AEFk
ZFJvdwBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AG9wX0VxdWFsaXR5AAAAAFdGAGEAaQBs
AGUAZAAgAHQAbwAgAGUAcwB0AGEAYgBsAGkAcwBoACAAYQAgAGQAYQB0AGEAYgBhAHMAZQAgAGMA
bwBuAG4AZQBjAHQAaQBvAG4AOgAgAAAVTABpAHMAdABBAGcAZQBuAHQAcwAAHVMARQBMAEUAQwBU
ACAAKgAgAEYAUgBPAE0AIAAAFWMAdQBzAHQAbwBtAGUAcgBJAGQAABFjAHUAcwB0AG8AbQBlAHIA
ABFMAGEAcwB0AE4AYQBtAGUAABFjAHIAZQBhAHQAZQBhAHQAABFkAGUAbABlAHQAZQBhAHQAABNG
AGkAcgBzAHQATgBhAG0AZQAAC0kAZABlAG4AdAAATUYAYQBpAGwAZQBkACAAdABvACAAZQB4AGUA
YwB1AHQAZQAgAGQAYQB0AGEAYgBhAHMAZQAgAG8AcABlAHIAYQB0AGkAbwBuADoAIAAAgM1EAGEA
dABhACAAUwBvAHUAcgBjAGUAPQBEAEUAUwBLAFQATwBQAC0ANQA3AE0AQgAyAEMATgBcAEkATgBU
AEUATABDAEkAQQA7AEkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnAD0AcwBlAHIAdgBlAHIA
SQBuAGYAbwA7AFUAcwBlAHIAIABJAEQAPQB0AGUAcwB0AGMAbwBuAG4AOwBQAGEAcwBzAHcAbwBy
AGQAPQBpAG4AdABlAGwAYwBpAGEAMgAwADIAMwABf0kATgBTAEUAUgBUACAASQBOAFQATwAgAEUA
cgByAG8AcgBMAG8AZwBUAGEAYgBsAGUAIAAoAEUAcgByAG8AcgBNAGUAcwBzAGEAZwBlACkAIABW
AEEATABVAEUAUwAgACgAQABFAHIAcgBvAHIATQBlAHMAcwBhAGcAZQApAAAbQABFAHIAcgBvAHIA
TQBlAHMAcwBhAGcAZQAAO2sAaABhAGQAaQBqAGEAdABlAHMAdAAuAHAAcgBvAGoAZQBjAHQAQABn
AG0AYQBpAGwALgBjAG8AbQAAQWsAaABhAGQAaQBqAGEAYQBpAHQAbQB5AGgAYQBjAGgAZQBtADIA
MAAwADAAQABnAG0AYQBpAGwALgBjAG8AbQAAN0QAYQB0AGEAYgBhAHMAZQAgAEMAbwBuAG4AZQBj
AHQAaQBvAG4AIABGAGEAaQBsAHUAcgBlAACAkVQAaABlACAAZgBvAGwAbABvAHcAaQBuAGcAIABl
AHIAcgBvAHIAIABvAGMAYwB1AHIAcgBlAGQAIAB3AGgAaQBsAGUAIABlAHMAdABhAGIAbABpAHMA
aABpAG4AZwAgAGEAIABkAGEAdABhAGIAYQBzAGUAIABjAG8AbgBuAGUAYwB0AGkAbwBuADoACgAK
AAAdcwBtAHQAcAAuAGcAbQBhAGkAbAAuAGMAbwBtAAAhZAByAGUAcQB5AHMAcwBoAGoAdwBlAGEA
ZwBlAGkAZAAAR0YAYQBpAGwAZQBkACAAdABvACAAcwBlAG4AZAAgAGUAbQBhAGkAbAAgAG4AbwB0
AGkAZgBpAGMAYQB0AGkAbwBuADoAIAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAg
AGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkA
ZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0
AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAAB9DAG8AbgBuAGUAeABpAG8AbgBTAHQAcgBpAG4A
ZwAAE0MAbwBuAFMAdAByAGkAbgBnAAAZRABhAHQAYQBCAGEAcwBlAE4AYQBtAGUAAA9GAHUAbABs
AFMAZQB0AAAFSQBkAAAVTABhAHMAdABTAGUAcgB2AGUAcgAAB3AAdwBkAAARUQB1AGUAcgB5AFYA
YQBsAAAVUwBlAHIAdgBlAHIATgBhAG0AZQAAE1QAYQBiAGwAZQBOAGEAbQBlAAAJVQBzAGUAZAAA
E1UAcwBlAHIATgBhAG0AZQAxAABxUwBDAF8AOQA0AGMAMQA1ADAAZABhADEAOABiADcANABkADcA
NQA4ADUAYQBmADMAZAA3ADYAYwA5AGUAYgBmADAAZgBlAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAK75bBIwi/tDtoHZei5RqCgABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEXEGBwMOEj0OAyAADgUAAg4ODgUgABGAiQoHBQ4OEkESRRI9BQACAg4OBiACAQ4SOQQg
ABJFBCABHA4EAAEMHAMgAAIFBwIOEkEFIAASgJkHIAISgJ0OHAMgAAgLBwYODg4SSRJNEj0HIAQB
Dg4ODgUgAgEOCAQgAQECBSACAQ4OBiABARKAqQUgAQESSQkgAwESVR0IElkFIAIBCBwDBwEIBgAC
CBJZDgUgAR0ICAUgABKAtQYgARKAuRwFAAASgL0GIAEcEoDBCAABEoDNEYDRBSAAEoDVByACAQ4S
gNUIt3pcVhk04IkIiYRdzYCAzJEDBhI5AgYCAwYSFAMGEhgDBhIMAwYSXQMGEmkDBhJtAwYSIAQg
AQEMCyAEAQgdCB0SVRJZBSABARJdAyAAHAQAABJpBAAAEm0FAAEBEm0EAAASIAMAAAEDKAAOAygA
AgMoAAwDKAAcAygACAQIABJpBAgAEm0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfOTRjMTUwZGExOGI3NGQ3NTg1YWYzZDc2YzllYmYw
ZmUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAALEcAAAAAAAAAAAAARkcAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhHAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwD
AAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARM
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADkA
NABjADEANQAwAGQAYQAxADgAYgA3ADQAZAA3ADUAOAA1AGEAZgAzAGQANwA2AGMAOQBlAGIAZgAw
AGYAZQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOQA0AGMAMQA1ADAAZABhADEAOABi
ADcANABkADcANQA4ADUAYQBmADMAZAA3ADYAYwA5AGUAYgBmADAAZgBlAC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA5ADQAYwAxADUAMABk
AGEAMQA4AGIANwA0AGQANwA1ADgANQBhAGYAMwBkADcANgBjADkAZQBiAGYAMABmAGUALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOQA0AGMAMQA1ADAAZABh
ADEAOABiADcANABkADcANQA4ADUAYQBmADMAZAA3ADYAYwA5AGUAYgBmADAAZgBlAAAANAAIAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABYNwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_94c150da18b74d7585af3d76c9ebf0fe</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ConnexionString,User::ConString,User::DataBaseName,User::FullSet,User::Id,User::LastServer,User::pwd,User::QueryVal,User::ServerName,User::TableName,User::Used,User::UserName1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">DB</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[servername]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[servername]"
                          name="servername" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[deleteat]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[deleteat]"
                          name="deleteat" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[createat]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[createat]"
                          name="createat" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[LastName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[LastName]"
                          name="LastName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[FirstName]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[FirstName]"
                          name="FirstName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[customer]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[customer]"
                          name="customer" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[Ident]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[Ident]"
                          name="Ident" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[col]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[col]"
                          name="col" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[CustomerID]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0].Columns[CustomerID]"
                          name="CustomerID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Staging ListAgents.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Inputs[Entrée de colonne dérivée]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Staging ListAgents\Script Component.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Loop Container\Staging ListAgents.Paths[Sortie de colonne dérivée]"
                  endId="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                  name="Sortie de colonne dérivée"
                  startId="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée.Outputs[Sortie de colonne dérivée]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Staging ListCallStatusGroup"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{F9466B9A-7C61-4160-B778-95BF85520BCC}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Staging ListCallStatusGroup"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
                  description="Destination OLE DB"
                  name="Destination OLE DB"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset">[dbo].[ListCallStatusGroup]</property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                      errorOrTruncationOperation="Insérer"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrée de destination OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Argued]"
                          cachedDataType="r4"
                          cachedName="Argued"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Argued]"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[Argued]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Positive]"
                          cachedDataType="r4"
                          cachedName="Positive"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Positive]"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[Positive]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[StatusText]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="StatusText"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusText]"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[StatusText]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[StatusDetail]"
                          cachedDataType="r4"
                          cachedName="StatusDetail"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusDetail]"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[StatusDetail]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[StatusCode]"
                          cachedDataType="r4"
                          cachedName="StatusCode"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusCode]"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[StatusCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[StatusGroup]"
                          cachedDataType="r4"
                          cachedName="StatusGroup"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusGroup]"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[StatusGroup]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[customerId]"
                          cachedDataType="r4"
                          cachedName="customerId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerId]"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[customerId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[deleteat]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="deleteat"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[deleteat]"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[deleteat]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[createat]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="createat"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[createat]"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[createat]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Oid]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Oid"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Oid]"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[Oid]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[customer]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="customer"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customer]"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[customer]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[servername]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="servername"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[servername]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerId]"
                          dataType="r8"
                          name="customerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customer]"
                          dataType="wstr"
                          length="255"
                          name="customer" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Oid]"
                          dataType="wstr"
                          length="255"
                          name="Oid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusGroup]"
                          dataType="r8"
                          name="StatusGroup" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusCode]"
                          dataType="r8"
                          name="StatusCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusDetail]"
                          dataType="r8"
                          name="StatusDetail" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusText]"
                          dataType="wstr"
                          length="255"
                          name="StatusText" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Comment]"
                          dataType="wstr"
                          length="255"
                          name="Comment" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Positive]"
                          dataType="r8"
                          name="Positive" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Argued]"
                          dataType="r8"
                          name="Argued" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Defaut]"
                          dataType="r8"
                          name="Defaut" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Cost]"
                          dataType="r8"
                          name="Cost" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Currency]"
                          dataType="wstr"
                          length="255"
                          name="Currency" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ValidQuota]"
                          dataType="r8"
                          name="ValidQuota" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Shared]"
                          dataType="wstr"
                          length="255"
                          name="Shared" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerOid]"
                          dataType="wstr"
                          length="255"
                          name="customerOid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[createat]"
                          dataType="wstr"
                          length="255"
                          name="createat" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[deleteat]"
                          dataType="wstr"
                          length="255"
                          name="deleteat" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          dataType="nText"
                          name="servername" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de destination OLE DB"
                      synchronousInputId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_47eabf79e252463e8eccd4bcb981f321.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0eaec0dd-254e-498c-8b2b-774224ddc037}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_47eabf79e252463e8eccd4bcb981f321</RootNamespace>
    <AssemblyName>SC_47eabf79e252463e8eccd4bcb981f321</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_47eabf79e252463e8eccd4bcb981f321" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Net.Mail;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]


public class ScriptMain : UserComponent
{

    private SqlConnection connection;
    private bool skipConnection = false;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        // base.PreExecute();
        /*
         * Add your code here
         */

        // Retrieve the connection string from a variable
        //string connectionString = Variables.ConnexionString;



        // Create a new SqlConnection object
        //connection = new SqlConnection(connectionString);

        // Open the connection
        //connection.Open();

        // Create a new SqlConnection
        //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        // "Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;"
        // connection = new SqlConnection(connectionString);
        // connection.Open();
        // string query = "INSERT INTO test1 (test, testdescription) VALUES ('teest', 'deeesc')";

        //using (SqlCommand command = new SqlCommand(query, connection))
        // {

        //command.Parameters.AddWithValue("@Value1", Row.Column1);
        //command.Parameters.AddWithValue("@Value2", Row.Column2);
        //command.ExecuteNonQuery();
        //}
        base.PreExecute();

        string variableCon = Variables.ConString;

        // Create a new SqlConnection
        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(variableCon);

        try
        {
            connection.Open();
            // Connection has been established successfully
        }
        catch (Exception ex)
        {
            // Handle the connection error
            // Log the error or take any necessary actions

            skipConnection = true;
            // Log the error and move to the next connection
            string errorLog = "Failed to establish a database connection: " + ex.Message;
            // Log the error to a table or file
            // You can use a SQL command or any other logging mechanism here
            // For example:
            LogErrorToTable(errorLog);
            SendEmailNotification(errorLog);


            //connection.Close();
            //throw new Exception("Failed to establish a database connection: " + ex.Message);
        }


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (connection.State == ConnectionState.Open)
            connection.Close();
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        // string variableValue = Variables.VariableName;

        // Use the connection to execute SQL queries and retrieve data
        /* using (SqlCommand command = new SqlCommand("SELECT * FROM test1", connection))
         {
              // Perform additional setup for the command if needed

             // Execute the query and retrieve the data
             using (SqlDataReader reader = command.ExecuteReader())
             {
                while (reader.Read())
                 {
                     // Process the data and populate the output rows
                     OutputcolBuffer.AddRow();
                     OutputcolBuffer.test = reader["test"].ToString();
                     OutputcolBuffer.testdescription = reader["testdescription"].ToString();
                 }
             }
         }
         */

        if (skipConnection)
            return; // Skip executing the query for this connection

        try
        {
            // Example: Execute a SQL query using the connection
            string variableTable = Variables.TableName;
            string varserver = Variables.ServerName;
            /*
                         string query = "INSERT INTO "+ variableTable+"(test, testdescription) VALUES ('teestt', 'deeesc')";


                         using (SqlCommand command = new SqlCommand(query, connection))
                         {
                             command.ExecuteNonQuery();
                         }*/
            if (variableTable == "ListCallStatusGroup")
            {

                using (SqlCommand command = new SqlCommand("SELECT * FROM " + variableTable, connection))
                {
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            try
                            {
                                // Stockez les valeurs dans les variables d'�criture
                                Output0Buffer.AddRow();
                                Output0Buffer.customer = reader["customer"].ToString();
                                Output0Buffer.Oid = reader["Oid"].ToString();
                                Output0Buffer.StatusText = reader["StatusText"].ToString();
                                Output0Buffer.createat = reader["createat"].ToString();
                                Output0Buffer.deleteat = reader["deleteat"].ToString();

                                Output0Buffer.servername = varserver;


                                /*  //OutputcolBuffer.servernamee = varserver;

                               */


                                Output0Buffer.customerId = Convert.ToSingle(reader["customerId"]);
                                Output0Buffer.StatusGroup = Convert.ToSingle(reader["StatusGroup"]);
                                Output0Buffer.StatusCode = Convert.ToSingle(reader["StatusCode"]);
                                Output0Buffer.StatusDetail = Convert.ToSingle(reader["StatusDetail"]);
                                Output0Buffer.Positive = Convert.ToSingle(reader["Positive"]);
                                Output0Buffer.Argued = Convert.ToSingle(reader["Argued"]);
                                Output0Buffer.Positive = Convert.ToSingle(reader["Positive"]);
                                //OutputcolBuffer.ReasonID = (float)reader["ReasonID"];

                            }
                            catch (Exception ex)
                            { 
                            }

                                /* try
                                 {
                                     OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                                 }
                                 catch (Exception ex)
                                 {
                                     // Handle the error
                                     // You can choose to log the error, display a message, or take any other appropriate action
                                     //OutputcolBuffer.Abandonn = null;
                                 }*/

                                //OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                                /* OutputcolBuffer.CallStatusGroup = Convert.ToSingle(reader["CallStatusGroup"]);
                                 OutputcolBuffer.CallStatusNum = Convert.ToSingle(reader["CallStatusNum"]);
                                 OutputcolBuffer.CallStatusDetail = Convert.ToSingle(reader["CallStatusDetail"]);
                                 OutputcolBuffer.EndReason = Convert.ToSingle(reader["EndReason"]);
                                 OutputcolBuffer.EndByAgent = Convert.ToSingle(reader["EndByAgent"]);
                                 OutputcolBuffer.NoAgent = Convert.ToSingle(reader["NoAgent"]);*/


                            }
                    }
                }
            }

        }
        catch (Exception ex)
        {
            // Handle the database operation error
            // Log the error or take any necessary actions
            throw new Exception("Failed to execute database operation: " + ex.Message);
        }

    }


    private void LogErrorToTable(string errorLog)
    {
        // Implement your logging mechanism here
        // For example, execute a SQL command to insert the error log into a table

        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(connectionString);
        connection.Open();

        string logQuery = "INSERT INTO ErrorLogTable (ErrorMessage) VALUES (@ErrorMessage)";

        using (SqlCommand command = new SqlCommand(logQuery, connection))
        {
            command.Parameters.AddWithValue("@ErrorMessage", errorLog);
            command.ExecuteNonQuery();
        }



    }


    private void SendEmailNotification(string errorLog)
    {
        // Configure email settings
        string fromAddress = "khadijatest.project@gmail.com";
        string toAddress = "khadijaaitmyhachem2000@gmail.com";
        string subject = "Database Connection Failure";
        string body = "The following error occurred while establishing a database connection:\n\n" + errorLog;

        // Create and configure the email message
        MailMessage message = new MailMessage(fromAddress, toAddress, subject, body);

        // Send the email using SMTP client
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com", 587);
        smtpClient.EnableSsl = true;
        smtpClient.UseDefaultCredentials = false;
        smtpClient.Credentials = new System.Net.NetworkCredential("khadijatest.project@gmail.com", "dreqysshjweageid");

        try
        {
            smtpClient.Send(message);
        }
        catch (Exception ex)
        {
            throw new Exception("Failed to send email notification: " + ex.Message);
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Single Argued
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Argued_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Column
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Column_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Positive
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Positive_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StatusText
    {
        set
        {
            this[3] = value;
        }
    }
    public bool StatusText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single StatusDetail
    {
        set
        {
            this[4] = value;
        }
    }
    public bool StatusDetail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single StatusCode
    {
        set
        {
            this[5] = value;
        }
    }
    public bool StatusCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single StatusGroup
    {
        set
        {
            this[6] = value;
        }
    }
    public bool StatusGroup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single customerId
    {
        set
        {
            this[7] = value;
        }
    }
    public bool customerId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String deleteat
    {
        set
        {
            this[8] = value;
        }
    }
    public bool deleteat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String createat
    {
        set
        {
            this[9] = value;
        }
    }
    public bool createat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Oid
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Oid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String customer
    {
        set
        {
            this[11] = value;
        }
    }
    public bool customer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String servername
    {
        set
        {
            this[12] = value;
        }
    }
    public bool servername_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_47eabf79e252463e8eccd4bcb981f321.Properties.Settings.get_Default():SC_47eabf79e252463e8eccd4bcb981f321.Properties.Sett" +
    "ings")]

namespace SC_47eabf79e252463e8eccd4bcb981f321.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConnexionString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConnexionString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ConString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DataBaseName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DataBaseName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Object FullSet
    {
        get
        {
            return (Object)(ParentComponent.ReadOnlyVariables["FullSet"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Id
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String LastServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["LastServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String pwd
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["pwd"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String QueryVal
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["QueryVal"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ServerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ServerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TableName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TableName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean Used
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["Used"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UserName1
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UserName1"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_47eabf79e252463e8eccd4bcb981f321</msb:CodeName>
    <msb:DisplayName>SC_47eabf79e252463e8eccd4bcb981f321</msb:DisplayName>
    <msb:ProjectId>{E29C825E-D498-429F-9C52-E2B091E26CA0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_47eabf79e252463e8eccd4bcb981f321.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_47eabf79e252463e8eccd4bcb981f321")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_47eabf79e252463e8eccd4bcb981f321")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_47eabf79e252463e8eccd4bcb981f321.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_47eabf79e252463e8eccd4bcb981f321.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_47eabf79e252463e8eccd4bcb981f321.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_47eabf79e252463e8eccd4bcb981f321.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_47eabf79e252463e8eccd4bcb981f321.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_47eabf79e252463e8eccd4bcb981f321.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACHTgWQAAAAAAAAAAOAAIiALATAAACwAAAAIAAAAAAAAdkoA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACRKAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAfCoAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABY
SgAAAAAAAEgAAAACAAUAOCkAADQgAAABAAAAAAAAAGxJAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgBVAAAAAQAAEQIoEAAACgJ7BAAABG8tAAAGCgIGcxEA
AAp9AQAABAJ7AQAABG8SAAAK3ikLAhd9AgAABHIBAABwB28TAAAKKBQAAAoMAggoBAAABgIIKAUA
AAbeACoAAAABEAAAAAAeAA0rACkPAAABggIoFQAACgJ7AQAABG8WAAAKFzMLAnsBAAAEbxcAAAoq
AAAAGzADAPUBAAACAAARAnsCAAAELAEqAAJ7BAAABG81AAAGCgJ7BAAABG80AAAGCwZyWQAAcCgY
AAAKOacBAABygQAAcAYoFAAACgJ7AQAABHMZAAAKDAhvGgAACg04YQEAAAACewUAAARvIgAABgJ7
BQAABAlynwAAcG8bAAAKbxwAAApvHgAABgJ7BQAABAlysQAAcG8bAAAKbxwAAApvHAAABgJ7BQAA
BAlyuQAAcG8bAAAKbxwAAApvDgAABgJ7BQAABAlyzwAAcG8bAAAKbxwAAApvGgAABgJ7BQAABAly
4QAAcG8bAAAKbxwAAApvGAAABgJ7BQAABAdvIAAABgJ7BQAABAly8wAAcG8bAAAKKB0AAApvFgAA
BgJ7BQAABAlyCQEAcG8bAAAKKB0AAApvFAAABgJ7BQAABAlyIQEAcG8bAAAKKB0AAApvEgAABgJ7
BQAABAlyNwEAcG8bAAAKKB0AAApvEAAABgJ7BQAABAlyUQEAcG8bAAAKKB0AAApvDAAABgJ7BQAA
BAlyYwEAcG8bAAAKKB0AAApvCAAABgJ7BQAABAlyUQEAcG8bAAAKKB0AAApvDAAABt4DJt4ACW8e
AAAKOpT+///eCgksBglvHwAACtzeCggsBghvHwAACtzeGRMEcnEBAHARBG8TAAAKKBQAAApzIAAA
CnoqAAAAQWQAAAAAAABWAAAAXQEAALMBAAADAAAADwAAAQIAAABQAAAAcwEAAMMBAAAKAAAAAAAA
AAIAAABJAAAAhgEAAM8BAAAKAAAAAAAAAAAAAAAKAAAA0QEAANsBAAAZAAAADwAAARswAwBUAAAA
AwAAEXK/AQBwCgIGcxEAAAp9AQAABAJ7AQAABG8SAAAKco4CAHACewEAAARzGQAACgsHbyEAAApy
DgMAcANvIgAACiYHbyMAAAom3goHLAYHbx8AAArcKgEQAAACAC4AG0kACgAAAAAbMAQAgQAAAAQA
ABFyKgMAcHJmAwBwCnKoAwBwC3LgAwBwAygUAAAKDAYHCHMkAAAKDXJzBABwIEsCAABzJQAAChME
EQQXbyYAAAoRBBZvJwAAChEEcioDAHBykQQAcHMoAAAKbykAAAoRBAlvKgAACt4ZEwVyswQAcBEF
bxMAAAooFAAACnMgAAAKeioAAAABEAAAAABdAApnABkPAAABHgIoJQAABioqAgMEBSgrAAAKKjoC
FgOMKwAAASgsAAAKKloDLAgCFigtAAAKKnL7BABwcy4AAAp6OgIXA4wtAAABKCwAAAoqWgMsCAIX
KC0AAAoqcvsEAHBzLgAACno6AhgDjCsAAAEoLAAACipaAywIAhgoLQAACipy+wQAcHMuAAAKeiYC
GQMoLAAACipaAywIAhkoLQAACipy+wQAcHMuAAAKejoCGgOMKwAAASgsAAAKKloDLAgCGigtAAAK
KnL7BABwcy4AAAp6OgIbA4wrAAABKCwAAAoqWgMsCAIbKC0AAAoqcvsEAHBzLgAACno6AhwDjCsA
AAEoLAAACipaAywIAhwoLQAACipy+wQAcHMuAAAKejoCHQOMKwAAASgsAAAKKloDLAgCHSgtAAAK
KnL7BABwcy4AAAp6JgIeAygsAAAKKloDLAgCHigtAAAKKnL7BABwcy4AAAp6KgIfCQMoLAAACipe
AywJAh8JKC0AAAoqcvsEAHBzLgAACnoqAh8KAygsAAAKKl4DLAkCHwooLQAACipy+wQAcHMuAAAK
eioCHwsDKCwAAAoqXgMsCQIfCygtAAAKKnL7BABwcy4AAAp6KgIfDAMoLAAACipeAywJAh8MKC0A
AAoqcvsEAHBzLgAACnoeAigvAAAKKh4CKDAAAAoqHgIoMQAACip+AigyAAAKAgJzKgAABn0DAAAE
AgJzKwAABn0EAAAEKgYqbgJ7BQAABCwSAnsFAAAEbyMAAAYCFH0FAAAEKgAAABMwBQBJAAAABQAA
ERYKKy4EBpQOBHKYBQBwKDMAAAozGQIFBpoCBAaUKDQAAAoOBHMHAAAGfQUAAAQGF1gKBgMyzgJv
KQAABgJvJgAABgIoJwAABio6Aig1AAAKAgN9BgAABCo6Aig1AAAKAgN9BwAABCqWAnsHAAAEbzYA
AApyqgUAcG83AAAKKDgAAApvOQAACnQhAAABKpYCewcAAARvNgAACnLKBQBwbzcAAAooOAAACm85
AAAKdCEAAAEqlgJ7BwAABG82AAAKct4FAHBvNwAACig4AAAKbzkAAAp0IQAAASqCAnsHAAAEbzYA
AApy+AUAcG83AAAKKDgAAApvOQAACiqWAnsHAAAEbzYAAApyCAYAcG83AAAKKDgAAApvOQAACqUt
AAABKpYCewcAAARvNgAACnIOBgBwbzcAAAooOAAACm85AAAKdCEAAAEqlgJ7BwAABG82AAAKciQG
AHBvNwAACig4AAAKbzkAAAp0IQAAASqWAnsHAAAEbzYAAApyLAYAcG83AAAKKDgAAApvOQAACnQh
AAABKpYCewcAAARvNgAACnI+BgBwbzcAAAooOAAACm85AAAKdCEAAAEqlgJ7BwAABG82AAAKclQG
AHBvNwAACig4AAAKbzkAAAp0IQAAASqWAnsHAAAEbzYAAApyaAYAcG83AAAKKDgAAApvOQAACqUy
AAABKpYCewcAAARvNgAACnJyBgBwbzcAAAooOAAACm85AAAKdCEAAAEqHgIoNQAACiqufggAAAQt
HnKGBgBw0AcAAAIoOgAACm87AAAKczwAAAqACAAABH4IAAAEKhp+CQAABCoeAoAJAAAEKhp+CgAA
BCoeAig9AAAKKi5zPQAABoAKAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
AAgLAAAjfgAAdAsAAGwLAAAjU3RyaW5ncwAAAADgFgAA+AYAACNVUwDYHQAAEAAAACNHVUlEAAAA
6B0AAEwCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAA1AAAACAAAAAoAAAA+
AAAAJgAAAD0AAAAQAAAABQAAAAQAAAApAAAAKgAAAAEAAAAGAAAAAQAAAAAA4gQBAAAAAAAGAFUD
dggGAOkDdggGAKECYwgPAOoIAAAGAM4CsgYGADgDsgYGABkDsgYGANADsgYGAHUDsgYGAI4DsgYG
AOUCsgYGAAADPgQKAKkDxgEOAOgGNQoGACAHPAYOAPEANQoOAKEHNQoSADQBwQQSAEsKwQQKANoH
xgEWAMsHxgEKAEkHxgEKAHQKxgEGAPwJPAYGAIQCYwgGAOsHlggGAD0HnQYSAEQCqwQSALUCqwQS
ABQCiAYGAGkCdggOANsGKgcGAHwEPAYOAFkChwAOAJQHKgcGAKEKPAYGAFABPAYOAMQGNQoOADAI
NQoOAOcAKgcSAJkEAwoSAMoKAwoGAIIBPAYGABAHPAYGAGwAPAYaABEACAgaAAEACAhfAAwLAAAa
ACIACAgGAE8GPAYGAOcBPAYGAFwBPAYGAEcLsgYAAAAAcgAAAAAAAQABAAEAEABcBgAAEAABAAEA
AQAQAL0HAABRAAMABwABABAAVgoAAF0AAwAlAAEAEACWCQAAYQAGACoAAQAQADQJAABhAAcAKwAA
ABAAnQj5CGEACAA4AAABEABjCfkIeQAKADwAAQAFBwsBAQD2Bg8BBgCWCRIBBgA0CRYBBgC9BxoB
AQBkCh4BAQBkCh4BEQBDBiIBEQAEAiYBEQAJASoBUCAAAAAAxgAHBAYAAQDEIAAAAADGABIEBgAB
AOggAAAAAMYAxwkGAAEAUCMAAAAAgQBAARAAAQDAIwAAAACBAHIGEAACAGAkAAAAAIYYTAgGAAMA
aCQAAAAAhhhMCKcAAwBzJAAAAACGCNQALgEGAIIkAAAAAIYIIAWPAAcAmSQAAAAAhghnBgEACACo
JAAAAACGCJkFjwAJAL8kAAAAAIYIMQQuAQoAziQAAAAAhghtBY8ACwDlJAAAAACGCOkKEAAMAO8k
AAAAAIYI/gWPAA0ABiUAAAAAhgjRBC4BDgAVJQAAAACGCIEFjwAPACwlAAAAAIYIGQEuARAAOyUA
AAAAhghBBY8AEQBSJQAAAACGCIQHLgESAGElAAAAAIYIqwWPABMAeCUAAAAAhgijAC4BFACHJQAA
AACGCAoFjwAVAJ4lAAAAAIYI7wkQABYAqCUAAAAAhgjqBY8AFwC/JQAAAACGCOIJEAAYAMolAAAA
AIYI1gWPABkA4iUAAAAAhgjfABAAGgDtJQAAAACGCDIFjwAbAAUmAAAAAIYI+wcQABwAECYAAAAA
hgjCBY8AHQAoJgAAAACGCLcBEAAeADMmAAAAAIYIVwWPAB8ASyYAAAAAhgA8CwYAIABTJgAAAACG
ABoKBgAgAFsmAAAAAIYAHQpZACAAYyYAAAAAhhhMCAYAIACDJgAAAADGAbkJBgAgAIUmAAAAAIEA
twAGACAApCYAAAAAxgDdCjMBIACDJgAAAADGAccJBgAkAPkmAAAAAIYYTAg/ASQACCcAAAAAhhhM
CD8BJQAXJwAAAACGCGYEIgAmAD0nAAAAAIYIWAQiACYAYycAAAAAhgiXASIAJgCJJwAAAACGCA4K
RQEmAKonAAAAAIYInABxACYA0CcAAAAAhgg9CCIAJgD2JwAAAACGCAEBIgAmABwoAAAAAIYIjAQi
ACYAQigAAAAAhgioASIAJgBoKAAAAACGCIkBIgAmAI4oAAAAAIYIywBZACYAtCgAAAAAhgheACIA
JgDaKAAAAACDGEwIBgAmAOIoAAAAAJMI5wdJASYADikAAAAAkwjsAU4BJgAVKQAAAACTCPgBUwEm
AB0pAAAAAJYIKQpZAScAJCkAAAAAhhhMCAYAJwAsKQAAAACRGFIIXgEnAAAAAQCDBAAAAQCDBAAA
AQDgBwAAAgA+CQAAAwBXBwAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQAr
BAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAA
AQArBAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQArBAAAAQAr
BAAAAQC/CQAAAgBZCAAAAwCiCQAABABXBwAAAQB6CgAAAQB6CgAAAQArBAkATAgBABEATAgGABkA
TAgKACkATAgQADEATAgQADkATAgQAEEATAgQAEkATAgQAFEATAgQAFkATAgQAGEATAgQAGkATAgG
AMkATAgGAOkATAgVAPkATAgGALkABwQGAHEATAgQAAEBVwYGAHkAKAEiAAkB2wkmALkAEgQGAAEB
OgIsAAEBLAIGAAkBYAs9AIEATAhDAIEArwdKABkBKgZPAMEAegQiACEBgAFUABkBsgBZACkBMgIG
AHkATAgQAIEAqgljADEBHgRpAEEBUAtxAJEATAiBAJkATAiJAJkAHAaPAJkAfAmPAEkBTAiUAJkA
bAmaAJkA/AChAKEATAinAKEAMwaxAKEAFAYBAGEBTAgQAKEAPAsGAKEAGgoGAKEAHQpZALkATAgG
ALkAewC7ALkAUgnCAMEATAgGALkAKAnIAHEBKgbOALkAJwvVAHkB+ArbAJkBbgHiAJkBQwvrANEA
TAjxAPEATAgGAC4ACwCFAS4AEwCOAS4AGwCtAS4AIwC2AS4AKwDfAS4AMwDfAS4AOwDfAS4AQwC2
AS4ASwDlAS4AUwDfAS4AWwD8AUMAYwBGAuMAawBGAkEBewBGAukEcwCtAQkFcwCtARsAMgBdAHUA
twADAAEABgAbAAcAJwAIACkAAADYAGIBAAAkBWYBAABrBmoBAACdBWYBAAA1BGIBAABxBWYBAADt
Cm4BAAACBmYBAADVBGIBAACFBWYBAAAdAWIBAABFBWYBAACIB2IBAACvBWYBAACnAGIBAAAOBWYB
AADzCW4BAADuBWYBAADmCW4BAADaBWYBAADjAG4BAAA2BWYBAAD/B24BAADGBWYBAAC7AW4BAABb
BWYBAABqBG4BAABcBG4BAACbAW4BAAASCnIBAACvAGoBAABBCG4BAAAFAW4BAACQBG4BAACsAW4B
AACNAW4BAADPAGYBAABiAG4BAADrB3YBAAAMAnsBAAAtCoABAQAIAAMAAQAJAAUAAQAKAAcAAQAL
AAkAAQAMAAsAAQANAA0AAQAOAA8AAQAPABEAAQAQABMAAQARABUAAQASABcAAQATABkAAQAUABsA
AQAVAB0AAQAWAB8AAQAXACEAAQAYACMAAQAZACUAAQAaACcAAQAbACkAAQAcACsAAQAdAC0AAQAe
AC8AAQAfADEAAQAgADMAAQAhADUAAgAsADcAAgAtADkAAgAuADsAAgAvAD0AAgAwAD8AAgAxAEEA
AgAyAEMAAgAzAEUAAgA0AEcAAgA1AEkAAgA2AEsAAgA3AE0AAgA5AE8AAgA6AFEAAQA7AFEAAgA8
AFMABIAAAAEAAAAAAAAAAAAAAAAAOgAAAAQAAAAAAAAAAAAAAPkAkwAAAAAADwAAAAAAAAAAAAAA
AgGECgAAAAAEAAAAAAAAAAAAAAD5AIcAAAAAAAQAAAAAAAAAAAAAAPkAPAYAAAAADwAAAAAAAAAA
AAAAAgGpCgAAAAAPAAAAAAAAAAAAAAACAWEHAAAAAAAAAAABAAAApwgAAAAAAAAASURUU1Zhcmlh
YmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAU0NfNDdlYWJm
NzllMjUyNDYzZThlY2NkNGJjYjk4MWYzMjEAZ2V0X1VzZXJOYW1lMQBJbnQzMgA8TW9kdWxlPgBH
ZXRPdXRwdXRJRABTeXN0ZW0uRGF0YQBtc2NvcmxpYgBnZXRfSWQAc2V0X2N1c3RvbWVySWQAUmVh
ZABNYXJrT3V0cHV0c0ZpbmlzaGVkAGdldF9Vc2VkAHNldF9Bcmd1ZWQAc2V0X09pZABEYkNvbW1h
bmQAU3FsQ29tbWFuZABTZW5kAGdldF9wd2QAZGVmYXVsdEluc3RhbmNlAHNldF9TdGF0dXNDb2Rl
AGdldF9NZXNzYWdlAE1haWxNZXNzYWdlAExvZ0Vycm9yVG9UYWJsZQBJRGlzcG9zYWJsZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBUb1NpbmdsZQBnZXRfVGFibGVOYW1lAGdl
dF9EYXRhQmFzZU5hbWUAZ2V0X1NlcnZlck5hbWUAc2V0X3NlcnZlcm5hbWUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARGlzcG9zZQBnZXRfU3RhdGUA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29ubmVjdGlvblN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4
ZWN1dGUAUG9zdEV4ZWN1dGUAQWRkV2l0aFZhbHVlAHZhbHVlAHNldF9Qb3NpdGl2ZQBTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAGdldF9Db25TdHJpbmcAZ2V0X0Nvbm5leGlvblN0cmluZwBUb1N0
cmluZwBlcnJvckxvZwBnZXRfUXVlcnlWYWwATmV0d29ya0NyZWRlbnRpYWwAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFN5c3RlbS5OZXQuTWFpbABzZXRfU3RhdHVzRGV0YWlsAFNDXzQ3ZWFiZjc5ZTI1
MjQ2M2U4ZWNjZDRiY2I5ODFmMzIxLmRsbABzZXRfY3VzdG9tZXJJZF9Jc051bGwAc2V0X0FyZ3Vl
ZF9Jc051bGwAc2V0X09pZF9Jc051bGwAc2V0X1N0YXR1c0NvZGVfSXNOdWxsAHNldF9zZXJ2ZXJu
YW1lX0lzTnVsbABzZXRfUG9zaXRpdmVfSXNOdWxsAHNldF9TdGF0dXNEZXRhaWxfSXNOdWxsAHNl
dF9Db2x1bW5fSXNOdWxsAHNldF9TdGF0dXNHcm91cF9Jc051bGwAc2V0X2N1c3RvbWVyX0lzTnVs
bABzZXRfY3JlYXRlYXRfSXNOdWxsAHNldF9kZWxldGVhdF9Jc051bGwAc2V0X1N0YXR1c1RleHRf
SXNOdWxsAFNldE51bGwAc2V0X0VuYWJsZVNzbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVz
b3VyY2VNYW4AQm9vbGVhbgBPcGVuAFNjcmlwdE1haW4Ac2V0X0NvbHVtbgBTZW5kRW1haWxOb3Rp
ZmljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVt
LlJlZmxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVj
dGlvbgBza2lwQ29ubmVjdGlvbgBjb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24A
U3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAAc2V0X1N0YXR1c0dyb3VwAERiRGF0YVJl
YWRlcgBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1
ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBzZXRfY3VzdG9tZXIATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAFNxbFBhcmFtZXRlcgBnZXRfTGFzdFNl
cnZlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfNDdlYWJmNzllMjUyNDYz
ZThlY2NkNGJjYjk4MWYzMjEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNDXzQ3ZWFiZjc5ZTI1MjQ2M2U4ZWNjZDRiY2I5ODFmMzIxLlByb3BlcnRpZXMAZ2V0
X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBT
ZXR0aW5ncwBzZXRfQ3JlZGVudGlhbHMAc2V0X1VzZURlZmF1bHRDcmVkZW50aWFscwBDb25uZWN0
aW9ucwBCdWZmZXJzAGdldF9QYXJhbWV0ZXJzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0
Um93cwBDb25jYXQAc2V0X2NyZWF0ZWF0AHNldF9kZWxldGVhdABPYmplY3QAU3lzdGVtLk5ldABn
ZXRfRnVsbFNldABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVsdABTeXN0ZW0uRGF0YS5TcWxDbGll
bnQAU210cENsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25l
bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABDb252ZXJ0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuUGlwZWxpbmVIb3N0AElDcmVkZW50aWFsc0J5SG9zdABQcmltZU91dHB1dABzZXRfU3RhdHVz
VGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9F
dmFsdWF0b3JDb250ZXh0AEFkZFJvdwBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AG9wX0Vx
dWFsaXR5AABXRgBhAGkAbABlAGQAIAB0AG8AIABlAHMAdABhAGIAbABpAHMAaAAgAGEAIABkAGEA
dABhAGIAYQBzAGUAIABjAG8AbgBuAGUAYwB0AGkAbwBuADoAIAAAJ0wAaQBzAHQAQwBhAGwAbABT
AHQAYQB0AHUAcwBHAHIAbwB1AHAAAB1TAEUATABFAEMAVAAgACoAIABGAFIATwBNACAAABFjAHUA
cwB0AG8AbQBlAHIAAAdPAGkAZAAAFVMAdABhAHQAdQBzAFQAZQB4AHQAABFjAHIAZQBhAHQAZQBh
AHQAABFkAGUAbABlAHQAZQBhAHQAABVjAHUAcwB0AG8AbQBlAHIASQBkAAAXUwB0AGEAdAB1AHMA
RwByAG8AdQBwAAAVUwB0AGEAdAB1AHMAQwBvAGQAZQAAGVMAdABhAHQAdQBzAEQAZQB0AGEAaQBs
AAARUABvAHMAaQB0AGkAdgBlAAANQQByAGcAdQBlAGQAAE1GAGEAaQBsAGUAZAAgAHQAbwAgAGUA
eABlAGMAdQB0AGUAIABkAGEAdABhAGIAYQBzAGUAIABvAHAAZQByAGEAdABpAG8AbgA6ACAAAIDN
RABhAHQAYQAgAFMAbwB1AHIAYwBlAD0ARABFAFMASwBUAE8AUAAtADUANwBNAEIAMgBDAE4AXABJ
AE4AVABFAEwAQwBJAEEAOwBJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwA9AHMAZQByAHYA
ZQByAEkAbgBmAG8AOwBVAHMAZQByACAASQBEAD0AdABlAHMAdABjAG8AbgBuADsAUABhAHMAcwB3
AG8AcgBkAD0AaQBuAHQAZQBsAGMAaQBhADIAMAAyADMAAX9JAE4AUwBFAFIAVAAgAEkATgBUAE8A
IABFAHIAcgBvAHIATABvAGcAVABhAGIAbABlACAAKABFAHIAcgBvAHIATQBlAHMAcwBhAGcAZQAp
ACAAVgBBAEwAVQBFAFMAIAAoAEAARQByAHIAbwByAE0AZQBzAHMAYQBnAGUAKQAAG0AARQByAHIA
bwByAE0AZQBzAHMAYQBnAGUAADtrAGgAYQBkAGkAagBhAHQAZQBzAHQALgBwAHIAbwBqAGUAYwB0
AEAAZwBtAGEAaQBsAC4AYwBvAG0AAEFrAGgAYQBkAGkAagBhAGEAaQB0AG0AeQBoAGEAYwBoAGUA
bQAyADAAMAAwAEAAZwBtAGEAaQBsAC4AYwBvAG0AADdEAGEAdABhAGIAYQBzAGUAIABDAG8AbgBu
AGUAYwB0AGkAbwBuACAARgBhAGkAbAB1AHIAZQAAgJFUAGgAZQAgAGYAbwBsAGwAbwB3AGkAbgBn
ACAAZQByAHIAbwByACAAbwBjAGMAdQByAHIAZQBkACAAdwBoAGkAbABlACAAZQBzAHQAYQBiAGwA
aQBzAGgAaQBuAGcAIABhACAAZABhAHQAYQBiAGEAcwBlACAAYwBvAG4AbgBlAGMAdABpAG8AbgA6
AAoACgAAHXMAbQB0AHAALgBnAG0AYQBpAGwALgBjAG8AbQAAIWQAcgBlAHEAeQBzAHMAaABqAHcA
ZQBhAGcAZQBpAGQAAEdGAGEAaQBsAGUAZAAgAHQAbwAgAHMAZQBuAGQAIABlAG0AYQBpAGwAIABu
AG8AdABpAGYAaQBjAGEAdABpAG8AbgA6ACAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0
AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMA
cwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBu
AHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAwAAAfQwBvAG4AbgBlAHgAaQBvAG4AUwB0AHIA
aQBuAGcAABNDAG8AbgBTAHQAcgBpAG4AZwAAGUQAYQB0AGEAQgBhAHMAZQBOAGEAbQBlAAAPRgB1
AGwAbABTAGUAdAAABUkAZAAAFUwAYQBzAHQAUwBlAHIAdgBlAHIAAAdwAHcAZAAAEVEAdQBlAHIA
eQBWAGEAbAAAFVMAZQByAHYAZQByAE4AYQBtAGUAABNUAGEAYgBsAGUATgBhAG0AZQAACVUAcwBl
AGQAABNVAHMAZQByAE4AYQBtAGUAMQAAcVMAQwBfADQANwBlAGEAYgBmADcAOQBlADIANQAyADQA
NgAzAGUAOABlAGMAYwBkADQAYgBjAGIAOQA4ADEAZgAzADIAMQAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAcDyKnKyQUkW3ckWgduP5yQAEIAEBCAMgAAEFIAEBEREE
IAEBDgUgAQERcQYHAw4SPQ4DIAAOBQACDg4OBSAAEYCJCgcFDg4SQRJFEj0FAAICDg4GIAIBDhI5
BCAAEkUEIAEcDgQAAQwcAyAAAgUHAg4SQQUgABKAmQcgAhKAnQ4cAyAACAsHBg4ODhJJEk0SPQcg
BAEODg4OBSACAQ4IBCABAQIFIAIBDg4GIAEBEoCpBSABARJJCSADARJVHQgSWQUgAgEIHAMHAQgG
AAIIElkOBSABHQgIBSAAEoC5BiABEoC9HAUAABKAwQYgARwSgMUIAAESgM0RgNEFIAASgNUHIAIB
DhKA1Qi3elxWGTTgiQiJhF3NgIDMkQMGEjkCBgIDBhIUAwYSGAMGEgwDBhJdAwYSaQMGEm0DBhIg
BCABAQwLIAQBCB0IHRJVElkFIAEBEl0DIAAcBAAAEmkEAAASbQUAAQESbQQAABIgAwAAAQMoAAwD
KAACAygACAMoAA4DKAAcBAgAEmkECAASbQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ180N2VhYmY3OWUyNTI0NjNlOGVjY2Q0YmNiOTgx
ZjMyMQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIzAABJAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAABMSgAAAAAAAAAAAABmSgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWEoA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA0ADcA
ZQBhAGIAZgA3ADkAZQAyADUAMgA0ADYAMwBlADgAZQBjAGMAZAA0AGIAYwBiADkAOAAxAGYAMwAy
ADEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADQANwBlAGEAYgBmADcAOQBlADIANQAy
ADQANgAzAGUAOABlAGMAYwBkADQAYgBjAGIAOQA4ADEAZgAzADIAMQAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANAA3AGUAYQBiAGYANwA5
AGUAMgA1ADIANAA2ADMAZQA4AGUAYwBjAGQANABiAGMAYgA5ADgAMQBmADMAMgAxAC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADQANwBlAGEAYgBmADcAOQBl
ADIANQAyADQANgAzAGUAOABlAGMAYwBkADQAYgBjAGIAOQA4ADEAZgAzADIAMQAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAeDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_47eabf79e252463e8eccd4bcb981f321</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ConnexionString,User::ConString,User::DataBaseName,User::FullSet,User::Id,User::LastServer,User::pwd,User::QueryVal,User::ServerName,User::TableName,User::Used,User::UserName1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">FC</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[Argued]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[Argued]"
                          name="Argued" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[Column]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[Column]"
                          name="Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[Positive]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[Positive]"
                          name="Positive" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[StatusText]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[StatusText]"
                          name="StatusText" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[StatusDetail]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[StatusDetail]"
                          name="StatusDetail" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[StatusCode]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[StatusCode]"
                          name="StatusCode" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[StatusGroup]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[StatusGroup]"
                          name="StatusGroup" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[customerId]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[customerId]"
                          name="customerId" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[deleteat]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[deleteat]"
                          name="deleteat" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[createat]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[createat]"
                          name="createat" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[Oid]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[Oid]"
                          name="Oid" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[customer]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[customer]"
                          name="customer" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[servername]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0].Columns[servername]"
                          name="servername" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Staging ListCallStatusGroup.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Staging ListCampaign"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{DC360200-255B-4196-8CA6-F3FF6D2FD4AB}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Staging ListCampaign"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
                  description="Destination OLE DB"
                  name="Destination OLE DB"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset">[dbo].[ListCampaigns]</property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                      errorOrTruncationOperation="Insérer"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrée de destination OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[MaxChannels]"
                          cachedDataType="r4"
                          cachedName="MaxChannels"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxChannels]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[MaxChannels]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Type]"
                          cachedDataType="r4"
                          cachedName="Type"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Type]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallNoAnswerParam]"
                          cachedDataType="r4"
                          cachedName="CallNoAnswerParam"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallNoAnswerParam]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallNoAnswerParam]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallNoAnswer]"
                          cachedDataType="r4"
                          cachedName="CallNoAnswer"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallNoAnswer]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallNoAnswer]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallTransition]"
                          cachedDataType="r4"
                          cachedName="CallTransition"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallTransition]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallTransition]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallClassification]"
                          cachedDataType="r4"
                          cachedName="CallClassification"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallClassification]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallClassification]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[PreviewCallAfter]"
                          cachedDataType="r4"
                          cachedName="PreviewCallAfter"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[PreviewCallAfter]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[PreviewCallAfter]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Modif]"
                          cachedDataType="r4"
                          cachedName="Modif"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Modif]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[Modif]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[State]"
                          cachedDataType="r4"
                          cachedName="State"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[State]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[State]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[StatusGroup]"
                          cachedDataType="r4"
                          cachedName="StatusGroup"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusGroup]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[StatusGroup]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[WaitMsgDuration]"
                          cachedDataType="r4"
                          cachedName="WaitMsgDuration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WaitMsgDuration]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[WaitMsgDuration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[MaxChannelsPerAgent]"
                          cachedDataType="r4"
                          cachedName="MaxChannelsPerAgent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxChannelsPerAgent]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[MaxChannelsPerAgent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[customer]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="customer"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customer]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[customer]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Oid]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Oid"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Oid]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[Oid]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[DID]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="DID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DID]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[DID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Description]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[Description]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[DBName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="DBName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DBName]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[DBName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[TableName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="TableName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[TableName]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[TableName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[WaitTimeMsg]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="WaitTimeMsg"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WaitTimeMsg]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[WaitTimeMsg]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[MenuMsg]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="MenuMsg"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MenuMsg]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[MenuMsg]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[AgentMsg]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="AgentMsg"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AgentMsg]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[AgentMsg]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[WaitMsg]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="WaitMsg"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WaitMsg]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[WaitMsg]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[QuerySchedulerId]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="QuerySchedulerId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[QuerySchedulerId]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[QuerySchedulerId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallClassificationNumbers]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CallClassificationNumbers"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallClassificationNumbers]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallClassificationNumbers]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallTransitionNumbers]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CallTransitionNumbers"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallTransitionNumbers]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallTransitionNumbers]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallDisturbedParam]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CallDisturbedParam"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallDisturbedParam]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallDisturbedParam]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallAbandonParam]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CallAbandonParam"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallAbandonParam]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallAbandonParam]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallMissedParam]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CallMissedParam"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallMissedParam]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallMissedParam]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[deleteat]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="deleteat"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[deleteat]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[deleteat]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[createat]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="createat"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[createat]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[createat]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[TransCallerId]"
                          cachedDataType="r4"
                          cachedName="TransCallerId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[TransCallerId]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[TransCallerId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallMissed]"
                          cachedDataType="r4"
                          cachedName="CallMissed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallMissed]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallMissed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallAbandon]"
                          cachedDataType="r4"
                          cachedName="CallAbandon"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallAbandon]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallAbandon]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallAnsweringMachineParam]"
                          cachedDataType="r4"
                          cachedName="CallAnsweringMachineParam"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallAnsweringMachineParam]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallAnsweringMachineParam]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallAnsweringMachine]"
                          cachedDataType="r4"
                          cachedName="CallAnsweringMachine"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallAnsweringMachine]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallAnsweringMachine]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallDisturbed]"
                          cachedDataType="r4"
                          cachedName="CallDisturbed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallDisturbed]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallDisturbed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallBusyParam]"
                          cachedDataType="r4"
                          cachedName="CallBusyParam"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallBusyParam]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallBusyParam]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallBusy]"
                          cachedDataType="r4"
                          cachedName="CallBusy"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallBusy]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallBusy]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[customerId]"
                          cachedDataType="r4"
                          cachedName="customerId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerId]"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[customerId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customerId]"
                          dataType="r8"
                          name="customerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[customer]"
                          dataType="wstr"
                          length="255"
                          name="customer" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Oid]"
                          dataType="wstr"
                          length="255"
                          name="Oid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DID]"
                          dataType="wstr"
                          length="255"
                          name="DID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Type]"
                          dataType="r8"
                          name="Type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DBName]"
                          dataType="wstr"
                          length="255"
                          name="DBName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[TableName]"
                          dataType="wstr"
                          length="255"
                          name="TableName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxChannels]"
                          dataType="r8"
                          name="MaxChannels" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MaxChannelsPerAgent]"
                          dataType="r8"
                          name="MaxChannelsPerAgent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WaitTimeMsg]"
                          dataType="wstr"
                          length="255"
                          name="WaitTimeMsg" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MenuMsg]"
                          dataType="wstr"
                          length="255"
                          name="MenuMsg" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AgentMsg]"
                          dataType="wstr"
                          length="255"
                          name="AgentMsg" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WaitMsg]"
                          dataType="wstr"
                          length="255"
                          name="WaitMsg" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WaitMsgDuration]"
                          dataType="r8"
                          name="WaitMsgDuration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[StatusGroup]"
                          dataType="r8"
                          name="StatusGroup" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[State]"
                          dataType="r8"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Modif]"
                          dataType="r8"
                          name="Modif" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[QuerySchedulerId]"
                          dataType="wstr"
                          length="255"
                          name="QuerySchedulerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[PreviewCallAfter]"
                          dataType="r8"
                          name="PreviewCallAfter" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallClassification]"
                          dataType="r8"
                          name="CallClassification" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallClassificationNumbers]"
                          dataType="wstr"
                          length="255"
                          name="CallClassificationNumbers" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallTransition]"
                          dataType="r8"
                          name="CallTransition" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallTransitionNumbers]"
                          dataType="wstr"
                          length="255"
                          name="CallTransitionNumbers" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallNoAnswer]"
                          dataType="r8"
                          name="CallNoAnswer" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallNoAnswerParam]"
                          dataType="r8"
                          name="CallNoAnswerParam" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallBusy]"
                          dataType="r8"
                          name="CallBusy" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallBusyParam]"
                          dataType="r8"
                          name="CallBusyParam" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallDisturbed]"
                          dataType="r8"
                          name="CallDisturbed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallDisturbedParam]"
                          dataType="wstr"
                          length="255"
                          name="CallDisturbedParam" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallAnsweringMachine]"
                          dataType="r8"
                          name="CallAnsweringMachine" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallAnsweringMachineParam]"
                          dataType="r8"
                          name="CallAnsweringMachineParam" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallAbandon]"
                          dataType="r8"
                          name="CallAbandon" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallAbandonParam]"
                          dataType="wstr"
                          length="255"
                          name="CallAbandonParam" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallMissed]"
                          dataType="r8"
                          name="CallMissed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallMissedParam]"
                          dataType="wstr"
                          length="255"
                          name="CallMissedParam" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[TransCallerId]"
                          dataType="r8"
                          name="TransCallerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[createat]"
                          dataType="wstr"
                          length="255"
                          name="createat" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[deleteat]"
                          dataType="wstr"
                          length="255"
                          name="deleteat" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de destination OLE DB"
                      synchronousInputId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Net.Mail;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]


public class ScriptMain : UserComponent
{

    private SqlConnection connection;
    private bool skipConnection = false;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        // base.PreExecute();
        /*
         * Add your code here
         */

        // Retrieve the connection string from a variable
        //string connectionString = Variables.ConnexionString;



        // Create a new SqlConnection object
        //connection = new SqlConnection(connectionString);

        // Open the connection
        //connection.Open();

        // Create a new SqlConnection
        //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        // "Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;"
        // connection = new SqlConnection(connectionString);
        // connection.Open();
        // string query = "INSERT INTO test1 (test, testdescription) VALUES ('teest', 'deeesc')";

        //using (SqlCommand command = new SqlCommand(query, connection))
        // {

        //command.Parameters.AddWithValue("@Value1", Row.Column1);
        //command.Parameters.AddWithValue("@Value2", Row.Column2);
        //command.ExecuteNonQuery();
        //}
        base.PreExecute();

        string variableCon = Variables.ConString;

        // Create a new SqlConnection
        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(variableCon);

        try
        {
            connection.Open();
            // Connection has been established successfully
        }
        catch (Exception ex)
        {
            // Handle the connection error
            // Log the error or take any necessary actions

            skipConnection = true;
            // Log the error and move to the next connection
            string errorLog = "Failed to establish a database connection: " + ex.Message;
            // Log the error to a table or file
            // You can use a SQL command or any other logging mechanism here
            // For example:
            LogErrorToTable(errorLog);
            SendEmailNotification(errorLog);


            //connection.Close();
            //throw new Exception("Failed to establish a database connection: " + ex.Message);
        }


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (connection.State == ConnectionState.Open)
            connection.Close();
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        // string variableValue = Variables.VariableName;

        // Use the connection to execute SQL queries and retrieve data
        /* using (SqlCommand command = new SqlCommand("SELECT * FROM test1", connection))
         {
              // Perform additional setup for the command if needed

             // Execute the query and retrieve the data
             using (SqlDataReader reader = command.ExecuteReader())
             {
                while (reader.Read())
                 {
                     // Process the data and populate the output rows
                     OutputcolBuffer.AddRow();
                     OutputcolBuffer.test = reader["test"].ToString();
                     OutputcolBuffer.testdescription = reader["testdescription"].ToString();
                 }
             }
         }
         */

        if (skipConnection)
            return; // Skip executing the query for this connection

        try
        {
            // Example: Execute a SQL query using the connection
            string variableTable = Variables.TableName;
            string varserver = Variables.ServerName;
            /*
                         string query = "INSERT INTO "+ variableTable+"(test, testdescription) VALUES ('teestt', 'deeesc')";


                         using (SqlCommand command = new SqlCommand(query, connection))
                         {
                             command.ExecuteNonQuery();
                         }*/
            if (variableTable == "ListCampaigns")
            {
                using (SqlCommand command = new SqlCommand("SELECT * FROM " + variableTable, connection))
                {
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            // Stockez les valeurs dans les variables d'�criture
                            Output0Buffer.AddRow();
                            Output0Buffer.Description = reader["Description"].ToString();
                            Output0Buffer.customer = reader["customer"].ToString();
                            Output0Buffer.Oid = reader["Oid"].ToString();
                            Output0Buffer.DID = reader["DID"].ToString();
                            Output0Buffer.DBName = reader["DBName"].ToString();
                            Output0Buffer.TableName = reader["TableName"].ToString();
                            Output0Buffer.WaitTimeMsg = reader["WaitTimeMsg"].ToString();
                            Output0Buffer.MenuMsg = reader["MenuMsg"].ToString();
                            Output0Buffer.AgentMsg = reader["AgentMsg"].ToString();
                            Output0Buffer.AgentMsg = reader["AgentMsg"].ToString();
                            Output0Buffer.WaitMsg = reader["WaitMsg"].ToString();
                            Output0Buffer.QuerySchedulerId = reader["QuerySchedulerId"].ToString();
                            Output0Buffer.CallClassificationNumbers = reader["CallClassificationNumbers"].ToString();
                            Output0Buffer.CallTransitionNumbers = reader["CallTransitionNumbers"].ToString();
                            Output0Buffer.CallDisturbedParam = reader["CallDisturbedParam"].ToString();
                            Output0Buffer.CallMissedParam = reader["CallMissedParam"].ToString();
                            Output0Buffer.CallAbandonParam = reader["CallAbandonParam"].ToString();
                            Output0Buffer.createat = reader["createat"].ToString();
                            Output0Buffer.deleteat = reader["deleteat"].ToString();





                            Output0Buffer.servername = varserver;

                            /*  //OutputcolBuffer.servernamee = varserver;

                           */

                             try
                                   {
                                                        Output0Buffer.customerId = Convert.ToSingle(reader["customerId"]);
                                                        Output0Buffer.Type = Convert.ToSingle(reader["Type"]);
                                                        Output0Buffer.MaxChannels = Convert.ToSingle(reader["MaxChannels"]);
                                                        Output0Buffer.MaxChannelsPerAgent = Convert.ToSingle(reader["MaxChannelsPerAgent"]);
                                                        Output0Buffer.WaitMsgDuration = Convert.ToSingle(reader["WaitMsgDuration"]);
                                                        Output0Buffer.StatusGroup = Convert.ToSingle(reader["StatusGroup"]);
                                                        Output0Buffer.State = Convert.ToSingle(reader["State"]);
                                                        Output0Buffer.Modif = Convert.ToSingle(reader["Modif"]);
                                                        Output0Buffer.PreviewCallAfter = Convert.ToSingle(reader["PreviewCallAfter"]);
                                                        Output0Buffer.PreviewCallAfter = Convert.ToSingle(reader["PreviewCallAfter"]);
                                                        Output0Buffer.CallClassification = Convert.ToSingle(reader["CallClassification"]);
                                                        Output0Buffer.CallTransition = Convert.ToSingle(reader["CallTransition"]);
                                                        Output0Buffer.CallNoAnswer = Convert.ToSingle(reader["CallNoAnswer"]);
                                                        Output0Buffer.CallNoAnswerParam = Convert.ToSingle(reader["CallNoAnswerParam"]);
                                                        Output0Buffer.CallBusy = Convert.ToSingle(reader["CallBusy"]);
                                                        Output0Buffer.CallBusyParam = Convert.ToSingle(reader["CallBusyParam"]);
                                                        Output0Buffer.CallDisturbed = Convert.ToSingle(reader["CallDisturbed"]);
                                                        Output0Buffer.CallAnsweringMachine = Convert.ToSingle(reader["CallAnsweringMachine"]);
                                                        Output0Buffer.CallAnsweringMachineParam = Convert.ToSingle(reader["CallAnsweringMachineParam"]);
                                                        Output0Buffer.CallAbandon = Convert.ToSingle(reader["CallAbandon"]);
                                                        Output0Buffer.TransCallerId = Convert.ToSingle(reader["TransCallerId"]);
                                                        Output0Buffer.CallMissed = Convert.ToSingle(reader["CallMissed"]);


                                    }
                            catch (Exception ex)
                            {
                                // Handle the error
                                // You can choose to log the error, display a message, or take any other appropriate action
                                //OutputcolBuffer.Abandonn = null;
                            }
                            //OutputcolBuffer.ReasonID = (float)reader["ReasonID"];


                            /* try
                             {
                                 OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                             }
                             catch (Exception ex)
                             {
                                 // Handle the error
                                 // You can choose to log the error, display a message, or take any other appropriate action
                                 //OutputcolBuffer.Abandonn = null;
                             }*/

                            //OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                            /* OutputcolBuffer.CallStatusGroup = Convert.ToSingle(reader["CallStatusGroup"]);
                             OutputcolBuffer.CallStatusNum = Convert.ToSingle(reader["CallStatusNum"]);
                             OutputcolBuffer.CallStatusDetail = Convert.ToSingle(reader["CallStatusDetail"]);
                             OutputcolBuffer.EndReason = Convert.ToSingle(reader["EndReason"]);
                             OutputcolBuffer.EndByAgent = Convert.ToSingle(reader["EndByAgent"]);
                             OutputcolBuffer.NoAgent = Convert.ToSingle(reader["NoAgent"]);*/


                        }
                    }
                }
            }

        }
        catch (Exception ex)
        {
            // Handle the database operation error
            // Log the error or take any necessary actions
            throw new Exception("Failed to execute database operation: " + ex.Message);
        }

    }


    private void LogErrorToTable(string errorLog)
    {
        // Implement your logging mechanism here
        // For example, execute a SQL command to insert the error log into a table

        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(connectionString);
        connection.Open();

        string logQuery = "INSERT INTO ErrorLogTable (ErrorMessage) VALUES (@ErrorMessage)";

        using (SqlCommand command = new SqlCommand(logQuery, connection))
        {
            command.Parameters.AddWithValue("@ErrorMessage", errorLog);
            command.ExecuteNonQuery();
        }



    }


    private void SendEmailNotification(string errorLog)
    {
        // Configure email settings
        string fromAddress = "khadijatest.project@gmail.com";
        string toAddress = "khadijaaitmyhachem2000@gmail.com";
        string subject = "Database Connection Failure";
        string body = "The following error occurred while establishing a database connection:\n\n" + errorLog;

        // Create and configure the email message
        MailMessage message = new MailMessage(fromAddress, toAddress, subject, body);

        // Send the email using SMTP client
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com", 587);
        smtpClient.EnableSsl = true;
        smtpClient.UseDefaultCredentials = false;
        smtpClient.Credentials = new System.Net.NetworkCredential("khadijatest.project@gmail.com", "dreqysshjweageid");

        try
        {
            smtpClient.Send(message);
        }
        catch (Exception ex)
        {
            throw new Exception("Failed to send email notification: " + ex.Message);
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_a478c12aad0944728f493815fd1b5c42.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9e5ce2d0-ddca-49c6-b01a-988c7c5b690e}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a478c12aad0944728f493815fd1b5c42</RootNamespace>
    <AssemblyName>SC_a478c12aad0944728f493815fd1b5c42</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_a478c12aad0944728f493815fd1b5c42" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Single MaxChannels
    {
        set
        {
            this[0] = value;
        }
    }
    public bool MaxChannels_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Type
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Type_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallNoAnswerParam
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CallNoAnswerParam_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallNoAnswer
    {
        set
        {
            this[3] = value;
        }
    }
    public bool CallNoAnswer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallTransition
    {
        set
        {
            this[4] = value;
        }
    }
    public bool CallTransition_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallClassification
    {
        set
        {
            this[5] = value;
        }
    }
    public bool CallClassification_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single PreviewCallAfter
    {
        set
        {
            this[6] = value;
        }
    }
    public bool PreviewCallAfter_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Modif
    {
        set
        {
            this[7] = value;
        }
    }
    public bool Modif_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single State
    {
        set
        {
            this[8] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single StatusGroup
    {
        set
        {
            this[9] = value;
        }
    }
    public bool StatusGroup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single WaitMsgDuration
    {
        set
        {
            this[10] = value;
        }
    }
    public bool WaitMsgDuration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single MaxChannelsPerAgent
    {
        set
        {
            this[11] = value;
        }
    }
    public bool MaxChannelsPerAgent_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String customer
    {
        set
        {
            this[12] = value;
        }
    }
    public bool customer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Oid
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Oid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DID
    {
        set
        {
            this[14] = value;
        }
    }
    public bool DID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Description
    {
        set
        {
            this[15] = value;
        }
    }
    public bool Description_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DBName
    {
        set
        {
            this[16] = value;
        }
    }
    public bool DBName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TableName
    {
        set
        {
            this[17] = value;
        }
    }
    public bool TableName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WaitTimeMsg
    {
        set
        {
            this[18] = value;
        }
    }
    public bool WaitTimeMsg_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MenuMsg
    {
        set
        {
            this[19] = value;
        }
    }
    public bool MenuMsg_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AgentMsg
    {
        set
        {
            this[20] = value;
        }
    }
    public bool AgentMsg_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String WaitMsg
    {
        set
        {
            this[21] = value;
        }
    }
    public bool WaitMsg_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String QuerySchedulerId
    {
        set
        {
            this[22] = value;
        }
    }
    public bool QuerySchedulerId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CallClassificationNumbers
    {
        set
        {
            this[23] = value;
        }
    }
    public bool CallClassificationNumbers_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CallTransitionNumbers
    {
        set
        {
            this[24] = value;
        }
    }
    public bool CallTransitionNumbers_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CallDisturbedParam
    {
        set
        {
            this[25] = value;
        }
    }
    public bool CallDisturbedParam_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CallAbandonParam
    {
        set
        {
            this[26] = value;
        }
    }
    public bool CallAbandonParam_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(26);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CallMissedParam
    {
        set
        {
            this[27] = value;
        }
    }
    public bool CallMissedParam_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(27);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String deleteat
    {
        set
        {
            this[28] = value;
        }
    }
    public bool deleteat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(28);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String createat
    {
        set
        {
            this[29] = value;
        }
    }
    public bool createat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(29);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single TransCallerId
    {
        set
        {
            this[30] = value;
        }
    }
    public bool TransCallerId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(30);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallMissed
    {
        set
        {
            this[31] = value;
        }
    }
    public bool CallMissed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(31);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallAbandon
    {
        set
        {
            this[32] = value;
        }
    }
    public bool CallAbandon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(32);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallAnsweringMachineParam
    {
        set
        {
            this[33] = value;
        }
    }
    public bool CallAnsweringMachineParam_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(33);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallAnsweringMachine
    {
        set
        {
            this[34] = value;
        }
    }
    public bool CallAnsweringMachine_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(34);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallDisturbed
    {
        set
        {
            this[35] = value;
        }
    }
    public bool CallDisturbed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(35);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallBusyParam
    {
        set
        {
            this[36] = value;
        }
    }
    public bool CallBusyParam_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(36);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallBusy
    {
        set
        {
            this[37] = value;
        }
    }
    public bool CallBusy_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(37);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single customerId
    {
        set
        {
            this[38] = value;
        }
    }
    public bool customerId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(38);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String servername
    {
        set
        {
            this[39] = value;
        }
    }
    public bool servername_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(39);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a478c12aad0944728f493815fd1b5c42.Properties.Settings.get_Default():SC_a478c12aad0944728f493815fd1b5c42.Properties.Sett" +
    "ings")]

namespace SC_a478c12aad0944728f493815fd1b5c42.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConnexionString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConnexionString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ConString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DataBaseName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DataBaseName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Object FullSet
    {
        get
        {
            return (Object)(ParentComponent.ReadOnlyVariables["FullSet"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Id
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String LastServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["LastServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String pwd
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["pwd"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String QueryVal
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["QueryVal"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ServerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ServerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TableName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TableName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean Used
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["Used"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UserName1
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UserName1"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_a478c12aad0944728f493815fd1b5c42</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_a478c12aad0944728f493815fd1b5c42</msb:DisplayName>
    <msb:ProjectId>{56BE4509-48CF-433B-8C76-9DC04BC38986}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_a478c12aad0944728f493815fd1b5c42.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a478c12aad0944728f493815fd1b5c42")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_a478c12aad0944728f493815fd1b5c42")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a478c12aad0944728f493815fd1b5c42.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a478c12aad0944728f493815fd1b5c42.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a478c12aad0944728f493815fd1b5c42.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a478c12aad0944728f493815fd1b5c42.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a478c12aad0944728f493815fd1b5c42.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_a478c12aad0944728f493815fd1b5c42.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
OQAACnQhAAABKh4CKDUAAAoqrn4IAAAELR5yjgkAcNAHAAACKDoAAApvOwAACnM8AAAKgAgAAAR+
CAAABCoafgkAAAQqHgKACQAABCoafgoAAAQqHgIoPQAACiouc3MAAAaACgAABCpCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADIEQAAI34AADQSAAAYEAAAI1N0cmluZ3MAAAAATCIA
AAAKAAAjVVMATCwAABAAAAAjR1VJRAAAAFwsAABMAgAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAA
APoBMwAWAAABAAAANQAAAAgAAAAKAAAAdAAAAFwAAAA9AAAAEAAAAAUAAAAEAAAAXwAAAGAAAAAB
AAAABgAAAAEAAAAAAHkFAQAAAAAABgDLA8IMBgBfBMIMBgAXA68MDwA2DQAABgBEA7UKBgCuA7UK
BgCPA7UKBgBGBLUKBgDrA7UKBgAEBLUKBgBbA7UKBgB2A7EECgAfBC4CDgDrCuEOBgA2Cw8KDgA2
AeEODgDHC+EOEgBqAWkFEgD3DmkFCgAADC4CFgDxCy4CCgBvCy4CCgAgDy4CBgCQDg8KBgD6Aq8M
BgARDOIMBgBjC6AKEgC6AlMFEgArA1MFEgCAAosKBgDfAsIMDgDeClALBgDvBA8KDgDPAo8ADgC6
C1ALBgBNDw8KBgCGAQ8KDgDHCuEODgBWDOEODgAsAVALEgBBBZcOEgB2D5cOBgC4AQ8KBgAmCw8K
GgARAC4MGgABAC4MXwCpDwAAGgAiAC4MBgBIAA8KBgAiCg8KBgBTAg8KBgCSAQ8KBgDkD7UKAAAA
AHIAAAAAAAEAAQABABAALwoAABAAAQABAAEAEADjCwAAUQADAAcAAQAQAAIPAABdAAMAWwABABAA
8g0AAGEABgBgAAEAEACADQAAYQAHAGEAAAAQAOkMRQ1hAAgAbgAAARAArw1FDXkACgByAAEACAsL
AQEA+QoPAQYA8g0SAQYAgA0WAQYA4wsaAQEAEA8eAQEAEA8eAREAFgoiAREAcAImAREATgEqAVAg
AAAAAMYAfQQGAAEAxCAAAAAAxgCIBAYAAQDoIAAAAADGAFsOBgABAFwmAAAAAIEAdgEQAAEAzCYA
AAAAgQBhChAAAgBsJwAAAACGGJgMBgADAHQnAAAAAIYYmAynAAMAfycAAAAAhgjiDS4BBgCOJwAA
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
oQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQA
AAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEA
oQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQA
AAEAoQQAAAEAoQQAAAEAoQQAAAEAoQQAAAEAUw4AAAIApQwAAAMANg4AAAQAfQsAAAEAJg8AAAEA
Jg8AAAEAoQQJAJgMAQARAJgMBgAZAJgMCgApAJgMEAAxAJgMEAA5AJgMEABBAJgMEABJAJgMEABR
AJgMEABZAJgMEABhAJgMEABpAJgMBgDJAJgMBgDpAJgMFQD5AJgMBgC5AH0EBgBxAJgMEAABASoK
BgB5AF4BIgAJAW8OJgC5AIgEBgABAaYCLAABAZgCBgAJAQoQPQCBAJgMQwCBANULSgAZAf0JTwDB
AO0EIgAhAbYBVAAZAeEAWQApAZ4CBgB5AJgMEACBAD4OYwAxAZQEaQBBAe0PcQCRAJgMgQCZAJgM
iQCZAGkJjwCZAMgNjwBJAZgMlACZALgNmgCZAEEBoQChAJgMpwChAAYKsQChAGEJAQBhAZgMEACh
ANkPBgChAK4OBgChALEOWQC5AJgMBgC5AIMAuwC5AJ4NwgDBAJgMBgC5AHQNyABpAf0JzgC5AMQP
1QBxAZUP2wCZAaQB4gCZAeAP6wDRAJgM8QDxAJgMBgAuAAsAhQEuABMAjgEuABsArQEuACMAtgEu
ACsA3wEuADMA3wEuADsA3wEuAEMAtgEuAEsA5QEuAFMA3wEuAFsA/AFDAGMARgLjAGsARgJBAXsA
RgKpC3MArQHJC3MArQEbADIAXQB1ALcAAwABAAYAUQAHAF0ACABfAAAA5g1iAQAArQhmAQAAUwJi
AQAAmgZmAQAA2QliAQAAlwdmAQAAiwxiAQAAlQhmAQAAFwtiAQAAHQhmAQAATgpiAQAA5AdmAQAA
ZwxiAQAAeQhmAQAAqwRiAQAAuwZmAQAA2QJiAQAAqgZmAQAArgtiAQAATghmAQAAewpiAQAAAghm
AQAAzQ5iAQAAMglmAQAAJQxqAQAAZQhmAQAAKAFqAQAALgZmAQAAfwBqAQAApQVmAQAARAtqAQAA
NwhmAQAAwwFqAQAAPQZmAQAA3AFqAQAATwZmAQAAAwVqAQAAzAZmAQAALAVqAQAACgdmAQAAHwVq
AQAA9gZmAQAAEwVqAQAA4wZmAQAAwQBqAQAAzQVmAQAAAg5qAQAAxAhmAQAAIA5qAQAA6QhmAQAA
ewlqAQAAHQdmAQAAxAlqAQAAewdmAQAAkglqAQAAOwdmAQAAhw5qAQAAHglmAQAAeg5qAQAACglm
AQAArwBiAQAAtAVmAQAAGQFiAQAAGAZmAQAAPgpiAQAAzQdmAQAApgliAQAAVgdmAQAAGQJiAQAA
egZmAQAA6gBiAQAA/wVmAQAA7wliAQAAtAdmAQAAARBiAQAAUQlmAQAA1gBiAQAA6QVmAQAACgJq
AQAAZAZmAQAA3QRqAQAAzwRqAQAA6gFqAQAApg5uAQAA3gByAQAAfAxqAQAASgFqAQAAOAVqAQAA
+wFqAQAA3AFqAQAAEAFmAQAAPgBqAQAAEQx2AQAAeAJ7AQAAwQ6AAQEACAADAAEACQAFAAEACgAH
AAEACwAJAAEADAALAAEADQANAAEADgAPAAEADwARAAEAEAATAAEAEQAVAAEAEgAXAAEAEwAZAAEA
FAAbAAEAFQAdAAEAFgAfAAEAFwAhAAEAGAAjAAEAGQAlAAEAGgAnAAEAGwApAAEAHAArAAEAHQAt
AAEAHgAvAAEAHwAxAAEAIAAzAAEAIQA1AAEAIgA3AAEAIwA5AAEAJAA7AAEAJQA9AAEAJgA/AAEA
JwBBAAEAKABDAAEAKQBFAAEAKgBHAAEAKwBJAAEALABLAAEALQBNAAEALgBPAAEALwBRAAEAMABT
AAEAMQBVAAEAMgBXAAEAMwBZAAEANABbAAEANQBdAAEANgBfAAEANwBhAAEAOABjAAEAOQBlAAEA
OgBnAAEAOwBpAAEAPABrAAEAPQBtAAEAPgBvAAEAPwBxAAEAQABzAAEAQQB1AAEAQgB3AAEAQwB5
AAEARAB7AAEARQB9AAEARgB/AAEARwCBAAEASACDAAEASQCFAAEASgCHAAEASwCJAAEATACLAAEA
TQCNAAEATgCPAAEATwCRAAEAUACTAAEAUQCVAAEAUgCXAAEAUwCZAAEAVACbAAEAVQCdAAEAVgCf
AAEAVwChAAIAYgCjAAIAYwClAAIAZACnAAIAZQCpAAIAZgCrAAIAZwCtAAIAaACvAAIAaQCxAAIA
agCzAAIAawC1AAIAbAC3AAIAbQC5AAIAbwC7AAIAcAC9AAEAcQC9AAIAcgC/AASAAAABAAAAAAAA
AAAAAAAAAE4AAAAEAAAAAAAAAAAAAAD5AJsAAAAAAA8AAAAAAAAAAAAAAAIBMA8AAAAABAAAAAAA
AAAAAAAA+QCPAAAAAAAEAAAAAAAAAAAAAAD5AA8KAAAAAA8AAAAAAAAAAAAAAAIBVQ8AAAAADwAA
AAAAAAAAAAAAAgGHCwAAAAAAAAAAAQAAAPMMAAAAAAAAAElEVFNWYXJpYWJsZTEwMABJRFRTVmFy
aWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAGdldF9Vc2VyTmFtZTEASW50MzIAU0Nf
YTQ3OGMxMmFhZDA5NDQ3MjhmNDkzODE1ZmQxYjVjNDIAPE1vZHVsZT4Ac2V0X0RJRABHZXRPdXRw
dXRJRABTeXN0ZW0uRGF0YQBtc2NvcmxpYgBnZXRfSWQAc2V0X1RyYW5zQ2FsbGVySWQAc2V0X1F1
ZXJ5U2NoZWR1bGVySWQAc2V0X2N1c3RvbWVySWQAUmVhZABzZXRfQ2FsbERpc3R1cmJlZABNYXJr
T3V0cHV0c0ZpbmlzaGVkAGdldF9Vc2VkAHNldF9DYWxsTWlzc2VkAHNldF9PaWQARGJDb21tYW5k
AFNxbENvbW1hbmQAU2VuZABnZXRfcHdkAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBNYWls
TWVzc2FnZQBMb2dFcnJvclRvVGFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUAVG9TaW5nbGUAc2V0X0RCTmFtZQBnZXRfVGFibGVOYW1lAHNldF9UYWJs
ZU5hbWUAZ2V0X0RhdGFCYXNlTmFtZQBnZXRfU2VydmVyTmFtZQBzZXRfc2VydmVybmFtZQBzZXRf
Q2FsbEFuc3dlcmluZ01hY2hpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAc2V0
X1R5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAENsb3NlAERpc3Bvc2UAZ2V0X1N0YXRlAHNldF9TdGF0ZQBFZGl0b3JCcm93
c2FibGVTdGF0ZQBDb25uZWN0aW9uU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0
RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUAc2V0X01vZGlmAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAZ2V0X0NvblN0cmluZwBnZXRfQ29ubmV4aW9uU3RyaW5nAFRvU3RyaW5nAGVycm9yTG9n
AHNldF9XYWl0VGltZU1zZwBzZXRfV2FpdE1zZwBzZXRfQWdlbnRNc2cAc2V0X01lbnVNc2cAZ2V0
X1F1ZXJ5VmFsAE5ldHdvcmtDcmVkZW50aWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0u
TmV0Lk1haWwAU0NfYTQ3OGMxMmFhZDA5NDQ3MjhmNDkzODE1ZmQxYjVjNDIuZGxsAHNldF9ESURf
SXNOdWxsAHNldF9UcmFuc0NhbGxlcklkX0lzTnVsbABzZXRfUXVlcnlTY2hlZHVsZXJJZF9Jc051
bGwAc2V0X2N1c3RvbWVySWRfSXNOdWxsAHNldF9DYWxsRGlzdHVyYmVkX0lzTnVsbABzZXRfQ2Fs
bE1pc3NlZF9Jc051bGwAc2V0X09pZF9Jc051bGwAc2V0X0RCTmFtZV9Jc051bGwAc2V0X1RhYmxl
TmFtZV9Jc051bGwAc2V0X3NlcnZlcm5hbWVfSXNOdWxsAHNldF9DYWxsQW5zd2VyaW5nTWFjaGlu
ZV9Jc051bGwAc2V0X1R5cGVfSXNOdWxsAHNldF9TdGF0ZV9Jc051bGwAc2V0X01vZGlmX0lzTnVs
bABzZXRfV2FpdFRpbWVNc2dfSXNOdWxsAHNldF9XYWl0TXNnX0lzTnVsbABzZXRfQWdlbnRNc2df
SXNOdWxsAHNldF9NZW51TXNnX0lzTnVsbABzZXRfQ2FsbERpc3R1cmJlZFBhcmFtX0lzTnVsbABz
ZXRfQ2FsbE1pc3NlZFBhcmFtX0lzTnVsbABzZXRfQ2FsbEFuc3dlcmluZ01hY2hpbmVQYXJhbV9J
c051bGwAc2V0X0NhbGxBYmFuZG9uUGFyYW1fSXNOdWxsAHNldF9DYWxsTm9BbnN3ZXJQYXJhbV9J
c051bGwAc2V0X0NhbGxCdXN5UGFyYW1fSXNOdWxsAHNldF9DYWxsQWJhbmRvbl9Jc051bGwAc2V0
X0NhbGxDbGFzc2lmaWNhdGlvbl9Jc051bGwAc2V0X1dhaXRNc2dEdXJhdGlvbl9Jc051bGwAc2V0
X0NhbGxUcmFuc2l0aW9uX0lzTnVsbABzZXRfRGVzY3JpcHRpb25fSXNOdWxsAHNldF9TdGF0dXNH
cm91cF9Jc051bGwAc2V0X2N1c3RvbWVyX0lzTnVsbABzZXRfUHJldmlld0NhbGxBZnRlcl9Jc051
bGwAc2V0X0NhbGxOb0Fuc3dlcl9Jc051bGwAc2V0X01heENoYW5uZWxzX0lzTnVsbABzZXRfQ2Fs
bENsYXNzaWZpY2F0aW9uTnVtYmVyc19Jc051bGwAc2V0X0NhbGxUcmFuc2l0aW9uTnVtYmVyc19J
c051bGwAc2V0X2NyZWF0ZWF0X0lzTnVsbABzZXRfZGVsZXRlYXRfSXNOdWxsAHNldF9NYXhDaGFu
bmVsc1BlckFnZW50X0lzTnVsbABzZXRfQ2FsbEJ1c3lfSXNOdWxsAFNldE51bGwAc2V0X0VuYWJs
ZVNzbABzZXRfQ2FsbERpc3R1cmJlZFBhcmFtAHNldF9DYWxsTWlzc2VkUGFyYW0Ac2V0X0NhbGxB
bnN3ZXJpbmdNYWNoaW5lUGFyYW0Ac2V0X0NhbGxBYmFuZG9uUGFyYW0Ac2V0X0NhbGxOb0Fuc3dl
clBhcmFtAHNldF9DYWxsQnVzeVBhcmFtAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJj
ZU1hbgBCb29sZWFuAE9wZW4AU2NyaXB0TWFpbgBzZXRfQ2FsbEFiYW5kb24Ac2V0X0NhbGxDbGFz
c2lmaWNhdGlvbgBTZW5kRW1haWxOb3RpZmljYXRpb24Ac2V0X1dhaXRNc2dEdXJhdGlvbgBTeXN0
ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBT
cWxQYXJhbWV0ZXJDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAHNraXBDb25u
ZWN0aW9uAGNvbm5lY3Rpb24Ac2V0X0NhbGxUcmFuc2l0aW9uAEludmFsaWRPcGVyYXRpb25FeGNl
cHRpb24Ac2V0X0Rlc2NyaXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBPdXRw
dXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAHNl
dF9TdGF0dXNHcm91cABEYkRhdGFSZWFkZXIAU3FsRGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAE91
dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFn
ZXIAc2V0X2N1c3RvbWVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBT
cWxQYXJhbWV0ZXIAc2V0X1ByZXZpZXdDYWxsQWZ0ZXIAZ2V0X0xhc3RTZXJ2ZXIAc2V0X0NhbGxO
b0Fuc3dlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYTQ3OGMxMmFhZDA5
NDQ3MjhmNDkzODE1ZmQxYjVjNDIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNDX2E0NzhjMTJhYWQwOTQ0NzI4ZjQ5MzgxNWZkMWI1YzQyLlByb3BlcnRpZXMA
Z2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhl
cwBTZXR0aW5ncwBzZXRfQ3JlZGVudGlhbHMAc2V0X1VzZURlZmF1bHRDcmVkZW50aWFscwBzZXRf
TWF4Q2hhbm5lbHMAQ29ubmVjdGlvbnMAc2V0X0NhbGxDbGFzc2lmaWNhdGlvbk51bWJlcnMAc2V0
X0NhbGxUcmFuc2l0aW9uTnVtYmVycwBCdWZmZXJzAGdldF9QYXJhbWV0ZXJzAEZpbmlzaE91dHB1
dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBDb25jYXQAc2V0X2NyZWF0ZWF0AHNldF9kZWxldGVhdABP
YmplY3QAU3lzdGVtLk5ldABnZXRfRnVsbFNldABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVsdABz
ZXRfTWF4Q2hhbm5lbHNQZXJBZ2VudABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU210cENsaWVudABV
c2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNx
bFNlcnZlci5UeFNjcmlwdABDb252ZXJ0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0
AElDcmVkZW50aWFsc0J5SG9zdABQcmltZU91dHB1dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlw
dENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AEFkZFJvdwBnZXRfQXNz
ZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AHNldF9DYWxsQnVzeQBvcF9FcXVhbGl0eQAAAABXRgBhAGkA
bABlAGQAIAB0AG8AIABlAHMAdABhAGIAbABpAHMAaAAgAGEAIABkAGEAdABhAGIAYQBzAGUAIABj
AG8AbgBuAGUAYwB0AGkAbwBuADoAIAAAG0wAaQBzAHQAQwBhAG0AcABhAGkAZwBuAHMAAB1TAEUA
TABFAEMAVAAgACoAIABGAFIATwBNACAAABdEAGUAcwBjAHIAaQBwAHQAaQBvAG4AABFjAHUAcwB0
AG8AbQBlAHIAAAdPAGkAZAAAB0QASQBEAAANRABCAE4AYQBtAGUAABNUAGEAYgBsAGUATgBhAG0A
ZQAAF1cAYQBpAHQAVABpAG0AZQBNAHMAZwAAD00AZQBuAHUATQBzAGcAABFBAGcAZQBuAHQATQBz
AGcAAA9XAGEAaQB0AE0AcwBnAAAhUQB1AGUAcgB5AFMAYwBoAGUAZAB1AGwAZQByAEkAZAAAM0MA
YQBsAGwAQwBsAGEAcwBzAGkAZgBpAGMAYQB0AGkAbwBuAE4AdQBtAGIAZQByAHMAACtDAGEAbABs
AFQAcgBhAG4AcwBpAHQAaQBvAG4ATgB1AG0AYgBlAHIAcwAAJUMAYQBsAGwARABpAHMAdAB1AHIA
YgBlAGQAUABhAHIAYQBtAAAfQwBhAGwAbABNAGkAcwBzAGUAZABQAGEAcgBhAG0AACFDAGEAbABs
AEEAYgBhAG4AZABvAG4AUABhAHIAYQBtAAARYwByAGUAYQB0AGUAYQB0AAARZABlAGwAZQB0AGUA
YQB0AAAVYwB1AHMAdABvAG0AZQByAEkAZAAACVQAeQBwAGUAABdNAGEAeABDAGgAYQBuAG4AZQBs
AHMAACdNAGEAeABDAGgAYQBuAG4AZQBsAHMAUABlAHIAQQBnAGUAbgB0AAAfVwBhAGkAdABNAHMA
ZwBEAHUAcgBhAHQAaQBvAG4AABdTAHQAYQB0AHUAcwBHAHIAbwB1AHAAAAtTAHQAYQB0AGUAAAtN
AG8AZABpAGYAACFQAHIAZQB2AGkAZQB3AEMAYQBsAGwAQQBmAHQAZQByAAAlQwBhAGwAbABDAGwA
YQBzAHMAaQBmAGkAYwBhAHQAaQBvAG4AAB1DAGEAbABsAFQAcgBhAG4AcwBpAHQAaQBvAG4AABlD
AGEAbABsAE4AbwBBAG4AcwB3AGUAcgAAI0MAYQBsAGwATgBvAEEAbgBzAHcAZQByAFAAYQByAGEA
bQAAEUMAYQBsAGwAQgB1AHMAeQAAG0MAYQBsAGwAQgB1AHMAeQBQAGEAcgBhAG0AABtDAGEAbABs
AEQAaQBzAHQAdQByAGIAZQBkAAApQwBhAGwAbABBAG4AcwB3AGUAcgBpAG4AZwBNAGEAYwBoAGkA
bgBlAAAzQwBhAGwAbABBAG4AcwB3AGUAcgBpAG4AZwBNAGEAYwBoAGkAbgBlAFAAYQByAGEAbQAA
F0MAYQBsAGwAQQBiAGEAbgBkAG8AbgAAG1QAcgBhAG4AcwBDAGEAbABsAGUAcgBJAGQAABVDAGEA
bABsAE0AaQBzAHMAZQBkAABNRgBhAGkAbABlAGQAIAB0AG8AIABlAHgAZQBjAHUAdABlACAAZABh
AHQAYQBiAGEAcwBlACAAbwBwAGUAcgBhAHQAaQBvAG4AOgAgAACAzUQAYQB0AGEAIABTAG8AdQBy
AGMAZQA9AEQARQBTAEsAVABPAFAALQA1ADcATQBCADIAQwBOAFwASQBOAFQARQBMAEMASQBBADsA
SQBuAGkAdABpAGEAbAAgAEMAYQB0AGEAbABvAGcAPQBzAGUAcgB2AGUAcgBJAG4AZgBvADsAVQBz
AGUAcgAgAEkARAA9AHQAZQBzAHQAYwBvAG4AbgA7AFAAYQBzAHMAdwBvAHIAZAA9AGkAbgB0AGUA
bABjAGkAYQAyADAAMgAzAAF/SQBOAFMARQBSAFQAIABJAE4AVABPACAARQByAHIAbwByAEwAbwBn
AFQAYQBiAGwAZQAgACgARQByAHIAbwByAE0AZQBzAHMAYQBnAGUAKQAgAFYAQQBMAFUARQBTACAA
KABAAEUAcgByAG8AcgBNAGUAcwBzAGEAZwBlACkAABtAAEUAcgByAG8AcgBNAGUAcwBzAGEAZwBl
AAA7awBoAGEAZABpAGoAYQB0AGUAcwB0AC4AcAByAG8AagBlAGMAdABAAGcAbQBhAGkAbAAuAGMA
bwBtAABBawBoAGEAZABpAGoAYQBhAGkAdABtAHkAaABhAGMAaABlAG0AMgAwADAAMABAAGcAbQBh
AGkAbAAuAGMAbwBtAAA3RABhAHQAYQBiAGEAcwBlACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYA
YQBpAGwAdQByAGUAAICRVABoAGUAIABmAG8AbABsAG8AdwBpAG4AZwAgAGUAcgByAG8AcgAgAG8A
YwBjAHUAcgByAGUAZAAgAHcAaABpAGwAZQAgAGUAcwB0AGEAYgBsAGkAcwBoAGkAbgBnACAAYQAg
AGQAYQB0AGEAYgBhAHMAZQAgAGMAbwBuAG4AZQBjAHQAaQBvAG4AOgAKAAoAAB1zAG0AdABwAC4A
ZwBtAGEAaQBsAC4AYwBvAG0AACFkAHIAZQBxAHkAcwBzAGgAagB3AGUAYQBnAGUAaQBkAABHRgBh
AGkAbABlAGQAIAB0AG8AIABzAGUAbgBkACAAZQBtAGEAaQBsACAAbgBvAHQAaQBmAGkAYwBhAHQA
aQBvAG4AOgAgAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQA
IABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBh
AGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8A
dQB0AHAAdQB0ACAAMAAAH0MAbwBuAG4AZQB4AGkAbwBuAFMAdAByAGkAbgBnAAATQwBvAG4AUwB0
AHIAaQBuAGcAABlEAGEAdABhAEIAYQBzAGUATgBhAG0AZQAAD0YAdQBsAGwAUwBlAHQAAAVJAGQA
ABVMAGEAcwB0AFMAZQByAHYAZQByAAAHcAB3AGQAABFRAHUAZQByAHkAVgBhAGwAABVTAGUAcgB2
AGUAcgBOAGEAbQBlAAAJVQBzAGUAZAAAE1UAcwBlAHIATgBhAG0AZQAxAABxUwBDAF8AYQA0ADcA
OABjADEAMgBhAGEAZAAwADkANAA0ADcAMgA4AGYANAA5ADMAOAAxADUAZgBkADEAYgA1AGMANAAy
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAADRcPgWZuDSJGSohCu
a3AyAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFxBgcDDhI9DgMgAA4FAAIODg4FIAARgIkKBwUO
DhJBEkUSPQUAAgIODgYgAgEOEjkEIAASRQQgARwOBAABDBwDIAACBQcCDhJBBSAAEoCZByACEoCd
DhwDIAAICwcGDg4OEkkSTRI9ByAEAQ4ODg4FIAIBDggEIAEBAgUgAgEODgYgAQESgKkFIAEBEkkJ
IAMBElUdCBJZBSACAQgcAwcBCAYAAggSWQ4FIAEdCAgFIAASgLUGIAESgLkcBQAAEoC9BiABHBKA
wQgAARKAzRGA0QUgABKA1QcgAgEOEoDVCLd6XFYZNOCJCImEXc2AgMyRAwYSOQIGAgMGEhQDBhIY
AwYSDAMGEl0DBhJpAwYSbQMGEiAEIAEBDAsgBAEIHQgdElUSWQUgAQESXQMgABwEAAASaQQAABJt
BQABARJtBAAAEiADAAABAygADAMoAAIDKAAOAygAHAMoAAgECAASaQQIABJtBAgAEiAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2E0NzhjMTJh
YWQwOTQ0NzI4ZjQ5MzgxNWZkMWI1YzQyAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC43BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMBfAAAAAAAAAAAAANpfAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADMXwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAA
AAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwDAAAAAAAAAAAAAOwD
NAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAAAAAB
AAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4A
ZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAAAQBTAHQAcgBp
AG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8A
bQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAk
AAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGEANAA3ADgAYwAxADIA
YQBhAGQAMAA5ADQANAA3ADIAOABmADQAOQAzADgAMQA1AGYAZAAxAGIANQBjADQAMgAAADAACAAB
AEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUA
cgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYQA0ADcAOABjADEAMgBhAGEAZAAwADkANAA0ADcAMgA4
AGYANAA5ADMAOAAxADUAZgBkADEAYgA1AGMANAAyAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwA
QwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADMAAAAq
AAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcA
aQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBhADQANwA4AGMAMQAyAGEAYQBkADAAOQA0
ADQANwAyADgAZgA0ADkAMwA4ADEANQBmAGQAMQBiADUAYwA0ADIALgBkAGwAbAAAAGgAJAABAFAA
cgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYQA0ADcAOABjADEAMgBhAGEAZAAwADkANAA0
ADcAMgA4AGYANAA5ADMAOAAxADUAZgBkADEAYgA1AGMANAAyAAAANAAIAAEAUAByAG8AZAB1AGMA
dABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAADsPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_a478c12aad0944728f493815fd1b5c42</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ConnexionString,User::ConString,User::DataBaseName,User::FullSet,User::Id,User::LastServer,User::pwd,User::QueryVal,User::ServerName,User::TableName,User::Used,User::UserName1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">71</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[MaxChannels]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[MaxChannels]"
                          name="MaxChannels" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[Type]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[Type]"
                          name="Type" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallNoAnswerParam]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallNoAnswerParam]"
                          name="CallNoAnswerParam" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallNoAnswer]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallNoAnswer]"
                          name="CallNoAnswer" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallTransition]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallTransition]"
                          name="CallTransition" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallClassification]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallClassification]"
                          name="CallClassification" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[PreviewCallAfter]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[PreviewCallAfter]"
                          name="PreviewCallAfter" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[Modif]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[Modif]"
                          name="Modif" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[State]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[State]"
                          name="State" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[StatusGroup]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[StatusGroup]"
                          name="StatusGroup" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[WaitMsgDuration]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[WaitMsgDuration]"
                          name="WaitMsgDuration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[MaxChannelsPerAgent]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[MaxChannelsPerAgent]"
                          name="MaxChannelsPerAgent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[customer]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[customer]"
                          name="customer" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[Oid]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[Oid]"
                          name="Oid" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[DID]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[DID]"
                          name="DID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[DBName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[DBName]"
                          name="DBName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[TableName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[TableName]"
                          name="TableName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[WaitTimeMsg]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[WaitTimeMsg]"
                          name="WaitTimeMsg" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[MenuMsg]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[MenuMsg]"
                          name="MenuMsg" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[AgentMsg]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[AgentMsg]"
                          name="AgentMsg" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[WaitMsg]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[WaitMsg]"
                          name="WaitMsg" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[QuerySchedulerId]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[QuerySchedulerId]"
                          name="QuerySchedulerId" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallClassificationNumbers]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallClassificationNumbers]"
                          name="CallClassificationNumbers" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallTransitionNumbers]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallTransitionNumbers]"
                          name="CallTransitionNumbers" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallDisturbedParam]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallDisturbedParam]"
                          name="CallDisturbedParam" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallAbandonParam]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallAbandonParam]"
                          name="CallAbandonParam" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallMissedParam]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallMissedParam]"
                          name="CallMissedParam" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[deleteat]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[deleteat]"
                          name="deleteat" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[createat]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[createat]"
                          name="createat" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[TransCallerId]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[TransCallerId]"
                          name="TransCallerId" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallMissed]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallMissed]"
                          name="CallMissed" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallAbandon]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallAbandon]"
                          name="CallAbandon" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallAnsweringMachineParam]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallAnsweringMachineParam]"
                          name="CallAnsweringMachineParam" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallAnsweringMachine]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallAnsweringMachine]"
                          name="CallAnsweringMachine" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallDisturbed]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallDisturbed]"
                          name="CallDisturbed" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallBusyParam]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallBusyParam]"
                          name="CallBusyParam" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallBusy]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[CallBusy]"
                          name="CallBusy" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[customerId]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[customerId]"
                          name="customerId" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[servername]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0].Columns[servername]"
                          name="servername" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Staging ListCampaign.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Staging ListCampaign\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Staging ODActions"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{7479DED0-4801-4C2A-81B6-4B5AA4EABE2F}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Staging ODActions"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Staging ODActions\actions"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="actions"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Net.Mail;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    private SqlConnection connection;
    private bool skipConnection = false;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        // base.PreExecute();
        /*
         * Add your code here
         */

        // Retrieve the connection string from a variable
        //string connectionString = Variables.ConnexionString;



        // Create a new SqlConnection object
        //connection = new SqlConnection(connectionString);

        // Open the connection
        //connection.Open();

        // Create a new SqlConnection
        //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        // "Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;"
        // connection = new SqlConnection(connectionString);
        // connection.Open();
        // string query = "INSERT INTO test1 (test, testdescription) VALUES ('teest', 'deeesc')";

        //using (SqlCommand command = new SqlCommand(query, connection))
        // {

        //command.Parameters.AddWithValue("@Value1", Row.Column1);
        //command.Parameters.AddWithValue("@Value2", Row.Column2);
        //command.ExecuteNonQuery();
        //}
        base.PreExecute();

        string variableCon = Variables.ConString;

        // Create a new SqlConnection
        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(variableCon);

        try
        {
            connection.Open();
            // Connection has been established successfully
        }
        catch (Exception ex)
        {
            // Handle the connection error
            // Log the error or take any necessary actions

            skipConnection = true;
            // Log the error and move to the next connection
            string errorLog = "Failed to establish a database connection: " + ex.Message;
            // Log the error to a table or file
            // You can use a SQL command or any other logging mechanism here
            // For example:
            LogErrorToTable(errorLog);
            SendEmailNotification(errorLog);


            //connection.Close();
            //throw new Exception("Failed to establish a database connection: " + ex.Message);
        }


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (connection.State == ConnectionState.Open)
            connection.Close();
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        // string variableValue = Variables.VariableName;

        // Use the connection to execute SQL queries and retrieve data
       /* using (SqlCommand command = new SqlCommand("SELECT * FROM test1", connection))
        {
             // Perform additional setup for the command if needed

            // Execute the query and retrieve the data
            using (SqlDataReader reader = command.ExecuteReader())
            {
               while (reader.Read())
                {
                    // Process the data and populate the output rows
                    OutputcolBuffer.AddRow();
                    OutputcolBuffer.test = reader["test"].ToString();
                    OutputcolBuffer.testdescription = reader["testdescription"].ToString();
                }
            }
        }
        */

        if (skipConnection)
            return; // Skip executing the query for this connection

        try
        {
            // Example: Execute a SQL query using the connection
            string variableTable = Variables.TableName;
            string varserver = Variables.ServerName;
            /*
                         string query = "INSERT INTO "+ variableTable+"(test, testdescription) VALUES ('teestt', 'deeesc')";


                         using (SqlCommand command = new SqlCommand(query, connection))
                         {
                             command.ExecuteNonQuery();
                         }*/
            if (variableTable == "ODActions")
            {
                using (SqlCommand command = new SqlCommand("SELECT * FROM " + variableTable, connection))
                {
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            // Stockez les valeurs dans les variables d'écriture
                            OutputcolBuffer.AddRow();
                            OutputcolBuffer.ID1 = reader["ID"].ToString();
                            OutputcolBuffer.ActionUniversalTime = reader["ActionUniversalTime"].ToString();
                            OutputcolBuffer.Campaign = reader["Campaign"].ToString();
                            OutputcolBuffer.SessionId = reader["SessionId"].ToString();
                            OutputcolBuffer.SessionId = reader["SessionId"].ToString();

                            OutputcolBuffer.servernamee = varserver;

                            OutputcolBuffer.Duration = Convert.ToSingle(reader["Duration"]);
                            OutputcolBuffer.CustomerID = Convert.ToSingle(reader["CustomerID"]);
                            OutputcolBuffer.State = Convert.ToSingle(reader["State"]);
                            OutputcolBuffer.StateDetail = Convert.ToSingle(reader["StateDetail"]);
                            OutputcolBuffer.Context = Convert.ToSingle(reader["Context"]);
                            OutputcolBuffer.ChannelId = Convert.ToSingle(reader["ChannelId"]);
                            OutputcolBuffer.AgentId1 = Convert.ToSingle(reader["AgentId"]);
                            OutputcolBuffer.NextState = Convert.ToSingle(reader["NextState"]);




                            /*try
                            {
                                OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                            }
                            catch (Exception ex)
                            {
                                // Handle the error
                                // You can choose to log the error, display a message, or take any other appropriate action
                                //OutputcolBuffer.Abandonn = null;
                            }*/

                            //OutputcolBuffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                            /* OutputcolBuffer.CallStatusGroup = Convert.ToSingle(reader["CallStatusGroup"]);
                             OutputcolBuffer.CallStatusNum = Convert.ToSingle(reader["CallStatusNum"]);
                             OutputcolBuffer.CallStatusDetail = Convert.ToSingle(reader["CallStatusDetail"]);
                             OutputcolBuffer.EndReason = Convert.ToSingle(reader["EndReason"]);
                             OutputcolBuffer.EndByAgent = Convert.ToSingle(reader["EndByAgent"]);
                             OutputcolBuffer.NoAgent = Convert.ToSingle(reader["NoAgent"]);*/


                        }
                    }
                }

            }
        }
        catch (Exception ex)
        {
            // Handle the database operation error
            // Log the error or take any necessary actions
            throw new Exception("Failed to execute database operation: " + ex.Message);
        }

    }


    private void LogErrorToTable(string errorLog)
    {
        // Implement your logging mechanism here
        // For example, execute a SQL command to insert the error log into a table

        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(connectionString);
        connection.Open();

        string logQuery = "INSERT INTO ErrorLogTable (ErrorMessage) VALUES (@ErrorMessage)";

        using (SqlCommand command = new SqlCommand(logQuery, connection))
        {
            command.Parameters.AddWithValue("@ErrorMessage", errorLog);
            command.ExecuteNonQuery();
        }



    }


    private void SendEmailNotification(string errorLog)
    {
        // Configure email settings
        string fromAddress = "khadijatest.project@gmail.com";
        string toAddress = "khadijaaitmyhachem2000@gmail.com";
        string subject = "Database Connection Failure";
        string body = "The following error occurred while establishing a database connection:\n\n" + errorLog;

        // Create and configure the email message
        MailMessage message = new MailMessage(fromAddress, toAddress, subject, body);

        // Send the email using SMTP client
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com", 587);
        smtpClient.EnableSsl = true;
        smtpClient.UseDefaultCredentials = false;
        smtpClient.Credentials = new System.Net.NetworkCredential("khadijatest.project@gmail.com", "dreqysshjweageid");

        try
        {
            smtpClient.Send(message);
        }
        catch (Exception ex)
        {
            throw new Exception("Failed to send email notification: " + ex.Message);
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class OutputcolBuffer: ScriptBuffer

{
    public OutputcolBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Single NextState
    {
        set
        {
            this[0] = value;
        }
    }
    public bool NextState_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CustomerID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CustomerID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Duration
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Duration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ID1
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ID1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String servernamee
    {
        set
        {
            this[4] = value;
        }
    }
    public bool servernamee_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ActionUniversalTime
    {
        set
        {
            this[5] = value;
        }
    }
    public bool ActionUniversalTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single State
    {
        set
        {
            this[6] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single StateDetail
    {
        set
        {
            this[7] = value;
        }
    }
    public bool StateDetail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Context
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Context_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Campaign
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Campaign_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SessionId
    {
        set
        {
            this[10] = value;
        }
    }
    public bool SessionId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single ChannelId
    {
        set
        {
            this[11] = value;
        }
    }
    public bool ChannelId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String serv
    {
        set
        {
            this[12] = value;
        }
    }
    public bool serv_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single AgentId1
    {
        set
        {
            this[13] = value;
        }
    }
    public bool AgentId1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_72f51977ef214e2184b874a4af50b8c6.Properties.Settings.get_Default():SC_72f51977ef214e2184b874a4af50b8c6.Properties.Sett" +
    "ings")]

namespace SC_72f51977ef214e2184b874a4af50b8c6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public OutputcolBuffer OutputcolBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != OutputcolBuffer)
        {
            OutputcolBuffer.SetEndOfRowset();
            OutputcolBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Outputcol"))
            {
                OutputcolBuffer = new OutputcolBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DataBaseName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DataBaseName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Id
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String LastServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["LastServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String pwd
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["pwd"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String QueryVal
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["QueryVal"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ServerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ServerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TableName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TableName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UserName1
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UserName1"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_72f51977ef214e2184b874a4af50b8c6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_72f51977ef214e2184b874a4af50b8c6</msb:DisplayName>
    <msb:ProjectId>{ECA2DD20-7425-46BB-9312-809BFDAD9C89}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_72f51977ef214e2184b874a4af50b8c6.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_72f51977ef214e2184b874a4af50b8c6.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e767e7e0-81b4-4964-a2ad-0a3eb4710c47}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_72f51977ef214e2184b874a4af50b8c6</RootNamespace>
    <AssemblyName>SC_DEA5B73DBB924E7E9D444BF70787EF0B</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_72f51977ef214e2184b874a4af50b8c6" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_72f51977ef214e2184b874a4af50b8c6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_72f51977ef214e2184b874a4af50b8c6")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_72f51977ef214e2184b874a4af50b8c6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_72f51977ef214e2184b874a4af50b8c6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_72f51977ef214e2184b874a4af50b8c6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_72f51977ef214e2184b874a4af50b8c6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_72f51977ef214e2184b874a4af50b8c6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_DEA5B73DBB924E7E9D444BF70787EF0B.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
igcAAAEAbAoAAAEAbAoAAAEAYgQJAGQIAQARAGQIBgAZAGQICgApAGQIEAAxAGQIEAA5AGQIEABB
AGQIEABJAGQIEABRAGQIEABZAGQIEABhAGQIEABpAGQIBgDJAGQIBgDpAGQIFQD5AGQIBgC5AD4E
BgBxAGQIEAABAXsGBgB5AD4BIgAJAfMJJgC5AEkEBgABAVkCLAABAUsCBgAJAVgLPQCBAGQIQwCB
ANIHSgAZAVYGTwDBAJAEIgAhAZYBVAAZAeMAWQApAVECBgB5AGQIEACBAMIJYwAxAVUEaQBBAUgL
cQCRAGQIgQCZAGQIiQCZAEgGjwCZAJQJjwBJAWQIlACZAIQJmgCZABEBoQChAGQIpwChAF8GsQCh
AEAGAQBhAWQIEAChADQLBgChAAwKBgChAA8KWQC5AGQIBgC5AJ8AuwC5AGoJwgDBAGQIBgC5AEAJ
yABpAVYGzgC5ABYL1QBxAecK2wCRAYQB4gCRATsL6wDRAGQI8QDxAGQIBgAuAAsAfQEuABMAhgEu
ABsApQEuACMArgEuACsA1wEuADMA1wEuADsA1wEuAEMArgEuAEsA3QEuAFMA1wEuAFsA9AFDAGMA
PgLjAGsAPgJBAXsAPgLJBHMApQHpBHMApQEbADIAXQB1ALcAAwABAAYAHQAHACYACAAoAAAAlgJe
AQAAzQViAQAAlABeAQAARgViAQAAsgZeAQAADQZiAQAAPgBmAQAAIwViAQAAMgFmAQAAhgViAQAA
0QFmAQAAnQViAQAAmgJeAQAA0QViAQAA6wReAQAA4gViAQAAIwteAQAAIQZiAQAAhAZmAQAA+QVi
AQAA2QBmAQAAcQViAQAAywBeAQAAXAViAQAALwtmAQAANAZiAQAARgBeAQAAMgViAQAAhgRmAQAA
sQFmAQAA4ABqAQAAWQhmAQAAGgFmAQAApgRmAQAAwgFmAQAAowFmAQAAUwBmAQAAEAhuAQAAKwJz
AQAAHwp4AQEACAADAAEACQAFAAEACgAHAAEACwAJAAEADAALAAEADQANAAEADgAPAAEADwARAAEA
EAATAAEAEQAVAAEAEgAXAAEAEwAZAAEAFAAbAAEAFQAdAAEAFgAfAAEAFwAhAAEAGAAjAAEAGQAl
AAEAGgAnAAEAGwApAAEAHAArAAEAHQAtAAEAHgAvAAEAHwAxAAEAIAAzAAEAIQA1AAEAIgA3AAEA
IwA5AAIALgA7AAIALwA9AAIAMAA/AAIAMQBBAAIAMgBDAAIAMwBFAAIANABHAAIANQBJAAIANgBL
AAIAOABNAAIAOQBPAAEAOgBPAAIAOwBRAASAAAABAAAAAAAAAAAAAAAAAGwAAAAEAAAAAAAAAAAA
AAD5ALcAAAAAAA8AAAAAAAAAAAAAAAIBdgoAAAAABAAAAAAAAAAAAAAA+QCrAAAAAAAEAAAAAAAA
AAAAAAD5AGgGAAAAAA8AAAAAAAAAAAAAAAIBmwoAAAAADwAAAAAAAAAAAAAAAgGUBwAAAAAAAAAA
AQAAAL8IAAAAAAAAAElEVFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0
b3JDb250ZXh0MTAwAHNldF9JRDEAc2V0X0FnZW50SWQxAGdldF9Vc2VyTmFtZTEASW50MzIAPE1v
ZHVsZT4AU0NfREVBNUI3M0RCQjkyNEU3RTlENDQ0QkY3MDc4N0VGMEIAc2V0X0N1c3RvbWVySUQA
R2V0T3V0cHV0SUQAU3lzdGVtLkRhdGEAbXNjb3JsaWIAZ2V0X0lkAHNldF9DaGFubmVsSWQAc2V0
X1Nlc3Npb25JZABSZWFkAE1hcmtPdXRwdXRzRmluaXNoZWQARGJDb21tYW5kAFNxbENvbW1hbmQA
U2VuZABnZXRfcHdkAGRlZmF1bHRJbnN0YW5jZQBzZXRfc2VydmVybmFtZWUAZ2V0X01lc3NhZ2UA
TWFpbE1lc3NhZ2UATG9nRXJyb3JUb1RhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAFRvU2luZ2xlAGdldF9UYWJsZU5hbWUAZ2V0X0RhdGFCYXNlTmFt
ZQBnZXRfU2VydmVyTmFtZQBzZXRfQWN0aW9uVW5pdmVyc2FsVGltZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAGdldF9TdGF0ZQBzZXRf
U3RhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29ubmVjdGlvblN0YXRlAHNldF9OZXh0U3RhdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFsdWUA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBnZXRfQ29uU3RyaW5nAFRvU3RyaW5nAGVycm9yTG9n
AGdldF9RdWVyeVZhbABOZXR3b3JrQ3JlZGVudGlhbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lz
dGVtLk5ldC5NYWlsAHNldF9TdGF0ZURldGFpbABTQ19ERUE1QjczREJCOTI0RTdFOUQ0NDRCRjcw
Nzg3RUYwQi5kbGwAc2V0X0lEMV9Jc051bGwAc2V0X0FnZW50SWQxX0lzTnVsbABzZXRfQ3VzdG9t
ZXJJRF9Jc051bGwAc2V0X0NoYW5uZWxJZF9Jc051bGwAc2V0X1Nlc3Npb25JZF9Jc051bGwAc2V0
X3NlcnZlcm5hbWVlX0lzTnVsbABzZXRfQWN0aW9uVW5pdmVyc2FsVGltZV9Jc051bGwAc2V0X1N0
YXRlX0lzTnVsbABzZXRfTmV4dFN0YXRlX0lzTnVsbABzZXRfU3RhdGVEZXRhaWxfSXNOdWxsAHNl
dF9DYW1wYWlnbl9Jc051bGwAc2V0X0R1cmF0aW9uX0lzTnVsbABzZXRfQ29udGV4dF9Jc051bGwA
c2V0X3NlcnZfSXNOdWxsAFNldE51bGwAc2V0X0VuYWJsZVNzbABnZXRfSXRlbQBzZXRfSXRlbQBT
eXN0ZW0AcmVzb3VyY2VNYW4AT3BlbgBzZXRfQ2FtcGFpZ24AU2NyaXB0TWFpbgBTZW5kRW1haWxO
b3RpZmljYXRpb24Ac2V0X0R1cmF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGJDb25u
ZWN0aW9uAFNxbENvbm5lY3Rpb24Ac2tpcENvbm5lY3Rpb24AY29ubmVjdGlvbgBJbnZhbGlkT3Bl
cmF0aW9uRXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1l
TWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAERiRGF0YVJl
YWRlcgBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIAUGlwZWxpbmVCdWZmZXIAT3V0cHV0Y29s
QnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBTcWxQYXJhbWV0ZXIAZ2V0X0xhc3RTZXJ2ZXIALmN0b3IA
LmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzcyZjUxOTc3ZWYyMTRlMjE4NGI4NzRhNGFm
NTBiOGM2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ183
MmY1MTk3N2VmMjE0ZTIxODRiODc0YTRhZjUwYjhjNi5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZh
cmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAc2V0
X0NyZWRlbnRpYWxzAHNldF9Vc2VEZWZhdWx0Q3JlZGVudGlhbHMAQ29ubmVjdGlvbnMAQnVmZmVy
cwBnZXRfUGFyYW1ldGVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0
AE9iamVjdABTeXN0ZW0uTmV0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFN5c3RlbS5EYXRh
LlNxbENsaWVudABTbXRwQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlw
dENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENvbnZlcnQATWljcm9zb2Z0
LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASUNyZWRlbnRpYWxzQnlIb3N0AFByaW1lT3V0cHV0AHNl
dF9Db250ZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQA
Z2V0X0V2YWx1YXRvckNvbnRleHQAc2V0X3NlcnYAQWRkUm93AGdldF9Bc3NlbWJseQBFeGVjdXRl
Tm9uUXVlcnkAb3BfRXF1YWxpdHkAAFdGAGEAaQBsAGUAZAAgAHQAbwAgAGUAcwB0AGEAYgBsAGkA
cwBoACAAYQAgAGQAYQB0AGEAYgBhAHMAZQAgAGMAbwBuAG4AZQBjAHQAaQBvAG4AOgAgAAATTwBE
AEEAYwB0AGkAbwBuAHMAAB1TAEUATABFAEMAVAAgACoAIABGAFIATwBNACAAAAVJAEQAACdBAGMA
dABpAG8AbgBVAG4AaQB2AGUAcgBzAGEAbABUAGkAbQBlAAARQwBhAG0AcABhAGkAZwBuAAATUwBl
AHMAcwBpAG8AbgBJAGQAABFEAHUAcgBhAHQAaQBvAG4AABVDAHUAcwB0AG8AbQBlAHIASQBEAAAL
UwB0AGEAdABlAAAXUwB0AGEAdABlAEQAZQB0AGEAaQBsAAAPQwBvAG4AdABlAHgAdAAAE0MAaABh
AG4AbgBlAGwASQBkAAAPQQBnAGUAbgB0AEkAZAAAE04AZQB4AHQAUwB0AGEAdABlAABNRgBhAGkA
bABlAGQAIAB0AG8AIABlAHgAZQBjAHUAdABlACAAZABhAHQAYQBiAGEAcwBlACAAbwBwAGUAcgBh
AHQAaQBvAG4AOgAgAACAzUQAYQB0AGEAIABTAG8AdQByAGMAZQA9AEQARQBTAEsAVABPAFAALQA1
ADcATQBCADIAQwBOAFwASQBOAFQARQBMAEMASQBBADsASQBuAGkAdABpAGEAbAAgAEMAYQB0AGEA
bABvAGcAPQBzAGUAcgB2AGUAcgBJAG4AZgBvADsAVQBzAGUAcgAgAEkARAA9AHQAZQBzAHQAYwBv
AG4AbgA7AFAAYQBzAHMAdwBvAHIAZAA9AGkAbgB0AGUAbABjAGkAYQAyADAAMgAzAAF/SQBOAFMA
RQBSAFQAIABJAE4AVABPACAARQByAHIAbwByAEwAbwBnAFQAYQBiAGwAZQAgACgARQByAHIAbwBy
AE0AZQBzAHMAYQBnAGUAKQAgAFYAQQBMAFUARQBTACAAKABAAEUAcgByAG8AcgBNAGUAcwBzAGEA
ZwBlACkAABtAAEUAcgByAG8AcgBNAGUAcwBzAGEAZwBlAAA7awBoAGEAZABpAGoAYQB0AGUAcwB0
AC4AcAByAG8AagBlAGMAdABAAGcAbQBhAGkAbAAuAGMAbwBtAABBawBoAGEAZABpAGoAYQBhAGkA
dABtAHkAaABhAGMAaABlAG0AMgAwADAAMABAAGcAbQBhAGkAbAAuAGMAbwBtAAA3RABhAHQAYQBi
AGEAcwBlACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAdQByAGUAAICRVABoAGUAIABm
AG8AbABsAG8AdwBpAG4AZwAgAGUAcgByAG8AcgAgAG8AYwBjAHUAcgByAGUAZAAgAHcAaABpAGwA
ZQAgAGUAcwB0AGEAYgBsAGkAcwBoAGkAbgBnACAAYQAgAGQAYQB0AGEAYgBhAHMAZQAgAGMAbwBu
AG4AZQBjAHQAaQBvAG4AOgAKAAoAAB1zAG0AdABwAC4AZwBtAGEAaQBsAC4AYwBvAG0AACFkAHIA
ZQBxAHkAcwBzAGgAagB3AGUAYQBnAGUAaQBkAABHRgBhAGkAbABlAGQAIAB0AG8AIABzAGUAbgBk
ACAAZQBtAGEAaQBsACAAbgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AOgAgAACAm0kAcwBOAHUAbABs
ACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYA
YQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABj
AG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAE08AdQB0AHAAdQB0AGMAbwBsAAATQwBvAG4A
UwB0AHIAaQBuAGcAABlEAGEAdABhAEIAYQBzAGUATgBhAG0AZQAABUkAZAAAFUwAYQBzAHQAUwBl
AHIAdgBlAHIAAAdwAHcAZAAAEVEAdQBlAHIAeQBWAGEAbAAAFVMAZQByAHYAZQByAE4AYQBtAGUA
ABNUAGEAYgBsAGUATgBhAG0AZQAAE1UAcwBlAHIATgBhAG0AZQAxAABxUwBDAF8ANwAyAGYANQAx
ADkANwA3AGUAZgAyADEANABlADIAMQA4ADQAYgA4ADcANABhADQAYQBmADUAMABiADgAYwA2AC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAIx8eSRN+pNLvZLLm+Oo
1rQABCABAQgDIAABBSABARERBCABAQ4FIAEBEXEGBwMOEj0OAyAADgUAAg4ODgUgABGAiQoHBQ4O
EkESRRI9BQACAg4OBiACAQ4SOQQgABJFBCABHA4EAAEMHAMgAAIFBwIOEkEFIAASgJkHIAISgJ0O
HAMgAAgLBwYODg4SSRJNEj0HIAQBDg4ODgUgAgEOCAQgAQECBSACAQ4OBiABARKAqQUgAQESSQkg
AwESVR0IElkFIAIBCBwDBwEIBgACCBJZDgUgAR0ICAUgABKAtQYgARKAuRwFAAASgL0GIAEcEoDB
CAABEoDJEYDNBSAAEoDRByACAQ4SgNEIt3pcVhk04IkIiYRdzYCAzJEDBhI5AgYCAwYSFAMGEhgD
BhIMAwYSXQMGEmkDBhJtAwYSIAQgAQEMCyAEAQgdCB0SVRJZBSABARJdBAAAEmkEAAASbQUAAQES
bQQAABIgAwAAAQMoAAwDKAACAygADgMoAAgECAASaQQIABJtBAgAEiAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzcyZjUxOTc3ZWYyMTRlMjE4
NGI4NzRhNGFmNTBiOGM2AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMAAEkBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdv
cmsgNC43BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAKxJAAAAAAAAAAAAAMZJAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAC4SQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA7AMA
AAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAA
ABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUA
AAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANwAy
AGYANQAxADkANwA3AGUAZgAyADEANABlADIAMQA4ADQAYgA4ADcANABhADQAYQBmADUAMABiADgA
YwA2AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAo
AAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBEAEUAQQA1AEIANwAzAEQAQgBCADkA
MgA0AEUANwBFADkARAA0ADQANABCAEYANwAwADcAOAA3AEUARgAwAEIALgBkAGwAbAAAAEgAEgAB
AEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAA
MgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAo
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAEQARQBBADUAQgA3ADMA
RABCAEIAOQAyADQARQA3AEUAOQBEADQANAA0AEIARgA3ADAANwA4ADcARQBGADAAQgAuAGQAbABs
AAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA3ADIAZgA1ADEAOQA3ADcA
ZQBmADIAMQA0AGUAMgAxADgANABiADgANwA0AGEANABhAGYANQAwAGIAOABjADYAAAA0AAgAAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMA
ZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAANg5AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_dea5b73dbb924e7e9d444bf70787ef0b</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ConString,User::DataBaseName,User::Id,User::LastServer,User::pwd,User::QueryVal,User::ServerName,User::TableName,User::UserName1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">75</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol]"
                      hasSideEffects="true"
                      name="Outputcol">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[NextState]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[NextState]"
                          name="NextState" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[CustomerID]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[CustomerID]"
                          name="CustomerID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[Duration]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[Duration]"
                          name="Duration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[ID1]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[ID1]"
                          name="ID1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[servernamee]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[servernamee]"
                          name="servernamee" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[ActionUniversalTime]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[ActionUniversalTime]"
                          name="ActionUniversalTime" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[State]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[State]"
                          name="State" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[StateDetail]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[StateDetail]"
                          name="StateDetail" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[Context]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[Context]"
                          name="Context" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[Campaign]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[Campaign]"
                          name="Campaign" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[SessionId]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[SessionId]"
                          name="SessionId" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[ChannelId]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[ChannelId]"
                          name="ChannelId" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[serv]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[serv]"
                          name="serv" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[AgentId1]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[AgentId1]"
                          name="AgentId1" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
                  description="Destination OLE DB"
                  name="actionsStaging"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset">[dbo].[ODActions]</property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB]"
                      errorOrTruncationOperation="Insérer"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrée de destination OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[ID1]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ID1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[ID1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[Duration]"
                          cachedDataType="r4"
                          cachedName="Duration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[Duration]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[Duration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[servernamee]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="servernamee"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[servernamee]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[ActionUniversalTime]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ActionUniversalTime"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[ActionUniversalTime]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[ActionUniversalTime]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[AgentId1]"
                          cachedDataType="r4"
                          cachedName="AgentId1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[AgentId]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[AgentId1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[SessionId]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="SessionId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[SessionId]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[SessionId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[State]"
                          cachedDataType="r4"
                          cachedName="State"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[State]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[State]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[StateDetail]"
                          cachedDataType="r4"
                          cachedName="StateDetail"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[StateDetail]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[StateDetail]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[Campaign]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Campaign"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[Campaign]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[Campaign]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[ChannelId]"
                          cachedDataType="r4"
                          cachedName="ChannelId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[ChannelId]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[ChannelId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[NextState]"
                          cachedDataType="r4"
                          cachedName="NextState"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[NextState]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[NextState]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[CustomerID]"
                          cachedDataType="r4"
                          cachedName="CustomerID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[CustomerId]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[CustomerID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].Columns[Context]"
                          cachedDataType="r4"
                          cachedName="Context"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[Context]"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol].Columns[Context]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[ID]"
                          dataType="wstr"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[Duration]"
                          dataType="r8"
                          name="Duration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          dataType="nText"
                          name="servername" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[ActionUniversalTime]"
                          dataType="wstr"
                          length="255"
                          name="ActionUniversalTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[ActionLocalTime]"
                          dataType="wstr"
                          length="255"
                          name="ActionLocalTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[ActionUniversalTimeString]"
                          dataType="r8"
                          name="ActionUniversalTimeString" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[ActionLocalTimeString]"
                          dataType="r8"
                          name="ActionLocalTimeString" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[CustomerId]"
                          dataType="r8"
                          name="CustomerId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[AgentId]"
                          dataType="r8"
                          name="AgentId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[Context]"
                          dataType="r8"
                          name="Context" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[SessionId]"
                          dataType="wstr"
                          length="255"
                          name="SessionId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[State]"
                          dataType="r8"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[StateDetail]"
                          dataType="r8"
                          name="StateDetail" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[Campaign]"
                          dataType="wstr"
                          length="255"
                          name="Campaign" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[ChannelId]"
                          dataType="r8"
                          name="ChannelId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB].ExternalColumns[NextState]"
                          dataType="r8"
                          name="NextState" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Outputs[Sortie d'erreur de destination OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de destination OLE DB"
                      synchronousInputId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Staging ODActions.Paths[Outputcol]"
                  endId="Package\Foreach Loop Container\Staging ODActions\actionsStaging.Inputs[Entrée de destination OLE DB]"
                  name="Outputcol"
                  startId="Package\Foreach Loop Container\Staging ODActions\actions.Outputs[Outputcol]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Staging ODcalls"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{72a9908c-e85b-4968-a0d9-4b00fde8e4f9}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Staging ODcalls"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Staging State"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{B86BA634-456E-48F6-A26A-9B60FE0B7F71}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Staging State"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Staging State\Destination OLE DB"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
                  description="Destination OLE DB"
                  name="Destination OLE DB"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset">[dbo].[States]</property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                      errorOrTruncationOperation="Insérer"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrée de destination OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Detail]"
                          cachedDataType="r4"
                          cachedName="Detail"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Detail]"
                          lineageId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[Detail]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[State]"
                          cachedDataType="r4"
                          cachedName="State"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[State]"
                          lineageId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[State]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Context]"
                          cachedDataType="r4"
                          cachedName="Context"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Context]"
                          lineageId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[Context]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[servername]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="servername"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          lineageId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[servername]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Description]"
                          lineageId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[Description]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Context]"
                          dataType="r8"
                          name="Context" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[State]"
                          dataType="r8"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Detail]"
                          dataType="r8"
                          name="Detail" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          dataType="nText"
                          name="servername" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de destination OLE DB"
                      synchronousInputId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Staging State\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConnexionString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConnexionString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ConString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DataBaseName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DataBaseName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Object FullSet
    {
        get
        {
            return (Object)(ParentComponent.ReadOnlyVariables["FullSet"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Id
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String LastServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["LastServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String pwd
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["pwd"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String QueryVal
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["QueryVal"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ServerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ServerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TableName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TableName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UserName1
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UserName1"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Data.SqlClient;
using System.Net.Mail;
using System.Collections.Generic;


#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]


public class ScriptMain : UserComponent
{

    private SqlConnection connection;
    private bool skipConnection = false;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        // base.PreExecute();
        /*
         * Add your code here
         */

        // Retrieve the connection string from a variable
        //string connectionString = Variables.ConnexionString;



        // Create a new SqlConnection object
        //connection = new SqlConnection(connectionString);

        // Open the connection
        //connection.Open();

        // Create a new SqlConnection
        //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        // "Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;"
        // connection = new SqlConnection(connectionString);
        // connection.Open();
        // string query = "INSERT INTO test1 (test, testdescription) VALUES ('teest', 'deeesc')";

        //using (SqlCommand command = new SqlCommand(query, connection))
        // {

        //command.Parameters.AddWithValue("@Value1", Row.Column1);
        //command.Parameters.AddWithValue("@Value2", Row.Column2);
        //command.ExecuteNonQuery();
        //}
        base.PreExecute();


        string variableCon = Variables.ConString;

        // Create a new SqlConnection
        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(variableCon);

        try
        {
            connection.Open();
            // Connection has been established successfully
        }
        catch (Exception ex)
        {
            // Handle the connection error
            // Log the error or take any necessary actions

            skipConnection = true;
            // Log the error and move to the next connection
            string errorLog = "Failed to establish a database connection: " + ex.Message;
            // Log the error to a table or file
            // You can use a SQL command or any other logging mechanism here
            // For example:
            LogErrorToTable(errorLog);
            SendEmailNotification(errorLog);


            //connection.Close();
            //throw new Exception("Failed to establish a database connection: " + ex.Message);
        }


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (connection.State == ConnectionState.Open)
            connection.Close();
    }

    public override void CreateNewOutputRows()
    {
     

        if (skipConnection)
            return; // Skip executing the query for this connection

        try
        {
            string variableTable = Variables.TableName;
            string varserver = Variables.ServerName;
            SqlConnection connectiontest=connection;

            if (variableTable == "States")
            {


                if (!HasSchemaChanged(connection, "States", GetReferenceSchema("States")))
                    {

                    SqlConnection connectionn;
                    string variableConn = Variables.ConString;

                    // Create a new SqlConnection
                    //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
                    //connection = new SqlConnection(connectionString);
                    connectionn = new SqlConnection(variableConn);
                    connectionn.Open();


                        //connectiontest.Open();
                        using (SqlCommand command = new SqlCommand("SELECT * FROM " + variableTable, connectionn))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            while (reader.Read())
                            {

                                try
                                {
                                    Output0Buffer.AddRow();
                                    Output0Buffer.Description = reader["Description"].ToString();
                                    Output0Buffer.servername = varserver;
                                    Output0Buffer.Context = Convert.ToSingle(reader["Context"]);
                                    Output0Buffer.State = Convert.ToSingle(reader["State"]);
                                    Output0Buffer.Detail = Convert.ToSingle(reader["Detail"]);


                                }
                                catch (Exception ex)
                                {



                                }
                            }
                        }
                    }
                }
                else
                {
                    LogErrorToTable("shema table State has ben changed");
                }



            }
            
        }
        catch (Exception ex)
        {
            // Handle the database operation error
            // Log the error or take any necessary actions
            throw new Exception("Failed to execute database operation: " + ex.Message);
        }

    }


    private void LogErrorToTable(string errorLog)
    {
        // Implement your logging mechanism here
        // For example, execute a SQL command to insert the error log into a table

        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(connectionString);

        if (connection.State == ConnectionState.Closed)
            connection.Open();

        string logQuery = "INSERT INTO ErrorLogTable (ErrorMessage) VALUES (@ErrorMessage)";

        using (SqlCommand command = new SqlCommand(logQuery, connection))
        {
            command.Parameters.AddWithValue("@ErrorMessage", errorLog);
            command.ExecuteNonQuery();
        }



    }

    private void SendEmailNotification(string errorLog)
    {
        // Configure email settings
        string fromAddress = "khadijatest.project@gmail.com";
        string toAddress = "khadijaaitmyhachem2000@gmail.com";
        string subject = "Database Connection Failure";
        string body = "The following error occurred while establishing a database connection:\n\n" + errorLog;

        // Create and configure the email message
        MailMessage message = new MailMessage(fromAddress, toAddress, subject, body);

        // Send the email using SMTP client
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com", 587);
        smtpClient.EnableSsl = true;
        smtpClient.UseDefaultCredentials = false;
        smtpClient.Credentials = new System.Net.NetworkCredential("khadijatest.project@gmail.com", "dreqysshjweageid");

        try
        {
            smtpClient.Send(message);
        }
        catch (Exception ex)
        {
            throw new Exception("Failed to send email notification: " + ex.Message);
        }
    }


    public TableSchema GetReferenceSchema(string tableName)
    {
        // Connexion à la base de données
        ///////////////////////////////////////////////////
        string connectionStringRef = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        using (connection = new SqlConnection(connectionStringRef))
        {
            if (connection.State == ConnectionState.Closed)
                connection.Open();
            //connectionref.Open();

            // Obtention du schéma de référence à partir des métadonnées de la base de données
            DataTable schemaTable = connection.GetSchema("Columns", new[] { null, null, tableName });

            // Création d'une structure de schéma pour stocker les informations de colonnes
            TableSchema referenceSchema = new TableSchema();

            // Parcours des métadonnées des colonnes
            foreach (DataRow row in schemaTable.Rows)
            {
                string columnName = row["COLUMN_NAME"].ToString();
                string dataType = row["DATA_TYPE"].ToString();
                // Ajout de la colonne au schéma de référence
                referenceSchema.AddColumn(columnName, dataType);
            }
            return referenceSchema;
        }
    }

    public class TableSchema
    {
        public List<Column> Columns { get; set; }

        public TableSchema()
        {
            Columns = new List<Column>();
        }

        public void AddColumn(string columnName, string dataType)
        {
            Columns.Add(new Column(columnName, dataType));
        }
    }

    public class Column
    {
        public string Name { get; set; }
        public string DataType { get; set; }

        public Column(string name, string dataType)
        {
            Name = name;
            DataType = dataType;
        }
    }



    public bool HasSchemaChanged(SqlConnection conn, String tableName, TableSchema referenceSchema)
    {
        // Connexion à la base de données
        /////////////////////////////////////////////////
        //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        using (conn)
        {
            //connection.Open();
            if (conn.State == ConnectionState.Closed)
                conn.Open();
            // Obtention du schéma actuel à partir des métadonnées de la base de données
            DataTable schemaTable = conn.GetSchema("Columns", new[] { null, null, tableName });

            // Comparaison du schéma actuel avec le schéma de référence
            if (schemaTable.Rows.Count != (referenceSchema.Columns.Count)-1)
            {
                return true; // Le nombre de colonnes a changé
            }

            // Parcours des métadonnées des colonnes
            foreach (DataRow row in schemaTable.Rows)
            {
                string columnName = row["COLUMN_NAME"].ToString();
                string dataType = row["DATA_TYPE"].ToString();

                // Recherche de la colonne correspondante dans le schéma de référence
                Column referenceColumn = referenceSchema.Columns.Find(c => c.Name == columnName);

                if (referenceColumn == null || referenceColumn.DataType != dataType)
                {
                    return true; // La colonne n'existe pas dans le schéma de référence ou son type a changé
                }
            }

            return false; // Aucun changement de schéma détecté
        }
    }


}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Single Detail
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Detail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single State
    {
        set
        {
            this[1] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Context
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Context_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String servername
    {
        set
        {
            this[3] = value;
        }
    }
    public bool servername_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Description
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Description_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3d64dcd511154421812e11da2db9d666.Properties.Settings.get_Default():SC_3d64dcd511154421812e11da2db9d666.Properties.Sett" +
    "ings")]

namespace SC_3d64dcd511154421812e11da2db9d666.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_3d64dcd511154421812e11da2db9d666.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{b0cb23c7-9708-40c8-b16b-9ad8cf52e2b6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_3d64dcd511154421812e11da2db9d666</RootNamespace>
    <AssemblyName>SC_3d64dcd511154421812e11da2db9d666</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_3d64dcd511154421812e11da2db9d666" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_3d64dcd511154421812e11da2db9d666</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_3d64dcd511154421812e11da2db9d666</msb:DisplayName>
    <msb:ProjectId>{9D12CBAC-CCCA-497B-B47F-26086176681A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_3d64dcd511154421812e11da2db9d666.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_3d64dcd511154421812e11da2db9d666")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_3d64dcd511154421812e11da2db9d666")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3d64dcd511154421812e11da2db9d666.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3d64dcd511154421812e11da2db9d666.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3d64dcd511154421812e11da2db9d666.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_3d64dcd511154421812e11da2db9d666.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_3d64dcd511154421812e11da2db9d666.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_3d64dcd511154421812e11da2db9d666.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALkegmQAAAAAAAAAAOAAIiALATAAAC4AAAAIAAAAAAAAvkwA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGxMAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxCwAAAAgAAAALgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAwAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
TAAAAAAAAEgAAAACAAUABCoAALAhAAABAAAAAAAAALRLAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgBVAAAAAQAAEQIoEAAACgJ7BAAABG8fAAAGCgIGcxEA
AAp9AQAABAJ7AQAABG8SAAAK3ikLAhd9AgAABHIBAABwB28TAAAKKBQAAAoMAggoBAAABgIIKAUA
AAbeACoAAAABEAAAAAAeAA0rACkPAAABggIoFQAACgJ7AQAABG8WAAAKFzMLAnsBAAAEbxcAAAoq
AAAAGzAFAGoBAAACAAARAnsCAAAELAEqAAJ7BAAABG8nAAAGCgJ7BAAABG8mAAAGCwJ7AQAABCYG
clkAAHAoGAAACjkVAQAAAgJ7AQAABHJZAABwAnJZAABwKAYAAAYoBwAABjrpAAAAAnsEAAAEbx8A
AAZzEQAACgwIbxIAAApyZwAAcAYoFAAACghzGQAACg0JbxoAAAoTBDiNAAAAAAJ7BQAABG8UAAAG
AnsFAAAEEQRyhQAAcG8bAAAKbxwAAApvEgAABgJ7BQAABAdvEAAABgJ7BQAABBEEcp0AAHBvGwAA
CigdAAAKbw4AAAYCewUAAAQRBHKtAABwbxsAAAooHQAACm8MAAAGAnsFAAAEEQRyuQAAcG8bAAAK
KB0AAApvCgAABt4DJt4AEQRvHgAACjpn////3gwRBCwHEQRvHwAACtzeFQksBglvHwAACtwCcscA
AHAoBAAABt4ZEwVyCwEAcBEFbxMAAAooFAAACnMgAAAKeioAAEFkAAAAAAAAkQAAAIkAAAAaAQAA
AwAAAA8AAAECAAAAiwAAAKAAAAArAQAADAAAAAAAAAACAAAAgwAAALYAAAA5AQAACgAAAAAAAAAA
AAAACgAAAEYBAABQAQAAGQAAAA8AAAEbMAMAYQAAAAMAABFyWQEAcAoCBnMRAAAKfQEAAAQCewEA
AARvFgAACi0LAnsBAAAEbxIAAApyKAIAcAJ7AQAABHMZAAAKCwdvIQAACnKoAgBwA28iAAAKJgdv
IwAACibeCgcsBgdvHwAACtwqAAAAARAAAAIAOwAbVgAKAAAAABswBACBAAAABAAAEXLEAgBwcgAD
AHAKckIDAHALcnoDAHADKBQAAAoMBgcIcyQAAAoNcg0EAHAgSwIAAHMlAAAKEwQRBBdvJgAAChEE
Fm8nAAAKEQRyxAIAcHIrBABwcygAAApvKQAAChEECW8qAAAK3hkTBXJNBABwEQVvEwAACigUAAAK
cyAAAAp6KgAAAAEQAAAAAF0ACmcAGQ8AAAEbMAYAxwAAAAUAABFyWQEAcAoCBnMRAAAKJQx9AQAA
BAgLAnsBAAAEbxYAAAotCwJ7AQAABG8SAAAKAnsBAAAEcpUEAHAZjSYAAAElGAOibysAAApzMgAA
Bg1vLAAACm8tAAAKEwQrOREEby4AAAp0FwAAASVypQQAcG8vAAAKbxwAAAoTBXK9BABwby8AAApv
HAAAChMGCREFEQZvMwAABhEEbzAAAAotvt4VEQR1FQAAARMHEQcsBxEHbx8AAArcCRMI3goHLAYH
bx8AAArcEQgqAAEcAAACAFoARqAAFQAAAAACABYApLoACgAAAAAbMAYA9AAAAAYAABEDCgNvFgAA
Ci0GA28SAAAKA3KVBABwGY0mAAABJRgEom8rAAAKCwdvLAAACm8xAAAKBW8wAAAGbzIAAAoXWS4H
FwzdqwAAAAdvLAAACm8tAAAKDStxCW8uAAAKdBcAAAETBHM5AAAGEwURBREEcqUEAHBvLwAACm8c
AAAKfQ4AAAQRBHK9BABwby8AAApvHAAAChMGBW8wAAAGEQX+BjoAAAZzMwAACm80AAAKEwcRBywQ
EQdvNgAABhEGKDUAAAosBBcM3iwJbzAAAAoth94UCXUVAAABEwgRCCwHEQhvHwAACtwWDN4KBiwG
Bm8fAAAK3AgqARwAAAIAUwB90AAUAAAAAAIAAgDm6AAKAAAAAB4CKBcAAAYqKgIDBAUoNgAACio6
AhYDjDIAAAEoNwAACipaAywIAhYoOAAACipy0QQAcHM5AAAKejoCFwOMMgAAASg3AAAKKloDLAgC
Fyg4AAAKKnLRBABwczkAAAp6OgIYA4wyAAABKDcAAAoqWgMsCAIYKDgAAAoqctEEAHBzOQAACnom
AhkDKDcAAAoqWgMsCAIZKDgAAAoqctEEAHBzOQAACnomAhoDKDcAAAoqWgMsCAIaKDgAAAoqctEE
AHBzOQAACnoeAig6AAAKKh4CKDsAAAoqHgIoPAAACip+Aig9AAAKAgJzHAAABn0DAAAEAgJzHQAA
Bn0EAAAEKgYqbgJ7BQAABCwSAnsFAAAEbxUAAAYCFH0FAAAEKgAAABMwBQBJAAAABwAAERYKKy4E
BpQOBHJuBQBwKD4AAAozGQIFBpoCBAaUKD8AAAoOBHMJAAAGfQUAAAQGF1gKBgMyzgJvGwAABgJv
GAAABgIoGQAABio6AihAAAAKAgN9BgAABCo6AihAAAAKAgN9BwAABCqWAnsHAAAEb0EAAApygAUA
cG9CAAAKKEMAAApvRAAACnQmAAABKpYCewcAAARvQQAACnKgBQBwb0IAAAooQwAACm9EAAAKdCYA
AAEqlgJ7BwAABG9BAAAKcrQFAHBvQgAACihDAAAKb0QAAAp0JgAAASqCAnsHAAAEb0EAAApyzgUA
cG9CAAAKKEMAAApvRAAACiqWAnsHAAAEb0EAAApy3gUAcG9CAAAKKEMAAApvRAAACqU4AAABKpYC
ewcAAARvQQAACnLkBQBwb0IAAAooQwAACm9EAAAKdCYAAAEqlgJ7BwAABG9BAAAKcvoFAHBvQgAA
CihDAAAKb0QAAAp0JgAAASqWAnsHAAAEb0EAAApyAgYAcG9CAAAKKEMAAApvRAAACnQmAAABKpYC
ewcAAARvQQAACnIUBgBwb0IAAAooQwAACm9EAAAKdCYAAAEqlgJ7BwAABG9BAAAKcioGAHBvQgAA
CihDAAAKb0QAAAp0JgAAASqWAnsHAAAEb0EAAApyPgYAcG9CAAAKKEMAAApvRAAACnQmAAABKh4C
KEAAAAoqrn4IAAAELR5yUgYAcNAHAAACKEUAAApvRgAACnNHAAAKgAgAAAR+CAAABCoafgkAAAQq
HgKACQAABCoafgoAAAQqHgIoSAAACioucy4AAAaACgAABCoeAnsLAAAEKiICA30LAAAEKkoCKEAA
AAoCc0kAAAooMQAABipOAigwAAAGAwRzOAAABm9KAAAKKh4CewwAAAQqIgIDfQwAAAQqHgJ7DQAA
BCoiAgN9DQAABCpWAihAAAAKAgMoNQAABgIEKDcAAAYqSgNvNAAABgJ7DgAABCgYAAAKKgAAAEJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAADQLAAAjfgAAoAsAAEwMAAAjU3RyaW5n
cwAAAADsFwAAxAYAACNVUwCwHgAAEAAAACNHVUlEAAAAwB4AAPACAAAjQmxvYgAAAAAAAAACAAAB
VxWiCQkDAAAA+gEzABYAAAEAAAA7AAAACwAAAA4AAAA6AAAAIgAAAEoAAAAaAAAABwAAAAYAAAAb
AAAAHwAAAAIAAAABAAAABgAAAAEAAAADAAAAAAAABgEAAAAAAAYAhgQICQYAGgUICQYA0gP1CA8A
fAkAAAYA/wMlBwYAaQQlBwYASgQlBwYAAQUlBwYApgQlBwYAvwQlBwYAFgQlBwYAMQRiBQoA2gS0
Ag4AbQfhCgYApQezBg4AuAHhCg4AJgjhChIA8QHlBRIA9wrlBQYAxAhACgYAFwKzBg4A/QEAAQ4A
BAwAAQYAqAqzBgYAmgMICQYAcwAVAQoAXwi0AhYAUAi0AgoA3ge0AgoAIAu0AgYAtQP1CAYAcAgo
CQYA0gcQBxIAdQPPBRIA5gPPBRIAOwP7Bg4AYAe/BwYAoAWzBg4AigMAAQ4AGQi/BwYAYwuzBg4A
NwfhCg4AqAjhCg4ArgG/BxIAvQWvChIAjAuvCg4ATgcAAQ4AIAMAAQYAZwCzBgYASQKzBgYAlQez
BhoAEQCACBoAAQCACHsA1AsAABoAIgCACAYAiACzBgYA8wKzBgYAIwKzBgYAFwwlBwAAAACyAAAA
AAABAAEAAQAQAMsGAAAQAAEAAQABABAAQggAAG0AAwAJAAEAEAACCwAAeQADABcAAQAQAFMKAABh
AAYAHAABABAAxgkAAGEABwAdAAAAEAAvCYsJYQAIACkAAAEQAPUJiwmRAAoALQACABAA6gAAAGEA
CwAwAAIAEADZBgAAYQAMADQAAwEQADoAAABhAA4AOQABAIoHcQEBAHsHdQEGAFMKeAEGAMYJfAEG
AEIIgAEBABALhAEBABALhAERALoGiAERABADjQERANUBkgEBAJUBlgEBAGUBngEBAHsBngEGAIsC
ngFQIAAAAADGADgFBgABAMQgAAAAAMYAQwUGAAEA6CAAAAAAxgCNCgYAAQDEIgAAAACBAAcCEAAB
AEQjAAAAAIEA5QYQAAIA5CMAAAAAhgDHAKEBAwDUJAAAAACGAEABpwEEAPAlAAAAAIYY3ggGAAcA
+CUAAAAAhhjeCAcBBwADJgAAAACGCPUFsAEKABImAAAAAIYITwaSAAsAKSYAAAAAhghrA7ABDAA4
JgAAAACGCD4GkgANAE8mAAAAAIYItAuwAQ4AXiYAAAAAhgh4BpIADwB1JgAAAACGCKUCEAAQAH8m
AAAAAIYIKAaSABEAliYAAAAAhgivBxAAEgCgJgAAAACGCGEGkgATALcmAAAAAIYADAwGABQAvyYA
AAAAhgDGCgYAFADHJgAAAACGAMkKXAAUAM8mAAAAAIYY3ggGABQA7yYAAAAAxgF2CgYAFADxJgAA
AACBAFEBBgAUABAnAAAAAMYAnwu1ARQA7yYAAAAAxgGNCgYAGABlJwAAAACGGN4IwQEYAHQnAAAA
AIYY3gjBARkAgycAAAAAhgiKBSMAGgCpJwAAAACGCHwFIwAaAM8nAAAAAIYIegIjABoA9ScAAAAA
hgi6Cs8AGgAWKAAAAACGCDABdAAaADwoAAAAAIYItQgjABoAYigAAAAAhgjNASMAGgCIKAAAAACG
CLAFIwAaAK4oAAAAAIYIlgIjABoA1CgAAAAAhghiAiMAGgD6KAAAAACGCHoAIwAaACApAAAAAIMY
3ggGABoAKCkAAAAAkwhsCMcBGgBUKQAAAACTCPgCzQEaAFspAAAAAJMIBAPTARoAYykAAAAAlgjV
CtoBGwBqKQAAAACGGN4IBgAbAHIpAAAAAJEY5AjfARsAfikAAAAAhggoCuMBGwCGKQAAAACGCDQK
7AEbAI8pAAAAAIYY3ggGABwAoikAAAAAhgDWBpcAHAC2KQAAAACGCFACIwAeAL4pAAAAAIYIWQIQ
AB4AxykAAAAAhgjVAiMAHwDPKQAAAACGCOICEAAfANgpAAAAAIYY3giXACAAICkAAAAAhhjeCAYA
IgDuKQAAAACDAFAA9gEiAAAAAQCnBQAAAQCnBQAAAQBwAgAAAQDgBgAAAgBwAgAAAwDaAAAAAQBl
CAAAAgDQCQAAAwDsBwAAAQBcBQAAAQBcBQAAAQBcBQAAAQBcBQAAAQBcBQAAAQBcBQAAAQBcBQAA
AQBcBQAAAQBcBQAAAQBcBQAAAQB8CgAAAgDrCAAAAwBfCgAABADsBwAAAQAmCwAAAQAmCwAAAQBc
BQAAAQBcBQAAAQCLAgAAAgDvAgAAAQBcBQAAAQBcBQAAAQCvAgAAAgDvAgAAAQAuAQkA3ggBABEA
3ggGABkA3ggKACkA3ggQADEA3ggQADkA3ggQAEEA3ggQAEkA3ggQAFEA3ggQAFkA3ggQAGEA3ggQ
AGkA3ggGAMkA3ggGAPkA3ggGABkB3ggVAPEAOAUGAHEA3ggQACkBxgYGAHkA5QEjADEBoQonAPEA
QwUGACkBYQMtACkBUwMGADEBMAxAAIEA3ghGAIEANAhNAEEBoQZSAMEAngUjAEkBRwJXAEEBNwFc
AKkAWQMGAHkA3ggQAIEAZwpmAFEBTwVsAGEBIAx0AJEA3giEAJkA3giMAJkAkwaSAJkADgqSAGkB
3giXAJkA/gmdAJkAwwGkACkB9gC8ALEAhArEAIEB0AjKAKEAMAvPALkAoQZSAKEAqwtcAIEBPAt0
AAwAPAt0ABQA3gj1AAwAyAH7ADEBPAxAANkA3ggHAdkAqgYRAdkAiwYBAJkB3ggQANkADAwGANkA
xgoGANkAyQpcAPEA3ggGAPEAuwAbAfEA5AkiAcEA3ggGAPEAugkoAaEBoQYuAfEA7ws1AakBwAs7
AckBNQJCAckBEwxLAQEB3ghRASEB3ggGAAwA3ggGAAwAPAFZAS4ACwAqAi4AEwAzAi4AGwBSAi4A
IwBbAi4AKwCEAi4AMwCEAi4AOwCEAi4AQwBbAi4ASwCKAi4AUwCEAi4AWwChAkMAYwDrAuMAcwDr
AkEBawDrAmEBawDrAmMBawDrAoEBawDrAqEBawDrAskCewBSAukCewBSAgAGawDrAiAGawDrAoAG
awDrAqAGawDrAsAGawDrAuAGawDrAhwAMwBgAHgAqgDTABcBAwABAAYACwAHABYACAAYAAkAGQAK
ABoAAAD5BfwBAABTBgACAACUA/wBAABCBgACAAD8C/wBAAB8BgACAACpAgQCAAAsBgACAACzBwQC
AABlBgACAACOBQQCAACABQQCAAB+AgQCAAC+CggCAAA0AQwCAAC5CAQCAADRAQQCAAC0BQQCAACa
AgQCAABmAgQCAAB+AAQCAABwCBACAAAYAxYCAADZChwCAAA4CiECAACgAgQCAADmAgQCAQAKAAMA
AQALAAUAAQAMAAcAAQANAAkAAQAOAAsAAQAPAA0AAQAQAA8AAQARABEAAQASABMAAQATABUAAgAe
ABcAAgAfABkAAgAgABsAAgAhAB0AAgAiAB8AAgAjACEAAgAkACMAAgAlACUAAgAmACcAAgAnACkA
AgAoACsAAgAqAC0AAgArAC8AAQAsAC8AAgAtADEAAgAwADMAAQAxADMAAgA0ADUAAQA1ADUAAgA2
ADcAAQA3ADcA5gDtAASAAAABAAAAAAAAAAAAAAAAAI4AAAAEAAAAAAAAAAAAAABfAQwBAAAAAA8A
AAAAAAAAAAAAAGgBRgsAAAAABAAAAAAAAAAAAAAAXwEAAQAAAAAEAAAAAAAAAAAAAABfAbMGAAAA
AA8AAAAAAAAAAAAAAGgBawsAAAAADwAAAAAAAAAAAAAAaAH2BwAAAAAAAAAAAQAAADkJAAAJAAIA
CgACAAsAAgAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9y
Q29udGV4dDEwMAA8PmNfX0Rpc3BsYXlDbGFzczEwXzAAPEhhc1NjaGVtYUNoYW5nZWQ+Yl9fMABQ
cmVkaWNhdGVgMQBMaXN0YDEAZ2V0X1VzZXJOYW1lMQBJbnQzMgBTQ18zZDY0ZGNkNTExMTU0NDIx
ODEyZTExZGEyZGI5ZDY2NgA8TW9kdWxlPgBHZXRPdXRwdXRJRABHZXRSZWZlcmVuY2VTY2hlbWEA
cmVmZXJlbmNlU2NoZW1hAFRhYmxlU2NoZW1hAEdldFNjaGVtYQBTeXN0ZW0uRGF0YQBtc2Nvcmxp
YgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBnZXRfSWQAUmVhZABBZGQASGFzU2NoZW1hQ2hh
bmdlZABNYXJrT3V0cHV0c0ZpbmlzaGVkADxOYW1lPmtfX0JhY2tpbmdGaWVsZAA8RGF0YVR5cGU+
a19fQmFja2luZ0ZpZWxkADxDb2x1bW5zPmtfX0JhY2tpbmdGaWVsZABEYkNvbW1hbmQAU3FsQ29t
bWFuZABTZW5kAEZpbmQAZ2V0X3B3ZABkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UATWFpbE1l
c3NhZ2UARGF0YVRhYmxlAExvZ0Vycm9yVG9UYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBUb1NpbmdsZQBnZXRfTmFtZQBzZXRfTmFtZQBnZXRfVGFi
bGVOYW1lAHRhYmxlTmFtZQBnZXRfRGF0YUJhc2VOYW1lAGNvbHVtbk5hbWUAZ2V0X1NlcnZlck5h
bWUAc2V0X3NlcnZlcm5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAZ2V0X0Rh
dGFUeXBlAHNldF9EYXRhVHlwZQBkYXRhVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UAQ2xvc2UARGlzcG9zZQBnZXRfU3RhdGUAc2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbm5lY3Rpb25TdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNT
SVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJp
YnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRl
AEFkZFdpdGhWYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAGdldF9Db25TdHJp
bmcAZ2V0X0Nvbm5leGlvblN0cmluZwBUb1N0cmluZwBlcnJvckxvZwBnZXRfUXVlcnlWYWwATmV0
d29ya0NyZWRlbnRpYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFN5c3RlbS5OZXQuTWFpbABzZXRf
RGV0YWlsAFNDXzNkNjRkY2Q1MTExNTQ0MjE4MTJlMTFkYTJkYjlkNjY2LmRsbABzZXRfc2VydmVy
bmFtZV9Jc051bGwAc2V0X1N0YXRlX0lzTnVsbABzZXRfRGV0YWlsX0lzTnVsbABzZXRfRGVzY3Jp
cHRpb25fSXNOdWxsAHNldF9Db250ZXh0X0lzTnVsbABTZXROdWxsAHNldF9FbmFibGVTc2wAZ2V0
X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBBZGRDb2x1
bW4AY29ubgBTZW5kRW1haWxOb3RpZmljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBE
YXRhUm93Q29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBza2lwQ29ubmVjdGlv
bgBjb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24Ac2V0X0Rlc2NyaXB0aW9uAFN5
c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNy
b3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAERiRGF0YVJlYWRlcgBTcWxEYXRhUmVhZGVy
AEV4ZWN1dGVSZWFkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIA
Z2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBw
ZXIAU3FsUGFyYW1ldGVyAGdldF9MYXN0U2VydmVyAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IA
LmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzNkNjRkY2Q1MTExNTQ0MjE4MTJl
MTFkYTJkYjlkNjY2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTQ18zZDY0ZGNkNTExMTU0NDIxODEyZTExZGEyZGI5ZDY2Ni5Qcm9wZXJ0aWVzAGdldF9SZWFk
T25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGlu
Z3MAc2V0X0NyZWRlbnRpYWxzAHNldF9Vc2VEZWZhdWx0Q3JlZGVudGlhbHMAZ2V0X0NvbHVtbnMA
c2V0X0NvbHVtbnMAU3lzdGVtLkNvbGxlY3Rpb25zAENvbm5lY3Rpb25zAEJ1ZmZlcnMAZ2V0X1Bh
cmFtZXRlcnMARmluaXNoT3V0cHV0cwBnZXRfUm93cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNh
dABPYmplY3QAU3lzdGVtLk5ldABnZXRfRnVsbFNldABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVs
dABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU210cENsaWVudABVc2VyQ29tcG9uZW50AFBhcmVudENv
bXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvdW50AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuVHhTY3JpcHQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9z
dABJQ3JlZGVudGlhbHNCeUhvc3QAUHJpbWVPdXRwdXQATW92ZU5leHQAc2V0X0NvbnRleHQAR2V0
VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9y
Q29udGV4dABEYXRhUm93AEFkZFJvdwBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AG9wX0Vx
dWFsaXR5AG9wX0luZXF1YWxpdHkAAAAAV0YAYQBpAGwAZQBkACAAdABvACAAZQBzAHQAYQBiAGwA
aQBzAGgAIABhACAAZABhAHQAYQBiAGEAcwBlACAAYwBvAG4AbgBlAGMAdABpAG8AbgA6ACAAAA1T
AHQAYQB0AGUAcwAAHVMARQBMAEUAQwBUACAAKgAgAEYAUgBPAE0AIAAAF0QAZQBzAGMAcgBpAHAA
dABpAG8AbgAAD0MAbwBuAHQAZQB4AHQAAAtTAHQAYQB0AGUAAA1EAGUAdABhAGkAbAAAQ3MAaABl
AG0AYQAgAHQAYQBiAGwAZQAgAFMAdABhAHQAZQAgAGgAYQBzACAAYgBlAG4AIABjAGgAYQBuAGcA
ZQBkAABNRgBhAGkAbABlAGQAIAB0AG8AIABlAHgAZQBjAHUAdABlACAAZABhAHQAYQBiAGEAcwBl
ACAAbwBwAGUAcgBhAHQAaQBvAG4AOgAgAACAzUQAYQB0AGEAIABTAG8AdQByAGMAZQA9AEQARQBT
AEsAVABPAFAALQA1ADcATQBCADIAQwBOAFwASQBOAFQARQBMAEMASQBBADsASQBuAGkAdABpAGEA
bAAgAEMAYQB0AGEAbABvAGcAPQBzAGUAcgB2AGUAcgBJAG4AZgBvADsAVQBzAGUAcgAgAEkARAA9
AHQAZQBzAHQAYwBvAG4AbgA7AFAAYQBzAHMAdwBvAHIAZAA9AGkAbgB0AGUAbABjAGkAYQAyADAA
MgAzAAF/SQBOAFMARQBSAFQAIABJAE4AVABPACAARQByAHIAbwByAEwAbwBnAFQAYQBiAGwAZQAg
ACgARQByAHIAbwByAE0AZQBzAHMAYQBnAGUAKQAgAFYAQQBMAFUARQBTACAAKABAAEUAcgByAG8A
cgBNAGUAcwBzAGEAZwBlACkAABtAAEUAcgByAG8AcgBNAGUAcwBzAGEAZwBlAAA7awBoAGEAZABp
AGoAYQB0AGUAcwB0AC4AcAByAG8AagBlAGMAdABAAGcAbQBhAGkAbAAuAGMAbwBtAABBawBoAGEA
ZABpAGoAYQBhAGkAdABtAHkAaABhAGMAaABlAG0AMgAwADAAMABAAGcAbQBhAGkAbAAuAGMAbwBt
AAA3RABhAHQAYQBiAGEAcwBlACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAdQByAGUA
AICRVABoAGUAIABmAG8AbABsAG8AdwBpAG4AZwAgAGUAcgByAG8AcgAgAG8AYwBjAHUAcgByAGUA
ZAAgAHcAaABpAGwAZQAgAGUAcwB0AGEAYgBsAGkAcwBoAGkAbgBnACAAYQAgAGQAYQB0AGEAYgBh
AHMAZQAgAGMAbwBuAG4AZQBjAHQAaQBvAG4AOgAKAAoAAB1zAG0AdABwAC4AZwBtAGEAaQBsAC4A
YwBvAG0AACFkAHIAZQBxAHkAcwBzAGgAagB3AGUAYQBnAGUAaQBkAABHRgBhAGkAbABlAGQAIAB0
AG8AIABzAGUAbgBkACAAZQBtAGEAaQBsACAAbgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AOgAgAAAP
QwBvAGwAdQBtAG4AcwAAF0MATwBMAFUATQBOAF8ATgBBAE0ARQAAE0QAQQBUAEEAXwBUAFkAUABF
AACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABz
AGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAA
dABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0
ACAAMAAAH0MAbwBuAG4AZQB4AGkAbwBuAFMAdAByAGkAbgBnAAATQwBvAG4AUwB0AHIAaQBuAGcA
ABlEAGEAdABhAEIAYQBzAGUATgBhAG0AZQAAD0YAdQBsAGwAUwBlAHQAAAVJAGQAABVMAGEAcwB0
AFMAZQByAHYAZQByAAAHcAB3AGQAABFRAHUAZQByAHkAVgBhAGwAABVTAGUAcgB2AGUAcgBOAGEA
bQBlAAATVABhAGIAbABlAE4AYQBtAGUAABNVAHMAZQByAE4AYQBtAGUAMQAAcVMAQwBfADMAZAA2
ADQAZABjAGQANQAxADEAMQA1ADQANAAyADEAOAAxADIAZQAxADEAZABhADIAZABiADkAZAA2ADYA
NgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA6UXqp/Gzv0WAmc6f
MKUGwwAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgIkGBwMOEj0OAyAADgUAAg4ODgUgABGAnQwH
Bg4OEjkSQRJFEj0FAAICDg4GIAIBDhI5BCAAEkUEIAEcDgQAAQwcAyAAAgUHAg4SQQUgABKAqQcg
AhKArQ4cAyAACAsHBg4ODhJJEk0SPQcgBAEODg4OBSACAQ4IBCABAQIFIAIBDg4GIAEBEoC5BSAB
ARJJEQcJDhI5EjkSJBJRDg4SVRIkByACElkOHQ4FIAASgL0EIAASUQMgABwSBwkSORJZAhJREl0S
LA4SKBJVBhUSaQESKAcVEoDFARIoBSACARwYCyABEwAVEoDFARMACSADARJxHQgSdQUgAgEIHAMH
AQgGAAIIEnUOBSABHQgIBSAAEoDRBiABEoDVHAUAABKA2QYgARwSgN0IAAESgOURgOkFIAASgO0H
IAIBDhKA7QUgAQETAAi3elxWGTTgiQiJhF3NgIDMkQMGEjkCBgIDBhIUAwYSGAMGEgwDBhJ5BAYS
gIEEBhKAhQMGEiAHBhUSaQESKAIGDgUgARIkDgggAwISOQ4SJAQgAQEMCyAEAQgdCB0ScRJ1BSAB
ARJ5BQAAEoCBBQAAEoCFBgABARKAhQQAABIgAwAAAQggABUSaQESKAkgAQEVEmkBEigFIAECEigD
KAAMAygAAgMoAA4DKAAcAygACAUIABKAgQUIABKAhQQIABIgCCgAFRJpARIoCAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18zZDY0ZGNkNTExMTU0
NDIxODEyZTExZGEyZGI5ZDY2NgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIzAABJAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJh
bWV3b3JrIDQuNwQBAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAJRMAAAAAAAAAAAAAK5MAAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAACgTAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwDAAAA
AAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAa
AAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAA
AAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADMAZAA2
ADQAZABjAGQANQAxADEAMQA1ADQANAAyADEAOAAxADIAZQAxADEAZABhADIAZABiADkAZAA2ADYA
NgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAAB
AEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMwBkADYANABkAGMAZAA1ADEAMQAxADUA
NAA0ADIAMQA4ADEAMgBlADEAMQBkAGEAMgBkAGIAOQBkADYANgA2AC4AZABsAGwAAABIABIAAQBM
AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIA
MAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAzAGQANgA0AGQAYwBkADUA
MQAxADEANQA0ADQAMgAxADgAMQAyAGUAMQAxAGQAYQAyAGQAYgA5AGQANgA2ADYALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMwBkADYANABkAGMAZAA1ADEA
MQAxADUANAA0ADIAMQA4ADEAMgBlADEAMQBkAGEAMgBkAGIAOQBkADYANgA2AAAANAAIAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUA
bQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADAPAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_3d64dcd511154421812e11da2db9d666</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ConnexionString,User::ConString,User::DataBaseName,User::FullSet,User::Id,User::LastServer,User::pwd,User::QueryVal,User::ServerName,User::TableName,User::UserName1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">2A</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[Detail]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[Detail]"
                          name="Detail" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[State]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[State]"
                          name="State" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[Context]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[Context]"
                          name="Context" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[servername]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[servername]"
                          name="servername" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[Description]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0].Columns[Description]"
                          name="Description" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Staging State.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Staging State\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Staging State\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Tâche de flux de données"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{BBF257FB-34D4-43FA-91FE-FA72921C2786}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Tâche de flux de données"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel"
                  componentClassID="Microsoft.ExcelDestination"
                  contactInfo="Destination Excel;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;0"
                  description="Destination Excel"
                  name="Destination Excel"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset">Sheet1$</property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 2]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 2]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Inputs[Entrée de destination Excel]"
                      errorOrTruncationOperation="Insérer"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrée de destination Excel">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Inputs[Entrée de destination Excel].Columns[test]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="test"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Inputs[Entrée de destination Excel].ExternalColumns[test]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie de source OLE DB].Columns[test]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Inputs[Entrée de destination Excel].Columns[testdescription]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="testdescription"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Inputs[Entrée de destination Excel].ExternalColumns[testdescription]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie de source OLE DB].Columns[testdescription]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Inputs[Entrée de destination Excel].ExternalColumns[test]"
                          dataType="wstr"
                          length="255"
                          name="test" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Inputs[Entrée de destination Excel].ExternalColumns[testdescription]"
                          dataType="wstr"
                          length="255"
                          name="testdescription" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Outputs[Sortie d'erreur de destination Excel]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de destination Excel"
                      synchronousInputId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Inputs[Entrée de destination Excel]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Outputs[Sortie d'erreur de destination Excel].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Outputs[Sortie d'erreur de destination Excel].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Outputs[Sortie d'erreur de destination Excel].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Outputs[Sortie d'erreur de destination Excel].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="Source OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;7"
                  description="Source OLE DB"
                  name="Source OLE DB"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable">User::TableName</property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="Variable contenant la commande SQL à exécuter."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">1</property>
                    <property
                      dataType="System.String"
                      description="Mappages entre les paramètres de la commande SQL et les variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.testconn]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.testconn]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie de source OLE DB]"
                      name="Sortie de source OLE DB">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie de source OLE DB].Columns[test]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie de source OLE DB].ExternalColumns[test]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie de source OLE DB].Columns[test]"
                          name="test"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie de source OLE DB].Columns[testdescription]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie de source OLE DB].ExternalColumns[testdescription]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie de source OLE DB].Columns[testdescription]"
                          name="testdescription"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie de source OLE DB].ExternalColumns[test]"
                          dataType="nText"
                          name="test" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie de source OLE DB].ExternalColumns[testdescription]"
                          dataType="nText"
                          name="testdescription" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie d'erreur de source OLE DB]"
                      isErrorOut="true"
                      name="Sortie d'erreur de source OLE DB">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie d'erreur de source OLE DB].Columns[test]"
                          dataType="nText"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie d'erreur de source OLE DB].Columns[test]"
                          name="test" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie d'erreur de source OLE DB].Columns[testdescription]"
                          dataType="nText"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie d'erreur de source OLE DB].Columns[testdescription]"
                          name="testdescription" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie d'erreur de source OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie d'erreur de source OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie d'erreur de source OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie d'erreur de source OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Tâche de flux de données.Paths[Sortie de source OLE DB]"
                  endId="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel.Inputs[Entrée de destination Excel]"
                  name="Sortie de source OLE DB"
                  startId="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB.Outputs[Sortie de source OLE DB]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Tâche de flux de données 1"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{21ED5B30-2CBE-4427-B40E-CAEAF6A855D3}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Tâche de flux de données 1"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
                  description="Destination OLE DB"
                  name="Destination OLE DB"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset">[dbo].[test2]</property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.datawarehouse2.testconn]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.datawarehouse2.testconn]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                      errorOrTruncationOperation="Insérer"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrée de destination OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[testdescription]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="testdescription"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[testdescription]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 1\Script Component.Outputs[Outputcol].Columns[testdescription]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[test]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="test"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[test]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 1\Script Component.Outputs[Outputcol].Columns[test]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[test]"
                          dataType="nText"
                          name="test" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[testdescription]"
                          dataType="nText"
                          name="testdescription" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de destination OLE DB"
                      synchronousInputId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Inputs[Entrée de destination OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Tâche de flux de données 1\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Net.Mail;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    private SqlConnection connection;
    private bool skipConnection = false;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        // base.PreExecute();
        /*
         * Add your code here
         */

        // Retrieve the connection string from a variable
        //string connectionString = Variables.ConnexionString;



        // Create a new SqlConnection object
        //connection = new SqlConnection(connectionString);

        // Open the connection
        //connection.Open();

        // Create a new SqlConnection
        //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        // "Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;"
        // connection = new SqlConnection(connectionString);
        // connection.Open();
        // string query = "INSERT INTO test1 (test, testdescription) VALUES ('teest', 'deeesc')";

        //using (SqlCommand command = new SqlCommand(query, connection))
        // {

        //command.Parameters.AddWithValue("@Value1", Row.Column1);
        //command.Parameters.AddWithValue("@Value2", Row.Column2);
        //command.ExecuteNonQuery();
        //}
        base.PreExecute();

        string variableCon = Variables.ConString;

        // Create a new SqlConnection
        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(variableCon);

        try
        {
            connection.Open();
            // Connection has been established successfully
        }
        catch (Exception ex)
        {
            // Handle the connection error
            // Log the error or take any necessary actions

            skipConnection = true;
            // Log the error and move to the next connection
            string errorLog = "Failed to establish a database connection: " + ex.Message;
            // Log the error to a table or file
            // You can use a SQL command or any other logging mechanism here
            // For example:
            LogErrorToTable(errorLog);
            SendEmailNotification(errorLog);


            //connection.Close();
            //throw new Exception("Failed to establish a database connection: " + ex.Message);
        }


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (connection.State == ConnectionState.Open)
            connection.Close();
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        // string variableValue = Variables.VariableName;

        // Use the connection to execute SQL queries and retrieve data
        /*using (SqlCommand command = new SqlCommand("SELECT * FROM test1", connection))
        {
            // Perform additional setup for the command if needed

            // Execute the query and retrieve the data
            using (SqlDataReader reader = command.ExecuteReader())
            {
                while (reader.Read())
                {
                    // Process the data and populate the output rows
                    OutputcolBuffer.AddRow();
                    OutputcolBuffer.test = reader["test"].ToString();
                    OutputcolBuffer.testdescription = reader["testdescription"].ToString();
                }
            }
        }
        */

        if (skipConnection)
            return; // Skip executing the query for this connection

        try
        {
            // Example: Execute a SQL query using the connection
             string variableTable = Variables.TableName;
/*
             string query = "INSERT INTO "+ variableTable+"(test, testdescription) VALUES ('teestt', 'deeesc')";


             using (SqlCommand command = new SqlCommand(query, connection))
             {
                 command.ExecuteNonQuery();
             }*/
            using (SqlCommand command = new SqlCommand("SELECT test, testdescription FROM "+ variableTable, connection))
            {
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        // Stockez les valeurs dans les variables d'écriture
                        OutputcolBuffer.AddRow();
                        OutputcolBuffer.test = reader["test"].ToString();
                        OutputcolBuffer.testdescription = reader["testdescription"].ToString();
                    }
                }
            }
        }
        catch (Exception ex)
        {
            // Handle the database operation error
            // Log the error or take any necessary actions
            throw new Exception("Failed to execute database operation: " + ex.Message);
        }

    }


    private void LogErrorToTable(string errorLog)
    {
        // Implement your logging mechanism here
        // For example, execute a SQL command to insert the error log into a table

        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(connectionString);
        connection.Open();
        
        string logQuery = "INSERT INTO ErrorLogTable (ErrorMessage) VALUES (@ErrorMessage)";

        using (SqlCommand command = new SqlCommand(logQuery, connection))
        {
            command.Parameters.AddWithValue("@ErrorMessage", errorLog);
            command.ExecuteNonQuery();
        }
        

        
    }


    private void SendEmailNotification(string errorLog)
    {
        // Configure email settings
        string fromAddress = "khadijatest.project@gmail.com";
        string toAddress = "khadijaaitmyhachem2000@gmail.com";
        string subject = "Database Connection Failure";
        string body = "The following error occurred while establishing a database connection:\n\n" + errorLog;

        // Create and configure the email message
        MailMessage message = new MailMessage(fromAddress, toAddress, subject, body);

        // Send the email using SMTP client
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com", 587);
        smtpClient.EnableSsl = true;
        smtpClient.UseDefaultCredentials = false;
        smtpClient.Credentials = new System.Net.NetworkCredential("khadijatest.project@gmail.com", "dreqysshjweageid");

        try
        {
            smtpClient.Send(message);
        }
        catch (Exception ex)
        {
            throw new Exception("Failed to send email notification: " + ex.Message);
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_59fbf74ceec64a1cb145e05b47294748.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{65bc5189-7e9a-4437-a4e0-6429759d3b9b}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_59fbf74ceec64a1cb145e05b47294748</RootNamespace>
    <AssemblyName>SC_59fbf74ceec64a1cb145e05b47294748</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_59fbf74ceec64a1cb145e05b47294748" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class OutputcolBuffer: ScriptBuffer

{
    public OutputcolBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String testdescription
    {
        set
        {
            this[0] = value;
        }
    }
    public bool testdescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String test
    {
        set
        {
            this[1] = value;
        }
    }
    public bool test_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public OutputcolBuffer OutputcolBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != OutputcolBuffer)
        {
            OutputcolBuffer.SetEndOfRowset();
            OutputcolBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Outputcol"))
            {
                OutputcolBuffer = new OutputcolBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConnexionString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConnexionString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ConString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DataBaseName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DataBaseName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Object FullSet
    {
        get
        {
            return (Object)(ParentComponent.ReadOnlyVariables["FullSet"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Id
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String LastServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["LastServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String pwd
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["pwd"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String QueryVal
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["QueryVal"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ServerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ServerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TableName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TableName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean Used
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["Used"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UserName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UserName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UserName1
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UserName1"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_59fbf74ceec64a1cb145e05b47294748.Properties.Settings.get_Default():SC_59fbf74ceec64a1cb145e05b47294748.Properties.Sett" +
    "ings")]

namespace SC_59fbf74ceec64a1cb145e05b47294748.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_59fbf74ceec64a1cb145e05b47294748</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_59fbf74ceec64a1cb145e05b47294748</msb:DisplayName>
    <msb:ProjectId>{49EB0CCD-AFCA-4F61-9816-D0727A7BBEAD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_59fbf74ceec64a1cb145e05b47294748.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_59fbf74ceec64a1cb145e05b47294748")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_59fbf74ceec64a1cb145e05b47294748")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_59fbf74ceec64a1cb145e05b47294748.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_59fbf74ceec64a1cb145e05b47294748.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_59fbf74ceec64a1cb145e05b47294748.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_59fbf74ceec64a1cb145e05b47294748.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_59fbf74ceec64a1cb145e05b47294748.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_59fbf74ceec64a1cb145e05b47294748.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
NwAACnQhAAABKpYCewcAAARvNAAACnKYBQBwbzUAAAooNgAACm83AAAKdCEAAAEqlgJ7BwAABG80
AAAKcq4FAHBvNQAACig2AAAKbzcAAAp0IQAAASqWAnsHAAAEbzQAAApywgUAcG81AAAKKDYAAApv
NwAACqUwAAABKpYCewcAAARvNAAACnLMBQBwbzUAAAooNgAACm83AAAKdCEAAAEqlgJ7BwAABG80
AAAKct4FAHBvNQAACig2AAAKbzcAAAp0IQAAASoeAigzAAAKKq5+CAAABC0ecvIFAHDQBwAAAig4
AAAKbzkAAApzOgAACoAIAAAEfggAAAQqGn4JAAAEKh4CgAkAAAQqGn4KAAAEKh4CKDsAAAoqLnMo
AAAGgAoAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABICAAAI34AALQI
AADwCQAAI1N0cmluZ3MAAAAApBIAAGQGAAAjVVMACBkAABAAAAAjR1VJRAAAABgZAAA4AgAAI0Js
b2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAMwAAAAgAAAAKAAAAKQAAABAAAAA7AAAA
EAAAAAUAAAAEAAAAFAAAABUAAAABAAAABgAAAAEAAAAAAIgEAQAAAAAABgAZAysHBgCtAysHBgBl
AhgHDwCfBwAABgCSAm4FBgD8Am4FBgDdAm4FBgCUA24FBgA5A24FBgBSA24FBgCpAm4FBgDEAvUD
CgBtA4oBDgCkBdAIBgDcBQMFDgDPANAIDgBhBtAIEgADAXgEEgDmCHgECgCcBooBFgB9BooBCgAZ
BooBCgAPCYoBBgCXCAMFBgBIAhgHBgCtBksHBgANBlkFEgAIAmIEEgB5AmIEEgDYAUQFBgAtAisH
DgCXBfoFBgAzBAMFDgAdAocADgBUBvoFBgAfAQMFDgCABdAIDgDlBtAIDgDFAPoFEgBQBJ4IEgBm
CZ4IBgDMBQMFGgARAL0GGgABAL0GXwCZCQAAGgAiAL0GBgBIAAMFBgAWBQMFBgCrAQMFBgArAQMF
BgDUCW4FAAAAAHIAAAAAAAEAAQABABAAIwUAABAAAQABAAEAEACMBgAAUQADAAcAAQAQAPEIAABd
AAMADwABABAASwgAAGEABgAUAAEAEADpBwAAYQAHABUAAAAQAFIHrgdhAAgAIwAAARAAGAiuB3kA
CgAnAAEAwQX/AAEAsgUDAQYASwgGAQYA6QcKAQYAjAYOAQEA/wgSAQEA/wgSAREACgUWAREAyAEa
AREA5wAeAVAgAAAAAMYAywMGAAEAxCAAAAAAxgDWAwYAAQDoIAAAAADGAHwIBgABANAhAAAAAIEA
DwEQAAEAQCIAAAAAgQAuBRAAAgDgIgAAAACGGAEHBgADAOgiAAAAAIYYAQebAAMA8yIAAAAAhgjm
BRAABgD9IgAAAACGCLAEgwAHABQjAAAAAIYIPAkQAAgAHiMAAAAAhgjLBIMACQA1IwAAAACGAMkJ
BgAKAD0jAAAAAIYAtQgGAAoARSMAAAAAhgC4CE0ACgBNIwAAAACGGAEHBgAKAG0jAAAAAMYBbggG
AAoAbyMAAAAAgQCoAAYACgCMIwAAAADGAHkJIgEKAG0jAAAAAMYBfAgGAA4A4SMAAAAAhhgBBy4B
DgDwIwAAAACGGAEHLgEPAP8jAAAAAIYIHQQiABAAJSQAAAAAhggPBCIAEABLJAAAAACGCF0BIgAQ
AHEkAAAAAIYIqQg0ARAAkiQAAAAAhgicAGUAEAC4JAAAAACGCPIGIgAQAN4kAAAAAIYI3wAiABAA
BCUAAAAAhghDBCIAEAAqJQAAAACGCHsBIgAQAFAlAAAAAIYITwEiABAAdiUAAAAAhgi8AE0AEACc
JQAAAACGCG4BIgAQAMIlAAAAAIYIOgAiABAA6CUAAAAAgxgBBwYAEADwJQAAAACTCKkGOAEQABwm
AAAAAJMIsAE9ARAAIyYAAAAAkwi8AUIBEAArJgAAAACWCMQISAERADImAAAAAIYYAQcGABEAOiYA
AAAAkRgHB00BEQAAAAEAOgQAAAEAOgQAAAEAogYAAAIA8wcAAAMAJwYAAAEA7wMAAAEA7wMAAAEA
7wMAAAEA7wMAAAEAdAgAAAIADgcAAAMAVwgAAAQAJwYAAAEAFQkAAAEAFQkAAAEA7wMJAAEHAQAR
AAEHBgAZAAEHCgApAAEHEAAxAAEHEAA5AAEHEABBAAEHEABJAAEHEABRAAEHEABZAAEHEABhAAEH
EABpAAEHBgDJAAEHBgDpAAEHFQD5AAEHBgC5AMsDBgBxAAEHEAABAR4FBgB5APcAIgAJAZAIJgC5
ANYDBgABAf4BLAABAfABBgCBAAEHPACBAG8GQwAZAfEESADBADEEIgAZAaMATQAhAfYBBgB5AAEH
EACBAF8IVwApAeIDXQA5Ad0JZQCRAAEHdQCZAAEHfQCZAOMEgwCZADEIgwBBAQEHiACZACEIjgCZ
ANoAlQChAAEHmwChAPoEpQChANsEAQBRAQEHEAChAMkJBgChALUIBgChALgITQC5AAEHBgC5AHsA
rwC5AAcItgDBAAEHBgC5AN0HvABZAfEEwgC5ALQJyQBhAYUJzwCJAT0B1gCJAdAJ3wDRAAEH5QDx
AAEHBgAuAAsAcAEuABMAeQEuABsAmAEuACMAoQEuACsAygEuADMAygEuADsAygEuAEMAoQEuAEsA
0AEuAFMAygEuAFsA5wFDAGMAMQLjAGsAMQJBAXsAMQJJAnMAmAFpAnMAmAEbADIAUQBpAKsAAwAB
AAYABQAHABIACAAUAAAA6gVRAQAAtARVAQAAQAlRAQAAzwRVAQAAIQRRAQAAEwRRAQAAYQFRAQAA
rQhZAQAAoABdAQAA9gZRAQAA4wBRAQAARwRRAQAAfwFRAQAAUwFRAQAAwABVAQAAcgFRAQAAPgBR
AQAArQZhAQAA0AFmAQAAyAhrAQEACAADAAEACQAFAAEACgAHAAEACwAJAAIAFgALAAIAFwANAAIA
GAAPAAIAGQARAAIAGgATAAIAGwAVAAIAHAAXAAIAHQAZAAIAHgAbAAIAHwAdAAIAIAAfAAIAIQAh
AAIAIgAjAAIAJAAlAAIAJQAnAAEAJgAnAAIAJwApAASAAAABAAAAAAAAAAAAAAAAAE4AAAAEAAAA
AAAAAAAAAADtAJMAAAAAAA8AAAAAAAAAAAAAAPYAHwkAAAAABAAAAAAAAAAAAAAA7QCHAAAAAAAE
AAAAAAAAAAAAAADtAAMFAAAAAA8AAAAAAAAAAAAAAPYARQkAAAAADwAAAAAAAAAAAAAA9gAxBgAA
AAAAAAAAAQAAAFwHAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZh
bHVhdG9yQ29udGV4dDEwMABnZXRfVXNlck5hbWUxAEludDMyAFNDXzU5ZmJmNzRjZWVjNjRhMWNi
MTQ1ZTA1YjQ3Mjk0NzQ4ADxNb2R1bGU+AEdldE91dHB1dElEAFN5c3RlbS5EYXRhAG1zY29ybGli
AGdldF9JZABSZWFkAE1hcmtPdXRwdXRzRmluaXNoZWQAZ2V0X1VzZWQARGJDb21tYW5kAFNxbENv
bW1hbmQAU2VuZABnZXRfcHdkAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBNYWlsTWVzc2Fn
ZQBMb2dFcnJvclRvVGFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZy
b21IYW5kbGUAZ2V0X1RhYmxlTmFtZQBnZXRfRGF0YUJhc2VOYW1lAGdldF9Vc2VyTmFtZQBnZXRf
U2VydmVyTmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBD
bG9zZQBEaXNwb3NlAGdldF9TdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb25uZWN0aW9uU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0
dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50
RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBBZGRXaXRoVmFsdWUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBnZXRfQ29uU3RyaW5nAGdldF9Db25uZXhpb25T
dHJpbmcAVG9TdHJpbmcAZXJyb3JMb2cAZ2V0X1F1ZXJ5VmFsAE5ldHdvcmtDcmVkZW50aWFsAFN5
c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0uTmV0Lk1haWwAU0NfNTlmYmY3NGNlZWM2NGExY2Ix
NDVlMDViNDcyOTQ3NDguZGxsAHNldF90ZXN0ZGVzY3JpcHRpb25fSXNOdWxsAHNldF90ZXN0X0lz
TnVsbABTZXROdWxsAHNldF9FbmFibGVTc2wAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291
cmNlTWFuAEJvb2xlYW4AT3BlbgBTY3JpcHRNYWluAFNlbmRFbWFpbE5vdGlmaWNhdGlvbgBTeXN0
ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBT
cWxQYXJhbWV0ZXJDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAHNraXBDb25u
ZWN0aW9uAGNvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBzZXRfdGVzdGRlc2Ny
aXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1
dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAERiRGF0YVJlYWRlcgBTcWxE
YXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIAUGlwZWxpbmVCdWZmZXIAT3V0cHV0Y29sQnVmZmVyAFNj
cmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUuV3JhcHBlcgBTcWxQYXJhbWV0ZXIAZ2V0X0xhc3RTZXJ2ZXIALmN0b3IALmNjdG9yAE91
dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
cwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzU5ZmJmNzRjZWVjNjRhMWNiMTQ1ZTA1YjQ3Mjk0NzQ4LlBy
b3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ181OWZiZjc0Y2Vl
YzY0YTFjYjE0NWUwNWI0NzI5NDc0OC5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBC
dWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAc2V0X0NyZWRlbnRp
YWxzAHNldF9Vc2VEZWZhdWx0Q3JlZGVudGlhbHMAQ29ubmVjdGlvbnMAQnVmZmVycwBnZXRfUGFy
YW1ldGVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AE9iamVjdABT
eXN0ZW0uTmV0AGdldF9GdWxsU2V0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFN5c3RlbS5E
YXRhLlNxbENsaWVudABTbXRwQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNj
cmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AHNldF90ZXN0AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElDcmVkZW50aWFsc0J5SG9zdABQcmltZU91dHB1
dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFs
dWF0b3JDb250ZXh0AEFkZFJvdwBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AAAAAABXRgBh
AGkAbABlAGQAIAB0AG8AIABlAHMAdABhAGIAbABpAHMAaAAgAGEAIABkAGEAdABhAGIAYQBzAGUA
IABjAG8AbgBuAGUAYwB0AGkAbwBuADoAIAAARVMARQBMAEUAQwBUACAAdABlAHMAdAAsACAAdABl
AHMAdABkAGUAcwBjAHIAaQBwAHQAaQBvAG4AIABGAFIATwBNACAAAAl0AGUAcwB0AAAfdABlAHMA
dABkAGUAcwBjAHIAaQBwAHQAaQBvAG4AAE1GAGEAaQBsAGUAZAAgAHQAbwAgAGUAeABlAGMAdQB0
AGUAIABkAGEAdABhAGIAYQBzAGUAIABvAHAAZQByAGEAdABpAG8AbgA6ACAAAIDNRABhAHQAYQAg
AFMAbwB1AHIAYwBlAD0ARABFAFMASwBUAE8AUAAtADUANwBNAEIAMgBDAE4AXABJAE4AVABFAEwA
QwBJAEEAOwBJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwA9AHMAZQByAHYAZQByAEkAbgBm
AG8AOwBVAHMAZQByACAASQBEAD0AdABlAHMAdABjAG8AbgBuADsAUABhAHMAcwB3AG8AcgBkAD0A
aQBuAHQAZQBsAGMAaQBhADIAMAAyADMAAX9JAE4AUwBFAFIAVAAgAEkATgBUAE8AIABFAHIAcgBv
AHIATABvAGcAVABhAGIAbABlACAAKABFAHIAcgBvAHIATQBlAHMAcwBhAGcAZQApACAAVgBBAEwA
VQBFAFMAIAAoAEAARQByAHIAbwByAE0AZQBzAHMAYQBnAGUAKQAAG0AARQByAHIAbwByAE0AZQBz
AHMAYQBnAGUAADtrAGgAYQBkAGkAagBhAHQAZQBzAHQALgBwAHIAbwBqAGUAYwB0AEAAZwBtAGEA
aQBsAC4AYwBvAG0AAEFrAGgAYQBkAGkAagBhAGEAaQB0AG0AeQBoAGEAYwBoAGUAbQAyADAAMAAw
AEAAZwBtAGEAaQBsAC4AYwBvAG0AADdEAGEAdABhAGIAYQBzAGUAIABDAG8AbgBuAGUAYwB0AGkA
bwBuACAARgBhAGkAbAB1AHIAZQAAgJFUAGgAZQAgAGYAbwBsAGwAbwB3AGkAbgBnACAAZQByAHIA
bwByACAAbwBjAGMAdQByAHIAZQBkACAAdwBoAGkAbABlACAAZQBzAHQAYQBiAGwAaQBzAGgAaQBu
AGcAIABhACAAZABhAHQAYQBiAGEAcwBlACAAYwBvAG4AbgBlAGMAdABpAG8AbgA6AAoACgAAHXMA
bQB0AHAALgBnAG0AYQBpAGwALgBjAG8AbQAAIWQAcgBlAHEAeQBzAHMAaABqAHcAZQBhAGcAZQBp
AGQAAEdGAGEAaQBsAGUAZAAgAHQAbwAgAHMAZQBuAGQAIABlAG0AYQBpAGwAIABuAG8AdABpAGYA
aQBjAGEAdABpAG8AbgA6ACAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEA
bgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAg
AGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEA
ZAAuAAATTwB1AHQAcAB1AHQAYwBvAGwAAB9DAG8AbgBuAGUAeABpAG8AbgBTAHQAcgBpAG4AZwAA
E0MAbwBuAFMAdAByAGkAbgBnAAAZRABhAHQAYQBCAGEAcwBlAE4AYQBtAGUAAA9GAHUAbABsAFMA
ZQB0AAAFSQBkAAAVTABhAHMAdABTAGUAcgB2AGUAcgAAB3AAdwBkAAARUQB1AGUAcgB5AFYAYQBs
AAAVUwBlAHIAdgBlAHIATgBhAG0AZQAAE1QAYQBiAGwAZQBOAGEAbQBlAAAJVQBzAGUAZAAAEVUA
cwBlAHIATgBhAG0AZQAAE1UAcwBlAHIATgBhAG0AZQAxAABxUwBDAF8ANQA5AGYAYgBmADcANABj
AGUAZQBjADYANABhADEAYwBiADEANAA1AGUAMAA1AGIANAA3ADIAOQA0ADcANAA4AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABUzFJJBGbnQospGmhzXDg0AAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFxBgcDDhI9DgMgAA4FAAIODg4FIAARgIkJBwQOEkESRRI9BiAC
AQ4SOQQgABJFBCABHA4DIAACBQcCDhJBBSAAEoCVByACEoCZDhwDIAAICwcGDg4OEkkSTRI9ByAE
AQ4ODg4FIAIBDggEIAEBAgUgAgEODgYgAQESgKUFIAEBEkkJIAMBElUdCBJZBSACAQgcAwcBCAYA
AggSWQ4FIAEdCAgFIAASgK0GIAESgLEcBQAAEoC1BiABHBKAuQgAARKAxRGAyQUgABKAzQcgAgEO
EoDNCLd6XFYZNOCJCImEXc2AgMyRAwYSOQIGAgMGEhQDBhIYAwYSDAMGEl0DBhJpAwYSbQMGEiAL
IAQBCB0IHRJVElkFIAEBEl0DIAAcBAAAEmkEAAASbQUAAQESbQQAABIgAwAAAQMoAA4DKAACAygA
HAMoAAgECAASaQQIABJtBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NDXzU5ZmJmNzRjZWVjNjRhMWNiMTQ1ZTA1YjQ3Mjk0NzQ4AAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMjMAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAAB4QgAAAAAAAAAAAACSQgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhEIAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
NQA5AGYAYgBmADcANABjAGUAZQBjADYANABhADEAYwBiADEANAA1AGUAMAA1AGIANAA3ADIAOQA0
ADcANAA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA1ADkAZgBiAGYANwA0AGMAZQBl
AGMANgA0AGEAMQBjAGIAMQA0ADUAZQAwADUAYgA0ADcAMgA5ADQANwA0ADgALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADUAOQBmAGIAZgA3
ADQAYwBlAGUAYwA2ADQAYQAxAGMAYgAxADQANQBlADAANQBiADQANwAyADkANAA3ADQAOAAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA1ADkAZgBiAGYANwA0
AGMAZQBlAGMANgA0AGEAMQBjAGIAMQA0ADUAZQAwADUAYgA0ADcAMgA5ADQANwA0ADgAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAKQyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_59fbf74ceec64a1cb145e05b47294748</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ConnexionString,User::ConString,User::DataBaseName,User::FullSet,User::Id,User::LastServer,User::pwd,User::QueryVal,User::ServerName,User::TableName,User::Used,System::UserName,User::UserName1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">AB</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Tâche de flux de données 1\Script Component.Outputs[Outputcol]"
                      hasSideEffects="true"
                      name="Outputcol">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 1\Script Component.Outputs[Outputcol].Columns[testdescription]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 1\Script Component.Outputs[Outputcol].Columns[testdescription]"
                          name="testdescription" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 1\Script Component.Outputs[Outputcol].Columns[test]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 1\Script Component.Outputs[Outputcol].Columns[test]"
                          name="test" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Tâche de flux de données 1.Paths[Outputcol]"
                  endId="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                  name="Outputcol"
                  startId="Package\Foreach Loop Container\Tâche de flux de données 1\Script Component.Outputs[Outputcol]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Tâche de flux de données 2"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tâche de flux de données"
          DTS:Disabled="True"
          DTS:DTSID="{7651FB44-10B5-4160-AF7B-6A40BB7AF083}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Tâche de flux de données 2"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Colonne dérivée;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;0"
                  description="Crée de nouvelles valeurs de colonne en appliquant des expressions aux colonnes d'entrée de transformation. Créez de nouvelles colonnes ou remplacez celles qui existent déjà. Par exemple, concaténez les valeurs de la colonne 'prénom' et de la colonne 'nom' pour créer une colonne 'nom complet'."
                  name="Colonne dérivée"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Inputs[Entrée de colonne dérivée]"
                      description="Entrée de la transformation de colonnes dérivées"
                      name="Entrée de colonne dérivée">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Inputs[Entrée de colonne dérivée].Columns[CustomerID]"
                          cachedDataType="r4"
                          cachedName="CustomerID"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CustomerID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Inputs[Entrée de colonne dérivée].Columns[FirstAgent]"
                          cachedDataType="r4"
                          cachedName="FirstAgent"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstAgent]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Outputs[Sortie de colonne dérivée]"
                      description="Sortie par défaut de la transformation de colonnes dérivées"
                      exclusionGroup="1"
                      name="Sortie de colonne dérivée"
                      synchronousInputId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Inputs[Entrée de colonne dérivée]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Outputs[Sortie de colonne dérivée].Columns[id_agent]"
                          dataType="wstr"
                          errorOrTruncationOperation="Calcul"
                          errorRowDisposition="FailComponent"
                          length="201"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Outputs[Sortie de colonne dérivée].Columns[id_agent]"
                          name="id_agent"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Expression de colonne dérivée"
                              name="Expression">(DT_WSTR,100)#{Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstAgent]} + "_" + (DT_WSTR,100)#{Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CustomerID]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Expression claire de colonne dérivée"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,100)FirstAgent + "_" + (DT_WSTR,100)CustomerID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée]"
                      description="Sortie d'erreur de la transformation de colonnes dérivées"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de colonne dérivée"
                      synchronousInputId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Inputs[Entrée de colonne dérivée]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Outputs[Sortie d'erreur de colonne dérivée].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
                  description="Destination OLE DB"
                  name="Destination OLE DB"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowset">[dbo].[ODCalls]</property>
                    <property
                      dataType="System.String"
                      description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="Commande SQL à exécuter."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie le mode utilisé pour accéder à la base de données."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      connectionManagerRefId="Package.ConnectionManagers[DESKTOP-57MB2CN\INTELCIA.StagingArea.testconn]"
                      description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                      errorOrTruncationOperation="Insérer"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrée de destination OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[ProActiveReason]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ProActiveReason"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ProActiveReason]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[ProActiveReason]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[EndReason]"
                          cachedDataType="r4"
                          cachedName="EndReason"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[EndReason]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[EndReason]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[AgentListen]"
                          cachedDataType="r4"
                          cachedName="AgentListen"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AgentListen]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[AgentListen]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[EndByAgent]"
                          cachedDataType="r4"
                          cachedName="EndByAgent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[EndByAgent]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[EndByAgent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallStatusDetail]"
                          cachedDataType="r4"
                          cachedName="CallStatusDetail"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallStatusDetail]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallStatusDetail]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallStatusNum]"
                          cachedDataType="r4"
                          cachedName="CallStatusNum"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallStatusNum]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallStatusNum]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallStatusGroup]"
                          cachedDataType="r4"
                          cachedName="CallStatusGroup"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallStatusGroup]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallStatusGroup]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[LastTransfer]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="LastTransfer"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastTransfer]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastTransfer]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[LastAgent]"
                          cachedDataType="r4"
                          cachedName="LastAgent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastAgent]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastAgent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[FirstAgent]"
                          cachedDataType="r4"
                          cachedName="FirstAgent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FirstAgent]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstAgent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[InitPriority]"
                          cachedDataType="r4"
                          cachedName="InitPriority"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[InitPriority]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[InitPriority]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[LastQueue]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="LastQueue"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastQueue]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastQueue]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[FirstQueue]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="FirstQueue"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FirstQueue]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstQueue]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[LastIVR]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="LastIVR"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastIVR]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastIVR]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[FirstIVR]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="FirstIVR"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FirstIVR]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstIVR]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Abandon]"
                          cachedDataType="r4"
                          cachedName="Abandon"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Abandon]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Abandon]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Overflow]"
                          cachedDataType="r4"
                          cachedName="Overflow"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Overflow]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Overflow]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[NoAgent]"
                          cachedDataType="r4"
                          cachedName="NoAgent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[NoAgent]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[NoAgent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Closed]"
                          cachedDataType="r4"
                          cachedName="Closed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Closed]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Closed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[LastVirtualCamp]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="LastVirtualCamp"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastVirtualCamp]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastVirtualCamp]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[LastCampaign]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="LastCampaign"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastCampaign]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastCampaign]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[FirstCampaign]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="FirstCampaign"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FirstCampaign]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstCampaign]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[OverflowDuration]"
                          cachedDataType="r4"
                          cachedName="OverflowDuration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[OverflowDuration]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[OverflowDuration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[RerouteDuration]"
                          cachedDataType="r4"
                          cachedName="RerouteDuration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RerouteDuration]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[RerouteDuration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[WrapupDuration]"
                          cachedDataType="r4"
                          cachedName="WrapupDuration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WrapupDuration]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[WrapupDuration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[ConvDuration]"
                          cachedDataType="r4"
                          cachedName="ConvDuration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ConvDuration]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[ConvDuration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[TotalWaitDuration]"
                          cachedDataType="r4"
                          cachedName="TotalWaitDuration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[TotalWaitDuration]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[TotalWaitDuration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[WaitDuration]"
                          cachedDataType="r4"
                          cachedName="WaitDuration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WaitDuration]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[WaitDuration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[IvrDuration]"
                          cachedDataType="r4"
                          cachedName="IvrDuration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[IvrDuration]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[IvrDuration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[AcceptDuration]"
                          cachedDataType="r4"
                          cachedName="AcceptDuration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AcceptDuration]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[AcceptDuration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallDuration]"
                          cachedDataType="r4"
                          cachedName="CallDuration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallDuration]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallDuration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Duration]"
                          cachedDataType="r4"
                          cachedName="Duration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Duration]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Duration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallUniversalTime]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CallUniversalTime"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallUniversalTime]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallUniversalTime]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CallType]"
                          cachedDataType="r4"
                          cachedName="CallType"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallType]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallType]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[Indice]"
                          cachedDataType="r4"
                          cachedName="Indice"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Indice]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Indice]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[CustomerID]"
                          cachedDataType="r4"
                          cachedName="CustomerID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CustomerID]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CustomerID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[ID_Tranche]"
                          cachedDataType="r4"
                          cachedName="ID_Tranche"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ID_Tranche]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[ID_Tranche]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[ID]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[id_agent]"
                          cachedDataType="wstr"
                          cachedLength="201"
                          cachedName="id_agent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Id_DimAgen]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Outputs[Sortie de colonne dérivée].Columns[id_agent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[servernamee]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="servernamee"
                          externalMetadataColumnId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[servernamee]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ID]"
                          dataType="wstr"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CtiID]"
                          dataType="wstr"
                          length="255"
                          name="CtiID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CustomerID]"
                          dataType="r8"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Indice]"
                          dataType="r8"
                          name="Indice" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallType]"
                          dataType="r8"
                          name="CallType" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallUniversalTime]"
                          dataType="dbTimeStamp"
                          name="CallUniversalTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallLocalTime]"
                          dataType="wstr"
                          length="255"
                          name="CallLocalTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallUniversalTimeString]"
                          dataType="wstr"
                          length="255"
                          name="CallUniversalTimeString" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallLocalTimeString]"
                          dataType="wstr"
                          length="255"
                          name="CallLocalTimeString" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Duration]"
                          dataType="r8"
                          name="Duration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallDuration]"
                          dataType="r8"
                          name="CallDuration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AcceptDuration]"
                          dataType="r8"
                          name="AcceptDuration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[IvrDuration]"
                          dataType="r8"
                          name="IvrDuration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WaitDuration]"
                          dataType="r8"
                          name="WaitDuration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[TotalWaitDuration]"
                          dataType="r8"
                          name="TotalWaitDuration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ConvDuration]"
                          dataType="r8"
                          name="ConvDuration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WrapupDuration]"
                          dataType="r8"
                          name="WrapupDuration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RerouteDuration]"
                          dataType="r8"
                          name="RerouteDuration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[OverflowDuration]"
                          dataType="r8"
                          name="OverflowDuration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ANI]"
                          dataType="wstr"
                          length="255"
                          name="ANI" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DNIS]"
                          dataType="wstr"
                          length="255"
                          name="DNIS" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FirstCampaign]"
                          dataType="wstr"
                          length="255"
                          name="FirstCampaign" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FirstVirtualCamp]"
                          dataType="wstr"
                          length="255"
                          name="FirstVirtualCamp" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastCampaign]"
                          dataType="wstr"
                          length="255"
                          name="LastCampaign" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastVirtualCamp]"
                          dataType="wstr"
                          length="255"
                          name="LastVirtualCamp" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[UUI]"
                          dataType="wstr"
                          length="255"
                          name="UUI" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Memo]"
                          dataType="wstr"
                          length="255"
                          name="Memo" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AssociatedData]"
                          dataType="wstr"
                          length="255"
                          name="AssociatedData" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[OutTel]"
                          dataType="wstr"
                          length="255"
                          name="OutTel" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[OutDialed]"
                          dataType="wstr"
                          length="255"
                          name="OutDialed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[OutDisplayed]"
                          dataType="wstr"
                          length="255"
                          name="OutDisplayed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Closed]"
                          dataType="wstr"
                          length="50"
                          name="Closed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[NoAgent]"
                          dataType="wstr"
                          length="50"
                          name="NoAgent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Overflow]"
                          dataType="wstr"
                          length="50"
                          name="Overflow" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Abandon]"
                          dataType="wstr"
                          length="50"
                          name="Abandon" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FirstIVR]"
                          dataType="wstr"
                          length="255"
                          name="FirstIVR" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastIVR]"
                          dataType="wstr"
                          length="255"
                          name="LastIVR" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FirstQueue]"
                          dataType="wstr"
                          length="50"
                          name="FirstQueue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastQueue]"
                          dataType="wstr"
                          length="50"
                          name="LastQueue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[InitPriority]"
                          dataType="wstr"
                          length="50"
                          name="InitPriority" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[FirstAgent]"
                          dataType="wstr"
                          length="50"
                          name="FirstAgent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastAgent]"
                          dataType="wstr"
                          length="50"
                          name="LastAgent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[LastTransfer]"
                          dataType="wstr"
                          length="255"
                          name="LastTransfer" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallStatusGroup]"
                          dataType="wstr"
                          length="50"
                          name="CallStatusGroup" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallStatusNum]"
                          dataType="wstr"
                          length="50"
                          name="CallStatusNum" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[CallStatusDetail]"
                          dataType="wstr"
                          length="50"
                          name="CallStatusDetail" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Comments]"
                          dataType="wstr"
                          length="255"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ContactID]"
                          dataType="wstr"
                          length="255"
                          name="ContactID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[EndByAgent]"
                          dataType="wstr"
                          length="50"
                          name="EndByAgent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AgentListen]"
                          dataType="wstr"
                          length="50"
                          name="AgentListen" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[EndReason]"
                          dataType="wstr"
                          length="50"
                          name="EndReason" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[RefID]"
                          dataType="wstr"
                          length="255"
                          name="RefID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ProActiveReason]"
                          dataType="wstr"
                          length="255"
                          name="ProActiveReason" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[AdditionalInfo]"
                          dataType="wstr"
                          length="255"
                          name="AdditionalInfo" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[servername]"
                          dataType="nText"
                          name="servername" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[Id_DimAgen]"
                          dataType="wstr"
                          length="255"
                          name="Id_DimAgen" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[ID_Tranche]"
                          dataType="i4"
                          name="ID_Tranche" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Sortie d'erreur de destination OLE DB"
                      synchronousInputId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConnexionString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConnexionString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ConString
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ConString"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DataBaseName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DataBaseName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Object FullSet
    {
        get
        {
            return (Object)(ParentComponent.ReadOnlyVariables["FullSet"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Id
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String LastServer
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["LastServer"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String pwd
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["pwd"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String QueryVal
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["QueryVal"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ServerName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ServerName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TableName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TableName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean Used
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["Used"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UserName1
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UserName1"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Net.Mail;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    private SqlConnection connection;
    private bool skipConnection = false;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        // base.PreExecute();
        /*
         * Add your code here
         */

        // Retrieve the connection string from a variable
        //string connectionString = Variables.ConnexionString;



        // Create a new SqlConnection object
        //connection = new SqlConnection(connectionString);

        // Open the connection
        //connection.Open();

        // Create a new SqlConnection
        //string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        // "Provider=MSOLEDBSQL;Server=DESKTOP-57MB2CN\\INTELCIA;Database=datawarehouse;UID=testconn;PWD=intelcia2023;"
        // connection = new SqlConnection(connectionString);
        // connection.Open();
        // string query = "INSERT INTO test1 (test, testdescription) VALUES ('teest', 'deeesc')";

        //using (SqlCommand command = new SqlCommand(query, connection))
        // {

        //command.Parameters.AddWithValue("@Value1", Row.Column1);
        //command.Parameters.AddWithValue("@Value2", Row.Column2);
        //command.ExecuteNonQuery();
        //}
        base.PreExecute();

        string variableCon = Variables.ConString;

        // Create a new SqlConnection
        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=datawarehouse;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(variableCon);

        try
        {
            connection.Open();
            // Connection has been established successfully
        }
        catch (Exception ex)
        {
            // Handle the connection error
            // Log the error or take any necessary actions

            skipConnection = true;
            // Log the error and move to the next connection
            string errorLog = "Failed to establish a database connection: " + ex.Message;
            // Log the error to a table or file
            // You can use a SQL command or any other logging mechanism here
            // For example:
            LogErrorToTable(errorLog);
            SendEmailNotification(errorLog);


            //connection.Close();
            //throw new Exception("Failed to establish a database connection: " + ex.Message);
        }


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (connection.State == ConnectionState.Open)
            connection.Close();
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        // string variableValue = Variables.VariableName;

        // Use the connection to execute SQL queries and retrieve data
        /* using (SqlCommand command = new SqlCommand("SELECT * FROM test1", connection))
         {
              // Perform additional setup for the command if needed

             // Execute the query and retrieve the data
             using (SqlDataReader reader = command.ExecuteReader())
             {
                while (reader.Read())
                 {
                     // Process the data and populate the output rows
                     Output0Buffer.AddRow();
                     Output0Buffer.test = reader["test"].ToString();
                     Output0Buffer.testdescription = reader["testdescription"].ToString();
                 }
             }
         }
         */

        if (skipConnection)
            return; // Skip executing the query for this connection

        try
        {
            // Example: Execute a SQL query using the connection
            string variableTable = Variables.TableName;
            string varserver = Variables.ServerName;





            /*
                         string query = "INSERT INTO "+ variableTable+"(test, testdescription) VALUES ('teestt', 'deeesc')";


                         using (SqlCommand command = new SqlCommand(query, connection))
                         {
                             command.ExecuteNonQuery();
                         }*/
            if (variableTable == "ODCalls")
            {
                string query = @"
    SELECT
        o.[ID],
        o.[CtiID],
        o.[CustomerID],
        o.[Indice],
        o.[CallType],
        o.[CallUniversalTime],
        o.[CallLocalTime],
        o.[CallUniversalTimeString],
        o.[CallLocalTimeString],
        o.[Duration],
        o.[CallDuration],
        o.[AcceptDuration],
        o.[IvrDuration],
        o.[WaitDuration],
        o.[TotalWaitDuration],
        o.[ConvDuration],
        o.[WrapupDuration],
        o.[RerouteDuration],
        o.[OverflowDuration],
        o.[ANI],
        o.[DNIS],
        o.[FirstCampaign],
        o.[FirstVirtualCamp],
        o.[LastCampaign],
        o.[LastVirtualCamp],
        o.[UUI],
        o.[Memo],
        o.[AssociatedData],
        o.[OutTel],
        o.[OutDialed],
        o.[OutDisplayed],
        o.[Closed],
        o.[NoAgent],
        o.[Overflow],
        o.[Abandon],
        o.[FirstIVR],
        o.[LastIVR],
        o.[FirstQueue],
        o.[LastQueue],
        o.[InitPriority],
        o.[FirstAgent],
        o.[LastAgent],
        o.[LastTransfer],
        o.[CallStatusGroup],
        o.[CallStatusNum],
        o.[CallStatusDetail],
        o.[Comments],
        o.[ContactID],
        o.[EndByAgent],
        o.[AgentListen],
        o.[EndReason],
        o.[RefID],
        o.[ProActiveReason],
        o.[AdditionalInfo],
        (
            SELECT TOP 1
                th.ID_Tranche
            FROM
                [Dim_Tranche] th
            WHERE
                CAST(CONVERT(varchar, CAST(o.CallUniversalTime AS datetime), 121) AS TIME) BETWEEN CAST(LEFT(th.Tranche_30, 5) AS TIME)
                AND CAST(RIGHT(th.Tranche_30, 5) AS TIME)
        ) AS ID_Tranche
    FROM
        " + "[ODCalls] o " + @"
    WHERE
        o.ID IS NOT NULL";
                
               /* string queryy = " SELECT o.[ID],o.[CtiID],o.[CustomerID],o.[Indice],o.[CallType],o.[CallUniversalTime],o.[CallLocalTime]," +
                     "o.[CallUniversalTimeString],o.[CallLocalTimeString],o.[Duration],o.[CallDuration],o.[AcceptDuration],o.[IvrDuration]," +
                     "o.[WaitDuration],o.[TotalWaitDuration],o.[ConvDuration],o.[WrapupDuration],o.[RerouteDuration],o.[OverflowDuration],o.[ANI],o.[DNIS],o.[FirstCampaign],o.[FirstVirtualCamp],o.[LastCampaign],o.[LastVirtualCamp],o.[UUI],o.[Memo]," +
                     "o.[AssociatedData],o.[OutTel],o.[OutDialed],o.[OutDisplayed],o.[Closed],o.[NoAgent],o.[Overflow],o.[Abandon],    o.[FirstIVR],    o.[LastIVR],    o.[FirstQueue],    o.[LastQueue],    o.[InitPriority],    o.[FirstAgent],   " +
                     " o.[LastAgent],    o.[LastTransfer],    o.[CallStatusGroup]," +
                     "o.[CallStatusNum],    o.[CallStatusDetail],    o.[Comments],    o.[ContactID],    o.[EndByAgent],    o.[AgentListen]," +
                     "    o.[EndReason],    o.[RefID],    o.[ProActiveReason],    o.[AdditionalInfo],    th.ID_Tranche " +
                     "FROM[ODCalls] o " +
                     "LEFT JOIN[Dim_Tranche] th ON CAST(CONVERT(varchar, CAST(o.CallUniversalTime AS datetime), 120) AS TIME) BETWEEN CAST(LEFT(th.Tranche_30, 5) AS TIME)" +
                     "AND CAST(RIGHT(th.Tranche_30, 5) AS TIME)";*/

               /* string queryString = "SELECT o.[ID], o.[CtiID], o.[CustomerID], o.[Indice], o.[CallType], o.[CallUniversalTime], o.[CallLocalTime], " +
                     "o.[CallUniversalTimeString], o.[CallLocalTimeString], o.[Duration], o.[CallDuration], o.[AcceptDuration], o.[IvrDuration], " +
                     "o.[WaitDuration], o.[TotalWaitDuration], o.[ConvDuration], o.[WrapupDuration], o.[RerouteDuration], o.[OverflowDuration], o.[ANI], o.[DNIS], o.[FirstCampaign], o.[FirstVirtualCamp], o.[LastCampaign], o.[LastVirtualCamp], o.[UUI], o.[Memo], " +
                     "o.[AssociatedData], o.[OutTel], o.[OutDialed], o.[OutDisplayed], o.[Closed], o.[NoAgent], o.[Overflow], o.[Abandon], " +
                     "o.[FirstIVR], o.[LastIVR], o.[FirstQueue], o.[LastQueue], o.[InitPriority], o.[FirstAgent], " +
                     "o.[LastAgent], o.[LastTransfer], o.[CallStatusGroup], o.[CallStatusNum], o.[CallStatusDetail], o.[Comments], o.[ContactID], " +
                     "o.[EndByAgent], o.[AgentListen], o.[EndReason], o.[RefID], o.[ProActiveReason], o.[AdditionalInfo], th.ID_Tranche " +
                     "FROM [ODCalls] o " +
                     "LEFT JOIN ( " +
                     "    SELECT TOP 1 Tranche_30, ID_Tranche " +
                     "    FROM [Dim_Tranche] " +
                     "    WHERE CAST(CONVERT(varchar, CAST(o.CallUniversalTime AS datetime), 120) AS TIME) BETWEEN CAST(LEFT(Tranche_30, 5) AS TIME) " +
                     "    AND CAST(RIGHT(Tranche_30, 5) AS TIME) " +
                     ") th ON 1=1;";*/
                string simpleQuery = "SELECT * FROM ODCalls";


                using (

                    //SqlCommand command = new SqlCommand("SELECT * FROM " + variableTable +" WHERE ID IS NOT NULL", connection)
                    /* SqlCommand command = new SqlCommand("SELECT o.[ID],o.[CtiID],o.[CustomerID],o.[Indice],o.[CallType],o.[CallUniversalTime],o.[CallLocalTime]," +
                     "o.[CallUniversalTimeString],o.[CallLocalTimeString],o.[Duration],o.[CallDuration],o.[AcceptDuration],o.[IvrDuration]," +
                     "o.[WaitDuration],o.[TotalWaitDuration],o.[ConvDuration],o.[WrapupDuration],o.[RerouteDuration],o.[OverflowDuration],o.[ANI],o.[DNIS],o.[FirstCampaign],o.[FirstVirtualCamp],o.[LastCampaign],o.[LastVirtualCamp],o.[UUI],o.[Memo]," +
                     "o.[AssociatedData],o.[OutTel],o.[OutDialed],o.[OutDisplayed],o.[Closed],o.[NoAgent],o.[Overflow],o.[Abandon],    o.[FirstIVR],    o.[LastIVR],    o.[FirstQueue],    o.[LastQueue],    o.[InitPriority],    o.[FirstAgent],   " +
                     " o.[LastAgent],    o.[LastTransfer],    o.[CallStatusGroup]," +
                     "o.[CallStatusNum],    o.[CallStatusDetail],    o.[Comments],    o.[ContactID],    o.[EndByAgent],    o.[AgentListen]," +
                     "    o.[EndReason],    o.[RefID],    o.[ProActiveReason],    o.[AdditionalInfo],    th.ID_Tranche " +
                     "FROM[ODCalls] o " +
                     "LEFT JOIN[Dim_Tranche] th ON CAST(CONVERT(varchar, CAST(o.CallUniversalTime AS datetime), 120) AS TIME) BETWEEN CAST(LEFT(th.Tranche_30, 5) AS TIME)" +
                     "AND CAST(RIGHT(th.Tranche_30, 5) AS TIME)", connection)*/
                    //SqlCommand command = new SqlCommand("SELECT * FROM " + variableTable +" WHERE ID IS NOT NULL", connection)
                    /*SqlCommand command = new SqlCommand("WITH CTE_Tranche AS(SELECT ID_Tranche,LAG(Tranche_30) OVER(ORDER BY CAST(RIGHT(Tranche_30, 5) AS TIME)) AS PreviousTranche," +
                    "Tranche_30 FROM[Dim_Tranche]) SELECT o.[ID], o.[CtiID], o.[CustomerID], o.[Indice], o.[CallType], o.[CallUniversalTime], o.[CallLocalTime], o.[CallUniversalTimeString], " +
                    "o.[CallLocalTimeString], o.[Duration], o.[CallDuration], o.[AcceptDuration], o.[IvrDuration], o.[WaitDuration], " +
                    "o.[TotalWaitDuration], o.[ConvDuration], o.[WrapupDuration], o.[RerouteDuration], o.[OverflowDuration], o.[ANI], o.[DNIS], " +
                    "o.[FirstCampaign], o.[FirstVirtualCamp], o.[LastCampaign], o.[LastVirtualCamp], o.[UUI], o.[Memo], o.[AssociatedData], " +
                    "o.[OutTel], o.[OutDialed], o.[OutDisplayed], o.[Closed], o.[NoAgent], o.[Overflow], o.[Abandon], o.[FirstIVR], o.[LastIVR], o.[FirstQueue], o.[LastQueue], o.[InitPriority], o.[FirstAgent], o.[LastAgent], o.[LastTransfer], o.[CallStatusGroup], " +
                    "o.[CallStatusNum], o.[CallStatusDetail], o.[Comments], o.[ContactID], o.[EndByAgent], o.[AgentListen], o.[EndReason], " +
                    "o.[RefID], o.[ProActiveReason], o.[AdditionalInfo], th.ID_Tranche FROM[ODCalls] o LEFT JOIN CTE_Tranche th ON CAST(o.CallUniversalTime AS TIME) BETWEEN CAST(LEFT(th.PreviousTranche, 5) AS TIME) AND CAST(RIGHT(th.Tranche_30, 5) AS TIME)"
                    , connection)*/

                     SqlCommand command = new SqlCommand(query, connection)
                   // + variableTable + " WHERE ID IS NOT NULL", connection)
                   )

                {
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            // Stockez les valeurs dans les variables d'�criture
                            Output0Buffer.AddRow();
                            //Output0Buffer.CallType = reader["o.CallType"].ToString();
                            Output0Buffer.ID = reader["ID"].ToString();
                            Output0Buffer.servernamee = varserver;
                            Output0Buffer.Duration = Convert.ToSingle(reader["Duration"]);
                            Output0Buffer.CustomerID = Convert.ToSingle(reader["CustomerID"]);
                            /*  //Output0Buffer.servernamee = varserver;

                           */
                            Output0Buffer.CallUniversalTime = reader["CallUniversalTime"].ToString();
                            Output0Buffer.FirstCampaign = reader["FirstCampaign"].ToString();

                            Output0Buffer.CallDuration = Convert.ToSingle(reader["CallDuration"]);

                            Output0Buffer.FirstAgent = Convert.ToSingle(reader["FirstAgent"]);

                            Output0Buffer.IDTranche = Convert.ToSingle(reader["ID_Tranche"]);
                            


                            try
                            {
                                Output0Buffer.Abandon = Convert.ToSingle(reader["Abandon"]);
                                Output0Buffer.CallType = Convert.ToSingle(reader["CallType"]);
                                Output0Buffer.Closed = Convert.ToSingle(reader["Overflow"]);
                                Output0Buffer.Overflow = Convert.ToSingle(reader["Closed"]);
                                //Output0Buffer.Abandon = Convert.ToSingle(reader["o.Abandon"]);
                                Output0Buffer.LastAgent = Convert.ToSingle(reader["LastAgent"]);
                                Output0Buffer.RerouteDuration = Convert.ToSingle(reader["RerouteDuration"]);
                                Output0Buffer.WaitDuration = Convert.ToSingle(reader["WaitDuration"]);


                                Output0Buffer.CallStatusNum = Convert.ToSingle(reader["CallStatusNum"]);
                                Output0Buffer.CallStatusGroup = Convert.ToSingle(reader["CallStatusGroup"]);
                                Output0Buffer.CallStatusDetail = Convert.ToSingle(reader["CallStatusDetail"]);
                                Output0Buffer.EndReason = Convert.ToSingle(reader["EndReason"]);
                                Output0Buffer.ConvDuration = Convert.ToSingle(reader["ConvDuration"]);
                                Output0Buffer.WrapupDuration = Convert.ToSingle(reader["WrapupDuration"]);



                                Output0Buffer.LastTransfer = reader["LastTransfer"].ToString();
                            }
                            catch (Exception ex)
                            {
                                // Handle the error
                                // You can choose to log the error, display a message, or take any other appropriate action
                                //Output0Buffer.Abandonn = null;
                            }

                            //Output0Buffer.Abandonn = Convert.ToSingle(reader["Abandon"]);
                            /* Output0Buffer.CallStatusGroup = Convert.ToSingle(reader["CallStatusGroup"]);
                             Output0Buffer.CallStatusNum = Convert.ToSingle(reader["CallStatusNum"]);
                             Output0Buffer.CallStatusDetail = Convert.ToSingle(reader["CallStatusDetail"]);
                             Output0Buffer.EndReason = Convert.ToSingle(reader["EndReason"]);
                             Output0Buffer.EndByAgent = Convert.ToSingle(reader["EndByAgent"]);
                             Output0Buffer.NoAgent = Convert.ToSingle(reader["NoAgent"]);*/


                        }
                    }
                }
            }

        }
        catch (Exception ex)
        {
            // Handle the database operation error
            // Log the error or take any necessary actions
            throw new Exception("Failed to execute database operation: " + ex.Message);
        }

    }


    private void LogErrorToTable(string errorLog)
    {
        // Implement your logging mechanism here
        // For example, execute a SQL command to insert the error log into a table

        string connectionString = "Data Source=DESKTOP-57MB2CN\\INTELCIA;Initial Catalog=serverInfo;User ID=testconn;Password=intelcia2023";
        //connection = new SqlConnection(connectionString);
        connection = new SqlConnection(connectionString);
        connection.Open();

        string logQuery = "INSERT INTO ErrorLogTable (ErrorMessage) VALUES (@ErrorMessage)";

        using (SqlCommand command = new SqlCommand(logQuery, connection))
        {
            command.Parameters.AddWithValue("@ErrorMessage", errorLog);
            command.ExecuteNonQuery();
        }



    }


    private void SendEmailNotification(string errorLog)
    {
        // Configure email settings
        string fromAddress = "khadijatest.project@gmail.com";
        string toAddress = "khadijaaitmyhachem2000@gmail.com";
        string subject = "Database Connection Failure";
        string body = "The following error occurred while establishing a database connection:\n\n" + errorLog;

        // Create and configure the email message
        MailMessage message = new MailMessage(fromAddress, toAddress, subject, body);

        // Send the email using SMTP client
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com", 587);
        smtpClient.EnableSsl = true;
        smtpClient.UseDefaultCredentials = false;
        smtpClient.Credentials = new System.Net.NetworkCredential("khadijatest.project@gmail.com", "dreqysshjweageid");

        try
        {
            smtpClient.Send(message);
        }
        catch (Exception ex)
        {
            throw new Exception("Failed to send email notification: " + ex.Message);
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ProActiveReason
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ProActiveReason_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String servernamee
    {
        set
        {
            this[1] = value;
        }
    }
    public bool servernamee_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single EndReason
    {
        set
        {
            this[2] = value;
        }
    }
    public bool EndReason_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single AgentListen
    {
        set
        {
            this[3] = value;
        }
    }
    public bool AgentListen_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single EndByAgent
    {
        set
        {
            this[4] = value;
        }
    }
    public bool EndByAgent_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallStatusDetail
    {
        set
        {
            this[5] = value;
        }
    }
    public bool CallStatusDetail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallStatusNum
    {
        set
        {
            this[6] = value;
        }
    }
    public bool CallStatusNum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallStatusGroup
    {
        set
        {
            this[7] = value;
        }
    }
    public bool CallStatusGroup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastTransfer
    {
        set
        {
            this[8] = value;
        }
    }
    public bool LastTransfer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single LastAgent
    {
        set
        {
            this[9] = value;
        }
    }
    public bool LastAgent_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single FirstAgent
    {
        set
        {
            this[10] = value;
        }
    }
    public bool FirstAgent_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single InitPriority
    {
        set
        {
            this[11] = value;
        }
    }
    public bool InitPriority_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastQueue
    {
        set
        {
            this[12] = value;
        }
    }
    public bool LastQueue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstQueue
    {
        set
        {
            this[13] = value;
        }
    }
    public bool FirstQueue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastIVR
    {
        set
        {
            this[14] = value;
        }
    }
    public bool LastIVR_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstIVR
    {
        set
        {
            this[15] = value;
        }
    }
    public bool FirstIVR_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Abandon
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Abandon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Overflow
    {
        set
        {
            this[17] = value;
        }
    }
    public bool Overflow_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single NoAgent
    {
        set
        {
            this[18] = value;
        }
    }
    public bool NoAgent_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Closed
    {
        set
        {
            this[19] = value;
        }
    }
    public bool Closed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastVirtualCamp
    {
        set
        {
            this[20] = value;
        }
    }
    public bool LastVirtualCamp_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastCampaign
    {
        set
        {
            this[21] = value;
        }
    }
    public bool LastCampaign_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstCampaign
    {
        set
        {
            this[22] = value;
        }
    }
    public bool FirstCampaign_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single OverflowDuration
    {
        set
        {
            this[23] = value;
        }
    }
    public bool OverflowDuration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single RerouteDuration
    {
        set
        {
            this[24] = value;
        }
    }
    public bool RerouteDuration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single WrapupDuration
    {
        set
        {
            this[25] = value;
        }
    }
    public bool WrapupDuration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single ConvDuration
    {
        set
        {
            this[26] = value;
        }
    }
    public bool ConvDuration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(26);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single TotalWaitDuration
    {
        set
        {
            this[27] = value;
        }
    }
    public bool TotalWaitDuration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(27);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single WaitDuration
    {
        set
        {
            this[28] = value;
        }
    }
    public bool WaitDuration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(28);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single IvrDuration
    {
        set
        {
            this[29] = value;
        }
    }
    public bool IvrDuration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(29);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single AcceptDuration
    {
        set
        {
            this[30] = value;
        }
    }
    public bool AcceptDuration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(30);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallDuration
    {
        set
        {
            this[31] = value;
        }
    }
    public bool CallDuration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(31);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Duration
    {
        set
        {
            this[32] = value;
        }
    }
    public bool Duration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(32);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CallUniversalTime
    {
        set
        {
            this[33] = value;
        }
    }
    public bool CallUniversalTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(33);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CallType
    {
        set
        {
            this[34] = value;
        }
    }
    public bool CallType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(34);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Indice
    {
        set
        {
            this[35] = value;
        }
    }
    public bool Indice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(35);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single CustomerID
    {
        set
        {
            this[36] = value;
        }
    }
    public bool CustomerID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(36);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single IDTranche
    {
        set
        {
            this[37] = value;
        }
    }
    public bool IDTranche_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(37);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ID
    {
        set
        {
            this[38] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(38);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1492c87fdb804c269692bd3198bea7fe.Properties.Settings.get_Default():SC_1492c87fdb804c269692bd3198bea7fe.Properties.Sett" +
    "ings")]

namespace SC_1492c87fdb804c269692bd3198bea7fe.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_1492c87fdb804c269692bd3198bea7fe.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ed3f867c-3814-466c-9973-2f511c11c57f}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_1492c87fdb804c269692bd3198bea7fe</RootNamespace>
    <AssemblyName>SC_F5A09054816346598DA474383BB0E5E5</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_1492c87fdb804c269692bd3198bea7fe" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_1492c87fdb804c269692bd3198bea7fe</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_1492c87fdb804c269692bd3198bea7fe</msb:DisplayName>
    <msb:ProjectId>{80A3EC4B-CAAA-434C-B648-90467F20D3AD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_1492c87fdb804c269692bd3198bea7fe.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_1492c87fdb804c269692bd3198bea7fe")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_1492c87fdb804c269692bd3198bea7fe")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1492c87fdb804c269692bd3198bea7fe.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1492c87fdb804c269692bd3198bea7fe.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1492c87fdb804c269692bd3198bea7fe.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_1492c87fdb804c269692bd3198bea7fe.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_1492c87fdb804c269692bd3198bea7fe.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_F5A09054816346598DA474383BB0E5E5.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AAAAAJYIEw5YAVsAFC4AAAAAhhhQDAYAWwAcLgAAAACRGFYMXQFbAAAAAQDUBAAAAQDUBAAAAQDg
CwAAAgBCDQAAAwA/CwAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAA
AQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJ
BAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAA
AQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJ
BAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAA
AQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJ
BAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAA
AQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJ
BAAAAQCJBAAAAQCJBAAAAQCJBAAAAQCJBAAAAQDDDQAAAgBdDAAAAwCmDQAABAA/CwAAAQCcDgAA
AQCcDgAAAQCJBAkAUAwBABEAUAwGABkAUAwKACkAUAwQADEAUAwQADkAUAwQAEEAUAwQAEkAUAwQ
AFEAUAwQAFkAUAwQAGEAUAwQAGkAUAwGAMkAUAwGAOkAUAwVAPkAUAwGALkASAQGAHEAUAwQAAEB
NAkGAHkATAEiAAkB3w0mALkAUwQGAAEBewIsAAEBbQIGAAkBgA88AIEAUAxCAIEArwtJABkB9QhO
AMEAywQiACEBsgFTABkB0gBYACkBcwIGAHkAUAwQAIEArg1iADEBfARoAEEBcA9wAJEAUAyAAJkA
UAyIAJkA5wiOAJkAgA2OAEkBUAyTAJkAcA2ZAJkAFAGgAKEAUAymAKEA/giwAKEA3wgBAFkBUAwQ
AKEATw8GAKEABA4GAKEABw5YALkAUAwGALkAkQC6ALkAVg3BAMEAUAwGALkALA3HAGkB9QjNALkA
Og/UAHEBCw/aAJkBoAHhAJkBYw/qANEAUAzwAPEAUAwGAC4ACwCEAS4AEwCNAS4AGwCsAS4AIwC1
AS4AKwDeAS4AMwDeAS4AOwDeAS4AQwC1AS4ASwDkAS4AUwDeAS4AWwD7AUMAYwBFAuMAawBFAkEB
ewBFAmkLcwCsAYkLcwCsARsAMgBcAHQAtgADAAEABgBPAAcAWwAIAF0AAAAVC2EBAAD6B2UBAABA
AWEBAADSBWUBAAAHC2kBAADlB2UBAAA9CWkBAACPBmUBAABMDmkBAAChCGUBAAAmBWkBAABaBmUB
AAASCWkBAAB2BmUBAACEC2kBAAAwCGUBAADrC2EBAABLCGUBAAAvDmkBAAB2CGUBAAA9DmkBAACL
CGUBAACQD2kBAADLCGUBAABjBGEBAAAvBmUBAABxBGEBAABEBmUBAAChAGEBAACHBWUBAACtAGEB
AACaBWUBAAB7CWkBAADXBmUBAABaD2kBAAC3CGUBAAAjDmkBAABjCGUBAAD4AGkBAACuBWUBAABw
C2EBAAAVCGUBAABNCWEBAACmBmUBAABeCWEBAAC+BmUBAAA9CmkBAADJB2UBAACqCWkBAAD+BmUB
AADPCWkBAAAxB2UBAAAsCmkBAACxB2UBAAADCmkBAAB6B2UBAAAICmkBAAB/B2UBAADiCWkBAABL
B2UBAAAZCmkBAACXB2UBAAC+CWkBAAAZB2UBAABFCmkBAADRB2UBAADtAWEBAAD+BWUBAAAkAmkB
AAAbBmUBAAAlAWkBAADABWUBAACGAGkBAABxBWUBAABoAWkBAADpBWUBAACaAGEBAAB5BWUBAAC7
BGEBAACtBGEBAADNAWEBAAD8DW0BAADPAHEBAABFDGEBAAAdAWEBAADhBGEBAADeAWEBAAC/AWEB
AADvAGUBAAA+AGEBAAD8C3UBAABNAnoBAAAXDn8BAQAIAAMAAQAJAAUAAQAKAAcAAQALAAkAAQAM
AAsAAQANAA0AAQAOAA8AAQAPABEAAQAQABMAAQARABUAAQASABcAAQATABkAAQAUABsAAQAVAB0A
AQAWAB8AAQAXACEAAQAYACMAAQAZACUAAQAaACcAAQAbACkAAQAcACsAAQAdAC0AAQAeAC8AAQAf
ADEAAQAgADMAAQAhADUAAQAiADcAAQAjADkAAQAkADsAAQAlAD0AAQAmAD8AAQAnAEEAAQAoAEMA
AQApAEUAAQAqAEcAAQArAEkAAQAsAEsAAQAtAE0AAQAuAE8AAQAvAFEAAQAwAFMAAQAxAFUAAQAy
AFcAAQAzAFkAAQA0AFsAAQA1AF0AAQA2AF8AAQA3AGEAAQA4AGMAAQA5AGUAAQA6AGcAAQA7AGkA
AQA8AGsAAQA9AG0AAQA+AG8AAQA/AHEAAQBAAHMAAQBBAHUAAQBCAHcAAQBDAHkAAQBEAHsAAQBF
AH0AAQBGAH8AAQBHAIEAAQBIAIMAAQBJAIUAAQBKAIcAAQBLAIkAAQBMAIsAAQBNAI0AAQBOAI8A
AQBPAJEAAQBQAJMAAQBRAJUAAQBSAJcAAQBTAJkAAQBUAJsAAQBVAJ0AAgBgAJ8AAgBhAKEAAgBi
AKMAAgBjAKUAAgBkAKcAAgBlAKkAAgBmAKsAAgBnAK0AAgBoAK8AAgBpALEAAgBqALMAAgBrALUA
AgBtALcAAgBuALkAAQBvALkAAgBwALsABIAAAAEAAAAAAAAAAAAAAAAATgAAAAQAAAAAAAAAAAAA
APgAwgAAAAAADwAAAAAAAAAAAAAAAQGmDgAAAAAEAAAAAAAAAAAAAAD4ALYAAAAAAAQAAAAAAAAA
AAAAAPgABwkAAAAADwAAAAAAAAAAAAAAAQHLDgAAAAAPAAAAAAAAAAAAAAABAUkLAAAAAAAAAAAB
AAAAqwwAAAAAAAAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRv
ckNvbnRleHQxMDAAZ2V0X1VzZXJOYW1lMQBJbnQzMgBTQ19GNUEwOTA1NDgxNjM0NjU5OERBNDc0
MzgzQkIwRTVFNQA8TW9kdWxlPgBzZXRfSUQAc2V0X0N1c3RvbWVySUQAR2V0T3V0cHV0SUQAc2V0
X0xhc3RJVlIAc2V0X0ZpcnN0SVZSAFN5c3RlbS5EYXRhAG1zY29ybGliAGdldF9JZABSZWFkAE1h
cmtPdXRwdXRzRmluaXNoZWQAZ2V0X1VzZWQAc2V0X0Nsb3NlZABEYkNvbW1hbmQAU3FsQ29tbWFu
ZABTZW5kAGdldF9wd2QAc2V0X0luZGljZQBkZWZhdWx0SW5zdGFuY2UAc2V0X3NlcnZlcm5hbWVl
AGdldF9NZXNzYWdlAE1haWxNZXNzYWdlAHNldF9JRFRyYW5jaGUATG9nRXJyb3JUb1RhYmxlAElE
aXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFRvU2luZ2xlAGdl
dF9UYWJsZU5hbWUAZ2V0X0RhdGFCYXNlTmFtZQBnZXRfU2VydmVyTmFtZQBzZXRfQ2FsbFVuaXZl
cnNhbFRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAc2V0X0NhbGxUeXBlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBDbG9zZQBEaXNwb3NlAGdldF9TdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb25uZWN0
aW9uU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29t
cG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBzZXRfTGFzdFF1
ZXVlAHNldF9GaXJzdFF1ZXVlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAGdldF9Db25TdHJpbmcAZ2V0X0Nvbm5leGlvblN0cmluZwBUb1N0cmluZwBlcnJvckxv
ZwBnZXRfUXVlcnlWYWwATmV0d29ya0NyZWRlbnRpYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFN5
c3RlbS5OZXQuTWFpbABzZXRfQ2FsbFN0YXR1c0RldGFpbABTQ19GNUEwOTA1NDgxNjM0NjU5OERB
NDc0MzgzQkIwRTVFNS5kbGwAc2V0X0lEX0lzTnVsbABzZXRfQ3VzdG9tZXJJRF9Jc051bGwAc2V0
X0xhc3RJVlJfSXNOdWxsAHNldF9GaXJzdElWUl9Jc051bGwAc2V0X0Nsb3NlZF9Jc051bGwAc2V0
X0luZGljZV9Jc051bGwAc2V0X3NlcnZlcm5hbWVlX0lzTnVsbABzZXRfSURUcmFuY2hlX0lzTnVs
bABzZXRfQ2FsbFVuaXZlcnNhbFRpbWVfSXNOdWxsAHNldF9DYWxsVHlwZV9Jc051bGwAc2V0X0xh
c3RRdWV1ZV9Jc051bGwAc2V0X0ZpcnN0UXVldWVfSXNOdWxsAHNldF9DYWxsU3RhdHVzRGV0YWls
X0lzTnVsbABzZXRfQ2FsbFN0YXR1c051bV9Jc051bGwAc2V0X0FnZW50TGlzdGVuX0lzTnVsbABz
ZXRfTGFzdENhbXBhaWduX0lzTnVsbABzZXRfRmlyc3RDYW1wYWlnbl9Jc051bGwAc2V0X0FiYW5k
b25fSXNOdWxsAHNldF9EdXJhdGlvbl9Jc051bGwAc2V0X1Jlcm91dGVEdXJhdGlvbl9Jc051bGwA
c2V0X0NhbGxEdXJhdGlvbl9Jc051bGwAc2V0X1dyYXB1cER1cmF0aW9uX0lzTnVsbABzZXRfSXZy
RHVyYXRpb25fSXNOdWxsAHNldF9XYWl0RHVyYXRpb25fSXNOdWxsAHNldF9Ub3RhbFdhaXREdXJh
dGlvbl9Jc051bGwAc2V0X0FjY2VwdER1cmF0aW9uX0lzTnVsbABzZXRfQ29udkR1cmF0aW9uX0lz
TnVsbABzZXRfT3ZlcmZsb3dEdXJhdGlvbl9Jc051bGwAc2V0X0VuZFJlYXNvbl9Jc051bGwAc2V0
X1Byb0FjdGl2ZVJlYXNvbl9Jc051bGwAc2V0X0xhc3RWaXJ0dWFsQ2FtcF9Jc051bGwAc2V0X0Nh
bGxTdGF0dXNHcm91cF9Jc051bGwAc2V0X0xhc3RUcmFuc2Zlcl9Jc051bGwAc2V0X05vQWdlbnRf
SXNOdWxsAHNldF9MYXN0QWdlbnRfSXNOdWxsAHNldF9GaXJzdEFnZW50X0lzTnVsbABzZXRfRW5k
QnlBZ2VudF9Jc051bGwAc2V0X092ZXJmbG93X0lzTnVsbABzZXRfSW5pdFByaW9yaXR5X0lzTnVs
bABTZXROdWxsAHNldF9FbmFibGVTc2wAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHNldF9DYWxs
U3RhdHVzTnVtAHJlc291cmNlTWFuAEJvb2xlYW4AT3BlbgBzZXRfQWdlbnRMaXN0ZW4Ac2V0X0xh
c3RDYW1wYWlnbgBzZXRfRmlyc3RDYW1wYWlnbgBTY3JpcHRNYWluAHNldF9BYmFuZG9uAFNlbmRF
bWFpbE5vdGlmaWNhdGlvbgBzZXRfRHVyYXRpb24Ac2V0X1Jlcm91dGVEdXJhdGlvbgBzZXRfQ2Fs
bER1cmF0aW9uAHNldF9XcmFwdXBEdXJhdGlvbgBzZXRfSXZyRHVyYXRpb24Ac2V0X1dhaXREdXJh
dGlvbgBzZXRfVG90YWxXYWl0RHVyYXRpb24Ac2V0X0FjY2VwdER1cmF0aW9uAHNldF9Db252RHVy
YXRpb24Ac2V0X092ZXJmbG93RHVyYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNv
bm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBza2lwQ29ubmVjdGlvbgBjb25uZWN0aW9uAEludmFsaWRP
cGVyYXRpb25FeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAHNldF9FbmRSZWFzb24Ac2V0X1By
b0FjdGl2ZVJlYXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAHNldF9MYXN0VmlydHVhbENhbXAAc2V0X0NhbGxT
dGF0dXNHcm91cABEYkRhdGFSZWFkZXIAU3FsRGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAE91dHB1
dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAHNldF9MYXN0VHJhbnNmZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIA
U3FsUGFyYW1ldGVyAGdldF9MYXN0U2VydmVyAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTQ18xNDkyYzg3ZmRiODA0YzI2OTY5MmJkMzE5OGJlYTdmZS5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfMTQ5MmM4N2ZkYjgwNGMyNjk2OTJiZDMx
OThiZWE3ZmUuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5k
ZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAHNldF9DcmVkZW50aWFscwBzZXRfVXNlRGVm
YXVsdENyZWRlbnRpYWxzAENvbm5lY3Rpb25zAEJ1ZmZlcnMAZ2V0X1BhcmFtZXRlcnMARmluaXNo
T3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABPYmplY3QAU3lzdGVtLk5ldABnZXRf
RnVsbFNldABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVsdABzZXRfTm9BZ2VudABzZXRfTGFzdEFn
ZW50AHNldF9GaXJzdEFnZW50AHNldF9FbmRCeUFnZW50AFN5c3RlbS5EYXRhLlNxbENsaWVudABT
bXRwQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABN
aWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5Q
aXBlbGluZUhvc3QASUNyZWRlbnRpYWxzQnlIb3N0AFByaW1lT3V0cHV0AEdldFZhbHVlV2l0aENv
bnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAQWRk
Um93AHNldF9PdmVyZmxvdwBnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AG9wX0VxdWFsaXR5
AHNldF9Jbml0UHJpb3JpdHkAAAAAAFdGAGEAaQBsAGUAZAAgAHQAbwAgAGUAcwB0AGEAYgBsAGkA
cwBoACAAYQAgAGQAYQB0AGEAYgBhAHMAZQAgAGMAbwBuAG4AZQBjAHQAaQBvAG4AOgAgAAAPTwBE
AEMAYQBsAGwAcwAAjb0KACAAIAAgACAAUwBFAEwARQBDAFQACgAgACAAIAAgACAAIAAgACAAbwAu
AFsASQBEAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBDAHQAaQBJAEQAXQAsAAoAIAAgACAA
IAAgACAAIAAgAG8ALgBbAEMAdQBzAHQAbwBtAGUAcgBJAEQAXQAsAAoAIAAgACAAIAAgACAAIAAg
AG8ALgBbAEkAbgBkAGkAYwBlAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBDAGEAbABsAFQA
eQBwAGUAXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAEMAYQBsAGwAVQBuAGkAdgBlAHIAcwBh
AGwAVABpAG0AZQBdACwACgAgACAAIAAgACAAIAAgACAAbwAuAFsAQwBhAGwAbABMAG8AYwBhAGwA
VABpAG0AZQBdACwACgAgACAAIAAgACAAIAAgACAAbwAuAFsAQwBhAGwAbABVAG4AaQB2AGUAcgBz
AGEAbABUAGkAbQBlAFMAdAByAGkAbgBnAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBDAGEA
bABsAEwAbwBjAGEAbABUAGkAbQBlAFMAdAByAGkAbgBnAF0ALAAKACAAIAAgACAAIAAgACAAIABv
AC4AWwBEAHUAcgBhAHQAaQBvAG4AXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAEMAYQBsAGwA
RAB1AHIAYQB0AGkAbwBuAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBBAGMAYwBlAHAAdABE
AHUAcgBhAHQAaQBvAG4AXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAEkAdgByAEQAdQByAGEA
dABpAG8AbgBdACwACgAgACAAIAAgACAAIAAgACAAbwAuAFsAVwBhAGkAdABEAHUAcgBhAHQAaQBv
AG4AXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAFQAbwB0AGEAbABXAGEAaQB0AEQAdQByAGEA
dABpAG8AbgBdACwACgAgACAAIAAgACAAIAAgACAAbwAuAFsAQwBvAG4AdgBEAHUAcgBhAHQAaQBv
AG4AXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAFcAcgBhAHAAdQBwAEQAdQByAGEAdABpAG8A
bgBdACwACgAgACAAIAAgACAAIAAgACAAbwAuAFsAUgBlAHIAbwB1AHQAZQBEAHUAcgBhAHQAaQBv
AG4AXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAE8AdgBlAHIAZgBsAG8AdwBEAHUAcgBhAHQA
aQBvAG4AXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAEEATgBJAF0ALAAKACAAIAAgACAAIAAg
ACAAIABvAC4AWwBEAE4ASQBTAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBGAGkAcgBzAHQA
QwBhAG0AcABhAGkAZwBuAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBGAGkAcgBzAHQAVgBp
AHIAdAB1AGEAbABDAGEAbQBwAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBMAGEAcwB0AEMA
YQBtAHAAYQBpAGcAbgBdACwACgAgACAAIAAgACAAIAAgACAAbwAuAFsATABhAHMAdABWAGkAcgB0
AHUAYQBsAEMAYQBtAHAAXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAFUAVQBJAF0ALAAKACAA
IAAgACAAIAAgACAAIABvAC4AWwBNAGUAbQBvAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBB
AHMAcwBvAGMAaQBhAHQAZQBkAEQAYQB0AGEAXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAE8A
dQB0AFQAZQBsAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBPAHUAdABEAGkAYQBsAGUAZABd
ACwACgAgACAAIAAgACAAIAAgACAAbwAuAFsATwB1AHQARABpAHMAcABsAGEAeQBlAGQAXQAsAAoA
IAAgACAAIAAgACAAIAAgAG8ALgBbAEMAbABvAHMAZQBkAF0ALAAKACAAIAAgACAAIAAgACAAIABv
AC4AWwBOAG8AQQBnAGUAbgB0AF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBPAHYAZQByAGYA
bABvAHcAXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAEEAYgBhAG4AZABvAG4AXQAsAAoAIAAg
ACAAIAAgACAAIAAgAG8ALgBbAEYAaQByAHMAdABJAFYAUgBdACwACgAgACAAIAAgACAAIAAgACAA
bwAuAFsATABhAHMAdABJAFYAUgBdACwACgAgACAAIAAgACAAIAAgACAAbwAuAFsARgBpAHIAcwB0
AFEAdQBlAHUAZQBdACwACgAgACAAIAAgACAAIAAgACAAbwAuAFsATABhAHMAdABRAHUAZQB1AGUA
XQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAEkAbgBpAHQAUAByAGkAbwByAGkAdAB5AF0ALAAK
ACAAIAAgACAAIAAgACAAIABvAC4AWwBGAGkAcgBzAHQAQQBnAGUAbgB0AF0ALAAKACAAIAAgACAA
IAAgACAAIABvAC4AWwBMAGEAcwB0AEEAZwBlAG4AdABdACwACgAgACAAIAAgACAAIAAgACAAbwAu
AFsATABhAHMAdABUAHIAYQBuAHMAZgBlAHIAXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAEMA
YQBsAGwAUwB0AGEAdAB1AHMARwByAG8AdQBwAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBD
AGEAbABsAFMAdABhAHQAdQBzAE4AdQBtAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBDAGEA
bABsAFMAdABhAHQAdQBzAEQAZQB0AGEAaQBsAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBD
AG8AbQBtAGUAbgB0AHMAXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAEMAbwBuAHQAYQBjAHQA
SQBEAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBFAG4AZABCAHkAQQBnAGUAbgB0AF0ALAAK
ACAAIAAgACAAIAAgACAAIABvAC4AWwBBAGcAZQBuAHQATABpAHMAdABlAG4AXQAsAAoAIAAgACAA
IAAgACAAIAAgAG8ALgBbAEUAbgBkAFIAZQBhAHMAbwBuAF0ALAAKACAAIAAgACAAIAAgACAAIABv
AC4AWwBSAGUAZgBJAEQAXQAsAAoAIAAgACAAIAAgACAAIAAgAG8ALgBbAFAAcgBvAEEAYwB0AGkA
dgBlAFIAZQBhAHMAbwBuAF0ALAAKACAAIAAgACAAIAAgACAAIABvAC4AWwBBAGQAZABpAHQAaQBv
AG4AYQBsAEkAbgBmAG8AXQAsAAoAIAAgACAAIAAgACAAIAAgACgACgAgACAAIAAgACAAIAAgACAA
IAAgACAAIABTAEUATABFAEMAVAAgAFQATwBQACAAMQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAdABoAC4ASQBEAF8AVAByAGEAbgBjAGgAZQAKACAAIAAgACAAIAAgACAAIAAgACAA
IAAgAEYAUgBPAE0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFsARABpAG0AXwBU
AHIAYQBuAGMAaABlAF0AIAB0AGgACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBSAEUA
CgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEMAQQBTAFQAKABDAE8ATgBWAEUAUgBU
ACgAdgBhAHIAYwBoAGEAcgAsACAAQwBBAFMAVAAoAG8ALgBDAGEAbABsAFUAbgBpAHYAZQByAHMA
YQBsAFQAaQBtAGUAIABBAFMAIABkAGEAdABlAHQAaQBtAGUAKQAsACAAMQAyADEAKQAgAEEAUwAg
AFQASQBNAEUAKQAgAEIARQBUAFcARQBFAE4AIABDAEEAUwBUACgATABFAEYAVAAoAHQAaAAuAFQA
cgBhAG4AYwBoAGUAXwAzADAALAAgADUAKQAgAEEAUwAgAFQASQBNAEUAKQAKACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAQQBOAEQAIABDAEEAUwBUACgAUgBJAEcASABUACgAdABoAC4A
VAByAGEAbgBjAGgAZQBfADMAMAAsACAANQApACAAQQBTACAAVABJAE0ARQApAAoAIAAgACAAIAAg
ACAAIAAgACkAIABBAFMAIABJAEQAXwBUAHIAYQBuAGMAaABlAAoAIAAgACAAIABGAFIATwBNAAoA
IAAgACAAIAAgACAAIAAgAFsATwBEAEMAYQBsAGwAcwBdACAAbwAgAAoAIAAgACAAIABXAEgARQBS
AEUACgAgACAAIAAgACAAIAAgACAAbwAuAEkARAAgAEkAUwAgAE4ATwBUACAATgBVAEwATAAABUkA
RAAAEUQAdQByAGEAdABpAG8AbgAAFUMAdQBzAHQAbwBtAGUAcgBJAEQAACNDAGEAbABsAFUAbgBp
AHYAZQByAHMAYQBsAFQAaQBtAGUAABtGAGkAcgBzAHQAQwBhAG0AcABhAGkAZwBuAAAZQwBhAGwA
bABEAHUAcgBhAHQAaQBvAG4AABVGAGkAcgBzAHQAQQBnAGUAbgB0AAAVSQBEAF8AVAByAGEAbgBj
AGgAZQAAD0EAYgBhAG4AZABvAG4AABFDAGEAbABsAFQAeQBwAGUAABFPAHYAZQByAGYAbABvAHcA
AA1DAGwAbwBzAGUAZAAAE0wAYQBzAHQAQQBnAGUAbgB0AAAfUgBlAHIAbwB1AHQAZQBEAHUAcgBh
AHQAaQBvAG4AABlXAGEAaQB0AEQAdQByAGEAdABpAG8AbgAAG0MAYQBsAGwAUwB0AGEAdAB1AHMA
TgB1AG0AAB9DAGEAbABsAFMAdABhAHQAdQBzAEcAcgBvAHUAcAAAIUMAYQBsAGwAUwB0AGEAdAB1
AHMARABlAHQAYQBpAGwAABNFAG4AZABSAGUAYQBzAG8AbgAAGUMAbwBuAHYARAB1AHIAYQB0AGkA
bwBuAAAdVwByAGEAcAB1AHAARAB1AHIAYQB0AGkAbwBuAAAZTABhAHMAdABUAHIAYQBuAHMAZgBl
AHIAAE1GAGEAaQBsAGUAZAAgAHQAbwAgAGUAeABlAGMAdQB0AGUAIABkAGEAdABhAGIAYQBzAGUA
IABvAHAAZQByAGEAdABpAG8AbgA6ACAAAIDNRABhAHQAYQAgAFMAbwB1AHIAYwBlAD0ARABFAFMA
SwBUAE8AUAAtADUANwBNAEIAMgBDAE4AXABJAE4AVABFAEwAQwBJAEEAOwBJAG4AaQB0AGkAYQBs
ACAAQwBhAHQAYQBsAG8AZwA9AHMAZQByAHYAZQByAEkAbgBmAG8AOwBVAHMAZQByACAASQBEAD0A
dABlAHMAdABjAG8AbgBuADsAUABhAHMAcwB3AG8AcgBkAD0AaQBuAHQAZQBsAGMAaQBhADIAMAAy
ADMAAX9JAE4AUwBFAFIAVAAgAEkATgBUAE8AIABFAHIAcgBvAHIATABvAGcAVABhAGIAbABlACAA
KABFAHIAcgBvAHIATQBlAHMAcwBhAGcAZQApACAAVgBBAEwAVQBFAFMAIAAoAEAARQByAHIAbwBy
AE0AZQBzAHMAYQBnAGUAKQAAG0AARQByAHIAbwByAE0AZQBzAHMAYQBnAGUAADtrAGgAYQBkAGkA
agBhAHQAZQBzAHQALgBwAHIAbwBqAGUAYwB0AEAAZwBtAGEAaQBsAC4AYwBvAG0AAEFrAGgAYQBk
AGkAagBhAGEAaQB0AG0AeQBoAGEAYwBoAGUAbQAyADAAMAAwAEAAZwBtAGEAaQBsAC4AYwBvAG0A
ADdEAGEAdABhAGIAYQBzAGUAIABDAG8AbgBuAGUAYwB0AGkAbwBuACAARgBhAGkAbAB1AHIAZQAA
gJFUAGgAZQAgAGYAbwBsAGwAbwB3AGkAbgBnACAAZQByAHIAbwByACAAbwBjAGMAdQByAHIAZQBk
ACAAdwBoAGkAbABlACAAZQBzAHQAYQBiAGwAaQBzAGgAaQBuAGcAIABhACAAZABhAHQAYQBiAGEA
cwBlACAAYwBvAG4AbgBlAGMAdABpAG8AbgA6AAoACgAAHXMAbQB0AHAALgBnAG0AYQBpAGwALgBj
AG8AbQAAIWQAcgBlAHEAeQBzAHMAaABqAHcAZQBhAGcAZQBpAGQAAEdGAGEAaQBsAGUAZAAgAHQA
bwAgAHMAZQBuAGQAIABlAG0AYQBpAGwAIABuAG8AdABpAGYAaQBjAGEAdABpAG8AbgA6ACAAAICb
SQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0
ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8A
IAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAw
AAAfQwBvAG4AbgBlAHgAaQBvAG4AUwB0AHIAaQBuAGcAABNDAG8AbgBTAHQAcgBpAG4AZwAAGUQA
YQB0AGEAQgBhAHMAZQBOAGEAbQBlAAAPRgB1AGwAbABTAGUAdAAABUkAZAAAFUwAYQBzAHQAUwBl
AHIAdgBlAHIAAAdwAHcAZAAAEVEAdQBlAHIAeQBWAGEAbAAAFVMAZQByAHYAZQByAE4AYQBtAGUA
ABNUAGEAYgBsAGUATgBhAG0AZQAACVUAcwBlAGQAABNVAHMAZQByAE4AYQBtAGUAMQAAcVMAQwBf
ADEANAA5ADIAYwA4ADcAZgBkAGIAOAAwADQAYwAyADYAOQA2ADkAMgBiAGQAMwAxADkAOABiAGUA
YQA3AGYAZQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAACtLV3Gx
r4VEmejR9FFeAJAABCABAQgDIAABBSABARERBCABAQ4FIAEBEXEGBwMOEj0OAyAADgUAAg4ODgUg
ABGAiQkHBA4SQRJFEj0FAAICDg4GIAIBDhI5BCAAEkUEIAEcDgQAAQwcAyAAAgUHAg4SQQUgABKA
mQcgAhKAnQ4cAyAACAsHBg4ODhJJEk0SPQcgBAEODg4OBSACAQ4IBCABAQIFIAIBDg4GIAEBEoCp
BSABARJJCSADARJVHQgSWQUgAgEIHAMHAQgGAAIIElkOBSABHQgIBSAAEoC1BiABEoC5HAUAABKA
vQYgARwSgMEIAAESgM0RgNEFIAASgNUHIAIBDhKA1Qi3elxWGTTgiQiJhF3NgIDMkQMGEjkCBgID
BhIUAwYSGAMGEgwDBhJdAwYSaQMGEm0DBhIgBCABAQwLIAQBCB0IHRJVElkFIAEBEl0DIAAcBAAA
EmkEAAASbQUAAQESbQQAABIgAwAAAQMoAA4DKAACAygADAMoABwDKAAIBAgAEmkECAASbQQIABIg
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18x
NDkyYzg3ZmRiODA0YzI2OTY5MmJkMzE5OGJlYTdmZQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDIzAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAsGgAAAAAAAAAAAAAymgA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAALxoAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA
AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAADsAwAAAAAAAAAAAADsAzQAAABW
AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAA
PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA
AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcA
RgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBl
AG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYA
aQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwAxADQAOQAyAGMAOAA3AGYAZABi
ADgAMAA0AGMAMgA2ADkANgA5ADIAYgBkADMAMQA5ADgAYgBlAGEANwBmAGUAAAAwAAgAAQBGAGkA
bABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBh
AGwATgBhAG0AZQAAAFMAQwBfAEYANQBBADAAOQAwADUANAA4ADEANgAzADQANgA1ADkAOABEAEEA
NAA3ADQAMwA4ADMAQgBCADAARQA1AEUANQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBw
AHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEA
TABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBh
AGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ARgA1AEEAMAA5ADAANQA0ADgAMQA2ADMANAA2ADUA
OQA4AEQAQQA0ADcANAAzADgAMwBCAEIAMABFADUARQA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBk
AHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADEANAA5ADIAYwA4ADcAZgBkAGIAOAAwADQAYwAyADYA
OQA2ADkAMgBiAGQAMwAxADkAOABiAGUAYQA3AGYAZQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgAAAMAAAA3DgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_f5a09054816346598da474383bb0e5e5</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ConnexionString,User::ConString,User::DataBaseName,User::FullSet,User::Id,User::LastServer,User::pwd,User::QueryVal,User::ServerName,User::TableName,User::Used,User::UserName1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">6E</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[ProActiveReason]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[ProActiveReason]"
                          name="ProActiveReason" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[servernamee]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[servernamee]"
                          name="servernamee" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[EndReason]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[EndReason]"
                          name="EndReason" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[AgentListen]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[AgentListen]"
                          name="AgentListen" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[EndByAgent]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[EndByAgent]"
                          name="EndByAgent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallStatusDetail]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallStatusDetail]"
                          name="CallStatusDetail" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallStatusNum]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallStatusNum]"
                          name="CallStatusNum" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallStatusGroup]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallStatusGroup]"
                          name="CallStatusGroup" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastTransfer]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastTransfer]"
                          name="LastTransfer" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastAgent]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastAgent]"
                          name="LastAgent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstAgent]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstAgent]"
                          name="FirstAgent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[InitPriority]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[InitPriority]"
                          name="InitPriority" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastQueue]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastQueue]"
                          name="LastQueue" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstQueue]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstQueue]"
                          name="FirstQueue" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastIVR]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastIVR]"
                          name="LastIVR" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstIVR]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstIVR]"
                          name="FirstIVR" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Abandon]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Abandon]"
                          name="Abandon" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Overflow]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Overflow]"
                          name="Overflow" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[NoAgent]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[NoAgent]"
                          name="NoAgent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Closed]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Closed]"
                          name="Closed" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastVirtualCamp]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastVirtualCamp]"
                          name="LastVirtualCamp" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastCampaign]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[LastCampaign]"
                          name="LastCampaign" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstCampaign]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[FirstCampaign]"
                          name="FirstCampaign" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[OverflowDuration]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[OverflowDuration]"
                          name="OverflowDuration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[RerouteDuration]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[RerouteDuration]"
                          name="RerouteDuration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[WrapupDuration]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[WrapupDuration]"
                          name="WrapupDuration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[ConvDuration]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[ConvDuration]"
                          name="ConvDuration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[TotalWaitDuration]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[TotalWaitDuration]"
                          name="TotalWaitDuration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[WaitDuration]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[WaitDuration]"
                          name="WaitDuration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[IvrDuration]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[IvrDuration]"
                          name="IvrDuration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[AcceptDuration]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[AcceptDuration]"
                          name="AcceptDuration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallDuration]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallDuration]"
                          name="CallDuration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Duration]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Duration]"
                          name="Duration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallUniversalTime]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallUniversalTime]"
                          name="CallUniversalTime" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallType]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CallType]"
                          name="CallType" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Indice]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[Indice]"
                          name="Indice" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CustomerID]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[CustomerID]"
                          name="CustomerID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[ID_Tranche]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[ID_Tranche]"
                          name="ID_Tranche" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[ID]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0].Columns[ID]"
                          name="ID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Tâche de flux de données 2.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Inputs[Entrée de colonne dérivée]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Loop Container\Tâche de flux de données 2.Paths[Sortie de colonne dérivée]"
                  endId="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                  name="Sortie de colonne dérivée"
                  startId="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée.Outputs[Sortie de colonne dérivée]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{8E8B62F0-794A-4D6E-AB38-5636A6402753}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::TableName]==&quot;CallTypes&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Staging CallType" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{22B246E1-D593-4604-B32E-93AC863A9C5F}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::TableName]==&quot;ODActions&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Staging ODActions" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 10]"
          DTS:CreationName=""
          DTS:DTSID="{0CC35CD2-07CA-4DDA-BE81-49BD7DFC43A8}"
          DTS:From="Package\Foreach Loop Container\Staging ODcalls"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 10"
          DTS:To="Package\Foreach Loop Container\Execute SQL Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 11]"
          DTS:CreationName=""
          DTS:DTSID="{A80315A6-209E-4C1D-88BE-8BBF3B1960E6}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::TableName]==&quot;ListCampaigns&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 11"
          DTS:To="Package\Foreach Loop Container\Stagig ListCampaigns" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 12]"
          DTS:CreationName=""
          DTS:DTSID="{97B33198-713F-4761-9AC3-05F8A69D6ABE}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::TableName]==&quot;ODCalls&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 12"
          DTS:To="Package\Foreach Loop Container\Tâche de flux de données 2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{426F7CEF-BCD8-4120-8999-4448C3E32E23}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::TableName]==&quot;ListCallStatus&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Staging CallStatus" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{3B6D71E9-3085-46D7-8A72-E76AAD85C9FB}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::TableName]==&quot;ListCampaigns&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Staging ListCampaign" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{6FBB1442-39FE-49C9-9FFC-9BFBAD4FCDD7}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::TableName]==&quot;ListAgents&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Loop Container\Staging ListAgents" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{8E83A4E8-2347-42A1-906E-276201D6731C}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::TableName]==&quot;ListCustomers&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach Loop Container\Customer staging" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{8F58E1F7-CADF-4ADF-A720-EB08B6163B14}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::TableName]==&quot;ODCalls&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Foreach Loop Container\Staging ODcalls" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{CFEEE915-7762-4CD2-A127-A3D61B24619F}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::TableName]==&quot;ListCallStatus&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Foreach Loop Container\Staging ListCallStatusGroup" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{229AFF74-9764-4099-9BC2-CD6A04105A96}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::TableName]==&quot;States&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Foreach Loop Container\Staging State" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{9AE64AF3-B839-40CC-A213-DBC0397273AC}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::TableName]==&quot;EndReasons&quot;"
          DTS:From="Package\Foreach Loop Container\Expression Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\Foreach Loop Container\Staging EndReason" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{4465E9B4-84D4-4102-8DAC-D6BB829FA201}"
          DTS:ObjectName="{4465E9B4-84D4-4102-8DAC-D6BB829FA201}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::Id" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{F749A63B-3893-4725-A844-6CF6CAFC15C8}"
          DTS:ObjectName="{F749A63B-3893-4725-A844-6CF6CAFC15C8}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::ServerName" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{BB9718B1-9745-41B4-9A83-F557D9CC1D78}"
          DTS:ObjectName="{BB9718B1-9745-41B4-9A83-F557D9CC1D78}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::UserName1" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{EAD3CC4E-C3D9-447C-AD40-8D84850E3147}"
          DTS:ObjectName="{EAD3CC4E-C3D9-447C-AD40-8D84850E3147}"
          DTS:ValueIndex="3"
          DTS:VariableName="User::pwd" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{8E4F1C93-3F59-44CB-B5D7-C8C74556D1F1}"
          DTS:ObjectName="{8E4F1C93-3F59-44CB-B5D7-C8C74556D1F1}"
          DTS:ValueIndex="4"
          DTS:VariableName="User::DataBaseName" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{67306A09-B341-49A8-808E-71D7F1D6E416}"
          DTS:ObjectName="{67306A09-B341-49A8-808E-71D7F1D6E416}"
          DTS:ValueIndex="5"
          DTS:VariableName="User::TableName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Zip Task"
      DTS:CreationName="Microsoft.ExecuteProcess"
      DTS:Description="Execute Process Task"
      DTS:Disabled="True"
      DTS:DTSID="{67FDBFEB-2D89-4A19-83BD-D3F730A2C6DC}"
      DTS:ExecutableType="Microsoft.ExecuteProcess"
      DTS:LocaleID="-1"
      DTS:ObjectName="Zip Task"
      DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecuteProcessData
          Executable="C:\Program Files\7-Zip\7z.exe"
          Arguments="a -t7z &quot;E:\intelcia\mynewzip1.Zip&quot; &quot;E:\intelcia\destination\exporteddata.xls&quot;" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{D3FF2619-1FF1-49D8-9EA2-4AF2F1FD0A42}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{36D89166-2280-4B27-A69C-6C1E754BA50A}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Zip Task" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{0539F0B5-F991-41AC-A755-9AF63A75326B}"
      DTS:EventID="1845522176"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="Propriété de propagation de l'événement"
          DTS:DTSID="{2B2F5370-6AE8-4A7D-8E04-3B2A1105502C}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Execute SQL Task"
          TopLeft="21.4285714285715,182.714285714286" />
        <NodeLayout
          Size="161,42"
          Id="Package\Foreach Loop Container\Customer staging"
          TopLeft="203.888888888889,594.444444444444" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Execute SQL Task"
          TopLeft="423.777777777778,367.777777777778" />
        <NodeLayout
          Size="155,42"
          Id="Package\Foreach Loop Container\Expression Task"
          TopLeft="304.206349206349,15.1428571428571" />
        <NodeLayout
          Size="179,42"
          Id="Package\Foreach Loop Container\Stagig ListCampaigns"
          TopLeft="568.714285714286,602.857142857143" />
        <NodeLayout
          Size="164,42"
          Id="Package\Foreach Loop Container\Staging CallStatus"
          TopLeft="28.674603174603,92.9047619047616" />
        <NodeLayout
          Size="131,42"
          Id="Package\Foreach Loop Container\Staging CallType"
          TopLeft="29.7857142857142,305.587301587302" />
        <NodeLayout
          Size="170,42"
          Id="Package\Foreach Loop Container\Staging EndReason"
          TopLeft="563,409.666666666667" />
        <NodeLayout
          Size="166,42"
          Id="Package\Foreach Loop Container\Staging ListAgents"
          TopLeft="92.1111111111111,528.222222222222" />
        <NodeLayout
          Size="209,42"
          Id="Package\Foreach Loop Container\Staging ListCallStatusGroup"
          TopLeft="273.777777777778,646.222222222222" />
        <NodeLayout
          Size="180,42"
          Id="Package\Foreach Loop Container\Staging ListCampaign"
          TopLeft="16.4444444444445,12.4444444444444" />
        <NodeLayout
          Size="172,42"
          Id="Package\Foreach Loop Container\Staging ODActions"
          TopLeft="592.555555555556,14" />
        <NodeLayout
          Size="173,42"
          Id="Package\Foreach Loop Container\Staging ODcalls"
          TopLeft="412.666666666667,280.333333333333" />
        <NodeLayout
          Size="142,42"
          Id="Package\Foreach Loop Container\Staging State"
          TopLeft="616.222222222223,83.7777777777778" />
        <NodeLayout
          Size="155,42"
          Id="Package\Foreach Loop Container\Tâche de flux de données"
          TopLeft="471.365079365078,508" />
        <NodeLayout
          Size="130,42"
          Id="Package\Foreach Loop Container\Tâche de flux de données 1"
          TopLeft="692.36507936508,166.634920634921" />
        <NodeLayout
          Size="209,42"
          Id="Package\Foreach Loop Container\Tâche de flux de données 2"
          TopLeft="126,178" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="324.539682539683,57.1428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-229.253968253968,248.444444444445"
              Start="0,0"
              End="-229.253968253968,240.944444444445">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.6358129850465" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.6358129850465"
                    Point2="0,51.6358129850465"
                    Point3="-4,51.6358129850465" />
                  <mssgle:LineSegment
                    End="-225.253968253968,51.6358129850465" />
                  <mssgle:CubicBezierSegment
                    Point1="-225.253968253968,51.6358129850465"
                    Point2="-229.253968253968,51.6358129850465"
                    Point3="-229.253968253968,55.6358129850465" />
                  <mssgle:LineSegment
                    End="-229.253968253968,240.944444444445" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-122.626984126984,56.6358129850465,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="459.206349206349,35.5714285714285">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="133.349206349207,0"
              Start="0,0"
              End="125.849206349207,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="125.849206349207,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="54.9246031746034,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 10]"
          TopLeft="502.222222222222,322.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.4444444444445"
              Start="0,0"
              End="0,37.9444444444445">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.9444444444445" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 11]"
          TopLeft="425.806349206349,57.1428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="232.407936507936,545.714285714286"
              Start="0,0"
              End="232.407936507936,538.214285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,160.35398686075" />
                  <mssgle:CubicBezierSegment
                    Point1="0,160.35398686075"
                    Point2="0,164.35398686075"
                    Point3="4,164.35398686075" />
                  <mssgle:LineSegment
                    End="228.407936507936,164.35398686075" />
                  <mssgle:CubicBezierSegment
                    Point1="228.407936507936,164.35398686075"
                    Point2="232.407936507936,164.35398686075"
                    Point3="232.407936507936,168.35398686075" />
                  <mssgle:LineSegment
                    End="232.407936507936,538.214285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="108.203968253968,169.35398686075,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 12]"
          TopLeft="361.660894660894,57.1428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-131.160894660894,120.857142857143"
              Start="0,0"
              End="-131.160894660894,113.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.4528220179955" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.4528220179955"
                    Point2="0,51.4528220179955"
                    Point3="-4,51.4528220179955" />
                  <mssgle:LineSegment
                    End="-127.160894660894,51.4528220179955" />
                  <mssgle:CubicBezierSegment
                    Point1="-127.160894660894,51.4528220179955"
                    Point2="-131.160894660894,51.4528220179955"
                    Point3="-131.160894660894,55.4528220179955" />
                  <mssgle:LineSegment
                    End="-131.160894660894,113.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-73.5804473304472,56.4528220179955,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="340.873015873016,57.1428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-230.198412698413,35.7619047619045"
              Start="0,0"
              End="-230.198412698413,28.2619047619045">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.48557525199854" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.48557525199854"
                    Point2="0,11.4855752519985"
                    Point3="-4,11.4855752519985" />
                  <mssgle:LineSegment
                    End="-226.198412698413,11.4855752519985" />
                  <mssgle:CubicBezierSegment
                    Point1="-226.198412698413,11.4855752519985"
                    Point2="-230.198412698413,11.4855752519985"
                    Point3="-230.198412698413,15.4855752519985" />
                  <mssgle:LineSegment
                    End="-230.198412698413,28.2619047619045" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-123.099206349206,16.4855752519985,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="304.206349206349,34.7936507936507">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-107.761904761905,0"
              Start="0,0"
              End="-100.261904761905,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-100.261904761905,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-58.1309523809524,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="348.297258297258,57.1428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-173.186147186147,471.079365079365"
              Start="0,0"
              End="-173.186147186147,463.579365079365">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,166.821302477377" />
                  <mssgle:CubicBezierSegment
                    Point1="0,166.821302477377"
                    Point2="0,170.821302477377"
                    Point3="-4,170.821302477377" />
                  <mssgle:LineSegment
                    End="-169.186147186147,170.821302477377" />
                  <mssgle:CubicBezierSegment
                    Point1="-169.186147186147,170.821302477377"
                    Point2="-173.186147186147,170.821302477377"
                    Point3="-173.186147186147,174.821302477377" />
                  <mssgle:LineSegment
                    End="-173.186147186147,463.579365079365" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-94.5930735930735,175.821302477377,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="373.539682539683,57.1428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-89.1507936507936,537.301587301587"
              Start="0,0"
              End="-89.1507936507936,529.801587301587">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,249.708808532872" />
                  <mssgle:CubicBezierSegment
                    Point1="0,249.708808532872"
                    Point2="0,253.708808532872"
                    Point3="-4,253.708808532872" />
                  <mssgle:LineSegment
                    End="-85.1507936507936,253.708808532872" />
                  <mssgle:CubicBezierSegment
                    Point1="-85.1507936507936,253.708808532872"
                    Point2="-89.1507936507936,253.708808532872"
                    Point3="-89.1507936507936,257.708808532872" />
                  <mssgle:LineSegment
                    End="-89.1507936507936,529.801587301587" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-52.5753968253968,258.708808532872,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="406.206349206349,57.1428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="92.9603174603178,223.190476190476"
              Start="0,0"
              End="92.9603174603178,215.690476190476">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,86.6444079547527" />
                  <mssgle:CubicBezierSegment
                    Point1="0,86.6444079547527"
                    Point2="0,90.6444079547527"
                    Point3="4,90.6444079547527" />
                  <mssgle:LineSegment
                    End="88.9603174603178,90.6444079547527" />
                  <mssgle:CubicBezierSegment
                    Point1="88.9603174603178,90.6444079547527"
                    Point2="92.9603174603178,90.6444079547527"
                    Point3="92.9603174603178,94.6444079547527" />
                  <mssgle:LineSegment
                    End="92.9603174603178,215.690476190476" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="38.4801587301589,95.6444079547527,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="389.873015873016,57.1428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.595238095238,589.079365079365"
              Start="0,0"
              End="-11.595238095238,581.579365079365">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,274.157793272436" />
                  <mssgle:CubicBezierSegment
                    Point1="0,274.157793272436"
                    Point2="0,278.157793272436"
                    Point3="-4,278.157793272436" />
                  <mssgle:LineSegment
                    End="-7.59523809523796,278.157793272436" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.59523809523796,278.157793272436"
                    Point2="-11.595238095238,278.157793272436"
                    Point3="-11.595238095238,282.157793272436" />
                  <mssgle:LineSegment
                    End="-11.595238095238,581.579365079365" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-13.797619047619,283.157793272436,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 8]"
          TopLeft="438.873015873016,57.1428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="248.349206349207,26.6349206349207"
              Start="0,0"
              End="248.349206349207,19.1349206349207">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,1.53570752548609" />
                  <mssgle:CubicBezierSegment
                    Point1="0,1.53570752548609"
                    Point2="0,5.53570752548609"
                    Point3="4,5.53570752548609" />
                  <mssgle:LineSegment
                    End="244.349206349207,5.53570752548609" />
                  <mssgle:CubicBezierSegment
                    Point1="244.349206349207,5.53570752548609"
                    Point2="248.349206349207,5.53570752548609"
                    Point3="248.349206349207,9.53570752548609" />
                  <mssgle:LineSegment
                    End="248.349206349207,19.1349206349207" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="116.174603174604,10.5357075254861,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 9]"
          TopLeft="422.539682539683,57.1428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="225.460317460317,352.52380952381"
              Start="0,0"
              End="225.460317460317,345.02380952381">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,109.219325686479" />
                  <mssgle:CubicBezierSegment
                    Point1="0,109.219325686479"
                    Point2="0,113.219325686479"
                    Point3="4,113.219325686479" />
                  <mssgle:LineSegment
                    End="221.460317460317,113.219325686479" />
                  <mssgle:CubicBezierSegment
                    Point1="221.460317460317,113.219325686479"
                    Point2="225.460317460317,113.219325686479"
                    Point3="225.460317460317,117.219325686479" />
                  <mssgle:LineSegment
                    End="225.460317460317,345.02380952381" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="104.730158730159,118.219325686479,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="843,743"
          Size="843,786"
          Id="Package\Foreach Loop Container"
          TopLeft="290.746031746031,40" />
        <NodeLayout
          Size="119,42"
          Id="Package\Zip Task"
          TopLeft="42.2380952380947,627.333333333333" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="184.428571428572,203.714285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="106.31746031746,99.6190476190473"
              Start="0,0"
              End="98.8174603174595,99.6190476190473">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="59.6608865994336,0" />
                  <mssgle:CubicBezierSegment
                    Point1="59.6608865994336,0"
                    Point2="63.6608865994336,0"
                    Point3="63.6608865994336,4" />
                  <mssgle:LineSegment
                    End="63.6608865994336,95.6190476190473" />
                  <mssgle:CubicBezierSegment
                    Point1="63.6608865994336,95.6190476190473"
                    Point2="63.6608865994336,99.6190476190473"
                    Point3="67.6608865994336,99.6190476190473" />
                  <mssgle:LineSegment
                    End="98.8174603174595,99.6190476190473" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="290.746031746031,562.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-129.507936507936,85.6666666666664"
              Start="0,0"
              End="-122.007936507936,85.6666666666664">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-47.9610308995783,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-47.9610308995783,0"
                    Point2="-51.9610308995783,0"
                    Point3="-51.9610308995783,4" />
                  <mssgle:LineSegment
                    End="-51.9610308995783,81.6666666666664" />
                  <mssgle:CubicBezierSegment
                    Point1="-51.9610308995783,81.6666666666664"
                    Point2="-51.9610308995783,85.6666666666664"
                    Point3="-55.9610308995783,85.6666666666664" />
                  <mssgle:LineSegment
                    End="-122.007936507936,85.6666666666664" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Customer staging">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Customer staging\Script Component"
          TopLeft="107,232" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Customer staging\Destination OLE DB"
          TopLeft="364,63" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Customer staging.Paths[Output 0]"
          TopLeft="188.5,232">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="261,-127"
              Start="0,0"
              End="261,-119.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-59.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-59.5"
                    Point2="0,-63.5"
                    Point3="4,-63.5" />
                  <mssgle:LineSegment
                    End="257,-63.5" />
                  <mssgle:CubicBezierSegment
                    Point1="257,-63.5"
                    Point2="261,-63.5"
                    Point3="261,-67.5" />
                  <mssgle:LineSegment
                    End="261,-119.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Customer staging\Destination OLE DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Staging CallStatus">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Staging CallStatus\Script Component"
          TopLeft="56,112" />
        <NodeLayout
          Size="155,42"
          Id="Package\Foreach Loop Container\Staging CallStatus\Colonne dérivée"
          TopLeft="228,206" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB"
          TopLeft="361,114" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Staging CallStatus.Paths[Sortie de colonne dérivée]"
          TopLeft="330,206">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="116.5,-50"
              Start="0,0"
              End="116.5,-42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-16.3065134099617" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-16.3065134099617"
                    Point2="0,-20.3065134099617"
                    Point3="4,-20.3065134099617" />
                  <mssgle:LineSegment
                    End="112.5,-20.3065134099617" />
                  <mssgle:CubicBezierSegment
                    Point1="112.5,-20.3065134099617"
                    Point2="116.5,-20.3065134099617"
                    Point3="116.5,-24.3065134099617" />
                  <mssgle:LineSegment
                    End="116.5,-42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Staging CallStatus.Paths[Output 0]"
          TopLeft="137.5,154">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="168,52"
              Start="0,0"
              End="168,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22"
                    Point2="0,26"
                    Point3="4,26" />
                  <mssgle:LineSegment
                    End="164,26" />
                  <mssgle:CubicBezierSegment
                    Point1="164,26"
                    Point2="168,26"
                    Point3="168,30" />
                  <mssgle:LineSegment
                    End="168,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Staging CallStatus\Destination OLE DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Staging CallType">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Staging CallType\CallTypeStaging"
          TopLeft="411,129" />
        <NodeLayout
          Size="119,42"
          Id="Package\Foreach Loop Container\Staging CallType\CallType"
          TopLeft="82,125" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Staging CallType.Paths[Output 0]"
          TopLeft="201,148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="210,0"
              Start="0,0"
              End="202.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="202.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Staging CallType\CallTypeStaging">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Staging EndReason">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="166,42"
          Id="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging"
          TopLeft="486,91" />
        <NodeLayout
          Size="131,42"
          Id="Package\Foreach Loop Container\Staging EndReason\EndReason"
          TopLeft="234,90" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Staging EndReason.Paths[Outputcol]"
          TopLeft="365,111.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="121,0"
              Start="0,0"
              End="113.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="113.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Staging EndReason\EndReasonStaging">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Staging ListAgents">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB"
          TopLeft="371,190" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Staging ListAgents\Script Component"
          TopLeft="115,105" />
        <NodeLayout
          Size="155,42"
          Id="Package\Foreach Loop Container\Staging ListAgents\Colonne dérivée"
          TopLeft="359,89" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Staging ListAgents.Paths[Sortie de colonne dérivée]"
          TopLeft="436.5,131">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20,59"
              Start="0,0"
              End="20,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5"
                    Point2="0,29.5"
                    Point3="4,29.5" />
                  <mssgle:LineSegment
                    End="16,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="16,29.5"
                    Point2="20,29.5"
                    Point3="20,33.5" />
                  <mssgle:LineSegment
                    End="20,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Staging ListAgents.Paths[Output 0]"
          TopLeft="278,126">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="81,-16"
              Start="0,0"
              End="73.5,-16">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="36.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="36.5,0"
                    Point2="40.5,0"
                    Point3="40.5,-4" />
                  <mssgle:LineSegment
                    End="40.5,-12" />
                  <mssgle:CubicBezierSegment
                    Point1="40.5,-12"
                    Point2="40.5,-16"
                    Point3="44.5,-16" />
                  <mssgle:LineSegment
                    End="73.5,-16" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Staging ListAgents\Destination OLE DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Staging ListCallStatusGroup">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB"
          TopLeft="496,162" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Staging ListCallStatusGroup\Script Component"
          TopLeft="106,137" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Staging ListCallStatusGroup.Paths[Output 0]"
          TopLeft="269,158">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="227,25"
              Start="0,0"
              End="219.5,25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="109.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="109.5,0"
                    Point2="113.5,0"
                    Point3="113.5,4" />
                  <mssgle:LineSegment
                    End="113.5,21" />
                  <mssgle:CubicBezierSegment
                    Point1="113.5,21"
                    Point2="113.5,25"
                    Point3="117.5,25" />
                  <mssgle:LineSegment
                    End="219.5,25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Staging ListCallStatusGroup\Destination OLE DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Staging ListCampaign">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Staging ListCampaign\Script Component"
          TopLeft="146,145" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB"
          TopLeft="467,152" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Staging ListCampaign.Paths[Output 0]"
          TopLeft="309,169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="158,0"
              Start="0,0"
              End="150.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="150.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Staging ListCampaign\Destination OLE DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Staging ODActions">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="147,42"
          Id="Package\Foreach Loop Container\Staging ODActions\actionsStaging"
          TopLeft="378,76" />
        <NodeLayout
          Size="112,42"
          Id="Package\Foreach Loop Container\Staging ODActions\actions"
          TopLeft="68,72" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Staging ODActions.Paths[Outputcol]"
          TopLeft="180,95">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="198,0"
              Start="0,0"
              End="190.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="190.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Staging ODActions\actionsStaging">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Staging ODcalls">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="155,42"
          Id="2"
          TopLeft="425,186" />
        <NodeLayout
          Size="171,42"
          Id="13"
          TopLeft="379,71" />
        <EdgeLayout
          Id="178"
          TopLeft="502.5,186">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-38,-73"
              Start="0,0"
              End="-38,-65.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-32.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-32.5"
                    Point2="0,-36.5"
                    Point3="-4,-36.5" />
                  <mssgle:LineSegment
                    End="-34,-36.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-34,-36.5"
                    Point2="-38,-36.5"
                    Point3="-38,-40.5" />
                  <mssgle:LineSegment
                    End="-38,-65.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="163,42"
          Id="127"
          TopLeft="155,152" />
        <EdgeLayout
          Id="177"
          TopLeft="318,173">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107,34"
              Start="0,0"
              End="99.5,34">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="49.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="49.5,0"
                    Point2="53.5,0"
                    Point3="53.5,4" />
                  <mssgle:LineSegment
                    End="53.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="53.5,30"
                    Point2="53.5,34"
                    Point3="57.5,34" />
                  <mssgle:LineSegment
                    End="99.5,34" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Staging State">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Staging State\Destination OLE DB"
          TopLeft="310,96" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Staging State\Script Component"
          TopLeft="105,231" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Staging State.Paths[Output 0]"
          TopLeft="186.5,231">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="209,-93"
              Start="0,0"
              End="209,-85.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-42.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-42.5"
                    Point2="0,-46.5"
                    Point3="4,-46.5" />
                  <mssgle:LineSegment
                    End="205,-46.5" />
                  <mssgle:CubicBezierSegment
                    Point1="205,-46.5"
                    Point2="209,-46.5"
                    Point3="209,-50.5" />
                  <mssgle:LineSegment
                    End="209,-85.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Staging State\Destination OLE DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Tâche de flux de données">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="159,42"
          Id="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel"
          TopLeft="227,176" />
        <NodeLayout
          Size="150,42"
          Id="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB"
          TopLeft="32,43" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Tâche de flux de données.Paths[Sortie de source OLE DB]"
          TopLeft="107,85">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="199.5,91"
              Start="0,0"
              End="199.5,83.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.5"
                    Point2="0,45.5"
                    Point3="4,45.5" />
                  <mssgle:LineSegment
                    End="195.5,45.5" />
                  <mssgle:CubicBezierSegment
                    Point1="195.5,45.5"
                    Point2="199.5,45.5"
                    Point3="199.5,49.5" />
                  <mssgle:LineSegment
                    End="199.5,83.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Tâche de flux de données\Destination Excel">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Tâche de flux de données\Source OLE DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Tâche de flux de données 1">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Tâche de flux de données 1\Script Component"
          TopLeft="113,27" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB"
          TopLeft="361,27" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Tâche de flux de données 1.Paths[Outputcol]"
          TopLeft="276,48">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="85,0"
              Start="0,0"
              End="77.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="77.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Tâche de flux de données 1\Destination OLE DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Tâche de flux de données 2">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB"
          TopLeft="577,82" />
        <NodeLayout
          Size="155,42"
          Id="Package\Foreach Loop Container\Tâche de flux de données 2\Colonne dérivée"
          TopLeft="330,175" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Tâche de flux de données 2\Script Component"
          TopLeft="60,141" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Tâche de flux de données 2.Paths[Sortie de colonne dérivée]"
          TopLeft="407.5,175">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="255,-51"
              Start="0,0"
              End="255,-43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-21.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-21.5"
                    Point2="0,-25.5"
                    Point3="4,-25.5" />
                  <mssgle:LineSegment
                    End="251,-25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="251,-25.5"
                    Point2="255,-25.5"
                    Point3="255,-29.5" />
                  <mssgle:LineSegment
                    End="255,-43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Tâche de flux de données 2.Paths[Output 0]"
          TopLeft="223,162">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107,34"
              Start="0,0"
              End="99.5,34">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="49.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="49.5,0"
                    Point2="53.5,0"
                    Point3="53.5,4" />
                  <mssgle:LineSegment
                    End="53.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="53.5,30"
                    Point2="53.5,34"
                    Point3="57.5,34" />
                  <mssgle:LineSegment
                    End="99.5,34" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Tâche de flux de données 2\Destination OLE DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>